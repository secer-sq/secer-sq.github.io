<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>故园遗剑</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-11-08T13:40:42.394Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>mys3t</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>开源靶场VULFOCUS</title>
    <link href="http://yoursite.com/2020/11/08/%E5%BC%80%E6%BA%90%E9%9D%B6%E5%9C%BAVULFOCUS/"/>
    <id>http://yoursite.com/2020/11/08/开源靶场VULFOCUS/</id>
    <published>2020-11-08T12:40:50.000Z</published>
    <updated>2020-11-08T13:40:42.394Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p><img src="/2020/11/08/%E5%BC%80%E6%BA%90%E9%9D%B6%E5%9C%BAVULFOCUS/image-20201108214031600.png" alt="image-20201108214031600"></p><h2 id="靶场GitHub原文"><a href="#靶场GitHub原文" class="headerlink" title="靶场GitHub原文"></a>靶场GitHub原文</h2><h4 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h4><p><a href="https://github.com/fofapro/vulfocus" target="_blank" rel="noopener">https://github.com/fofapro/vulfocus</a></p><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p><img src="/2020/11/08/%E5%BC%80%E6%BA%90%E9%9D%B6%E5%9C%BAVULFOCUS/image-20201108204639762.png" alt="image-20201108204639762"></p><p>Vulfocus 是一个漏洞集成平台，将漏洞环境 docker 镜像，放入即可使用，开箱即用。</p><p>Vulfocus 官网：<a href="https://fofapro.github.io/vulfocus/" target="_blank" rel="noopener">https://fofapro.github.io/vulfocus/</a>  官网带有部分漏洞的writeup。</p><p>在线演示：<a href="http://vulfocus.fofa.so/" target="_blank" rel="noopener">http://vulfocus.fofa.so/</a></p><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>漏洞靶场是目前每个安全人员以及想学习信息安全的人必备的东西，但目前商业化产品居多，还有一些类似 dvwa、 sqli-labs 这类的开源项目，但是漏洞环境比较固定，使用完一次后就失去其作用。搭建的成本过高，每次启动的流程会比较繁琐，甚至很多场景是不满足的，之前关于漏洞环境镜像使用多的是 vulhub，但是作为企业、高校等以及相关的培训，单纯的漏洞环境不一定能满足使用的需求，所以我们基于当下的一些靶场项目做出了小小的改进来符合我们的一些需求，比如增加 flag 的形式，来满足一些考核与验证的需求，可以对我们内部人员能力进行考核，于是 Vulfocus 就诞生了。</p><h4 id="认识Vulfocus"><a href="#认识Vulfocus" class="headerlink" title="认识Vulfocus"></a>认识Vulfocus</h4><p>因为 Vulfocus 一个漏洞集成平台，所以可以无限向里添加漏洞环境没有限制，前提是你的内存足够大。因为漏洞环境是docker镜像的原因每次重新启动漏洞环境都会还原，不用出现你会对环境造成破坏下次无法启动的现象。</p><p>Vulfocus 的 docker 仓库 <a href="https://hub.docker.com/u/vulfocus" target="_blank" rel="noopener">https://hub.docker.com/u/vulfocus</a></p><h4 id="Vulfocus的特性"><a href="#Vulfocus的特性" class="headerlink" title="Vulfocus的特性"></a>Vulfocus的特性</h4><pre><code>启动：一键漏洞环境启动，方便简单。自带 Flag 功能：每次启动 flag 都会自动更新，明确漏洞是否利用成功。带有计分功能也可适用于相关安全人员能力的考核。兼容 Vulhub、Vulapps 中所有漏洞镜像。</code></pre><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>1、安装完成后，访问80端口</p><p>2、用设置好的管理员账户登录</p><p>3、首页为漏洞集成页面，刚开始是没有漏洞镜像的需要从 <a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a> 网站拉取镜像，或自己以tar包的形式上传。</p><p>漏洞镜像的拉取和上传（需管理员权限）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在进行管理中，添加功能</span><br><span class="line"></span><br><span class="line">分别填入漏洞名称、镜像、rank、描述</span><br></pre></td></tr></table></figure><p>镜像又分为文件和文本：</p><p>文本：是从 <a href="https://hub.docker.com/u/vulfocus" target="_blank" rel="noopener">https://hub.docker.com/u/vulfocus</a> 官网拉取镜像。内容为如： vulfocus/webmin-cve_2019_15107 。 </p><p>文件：本地漏洞镜像打成tar包的形式进行上传。</p><p>4、下载完成后点击启动即可。</p><p>5、镜像启动后，会在环境里写入一个 flag （默认 flag 会写入 /tmp/ 下），读取到 flag 后填入 flag 窗口，镜像会自动关闭，如需重新启动，需强刷一下，然后再次点击启动即可。</p><h4 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h4><p>1、镜像启动后立即访问地址失败？</p><p>根据镜像的大小，启动时间会有不同的延迟，一般在几秒以内。</p><p>2、提交完 flag 后会有卡住？</p><p>在提交完正确flag后，会进行镜像关闭的动作，所以会有几秒的延迟。</p><p>3、拉取镜像时一直卡在哪里</p><p>由于网络延迟或镜像太大的原因时间会长一点；或者镜像名称填错，也会卡在哪里，建议强刷一下。</p><p>4、Centos 无权限操作Docker</p><p><a href="https://github.com/fofapro/vulfocus/issues/6" target="_blank" rel="noopener">https://github.com/fofapro/vulfocus/issues/6</a></p><p>解决方法之一：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --privileged -p 80:80 -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock -e VUL_IP&#x3D;XX.XX.XX.XX vulfocus&#x2F;vulfocus</span><br></pre></td></tr></table></figure><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><p>由于VULFOCUS靶场是在docker中，所以需要先安装docker。</p><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><p>CentOS-7.4-x86_64-DVD-1708</p><p><img src="/2020/11/08/%E5%BC%80%E6%BA%90%E9%9D%B6%E5%9C%BAVULFOCUS/image-20201108211626532.png" alt="image-20201108211626532"></p><h4 id="设置仓库"><a href="#设置仓库" class="headerlink" title="设置仓库"></a>设置仓库</h4><p>在新主机上首次安装 Docker Engine-Community 之前，需要设置 Docker 仓库。之后，可以从仓库安装和更新 Docker。</p><p>安装所需的软件包。yum-utils 提供了 yum-config-manager ，并且 device mapper 存储驱动程序需要 device-mapper-persistent-data 和 lvm2。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils \</span><br><span class="line">     device-mapper-persistent-data \</span><br><span class="line">     lvm2</span><br></pre></td></tr></table></figure><p>使用以下命令来设置稳定的仓库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用官方源地址（比较慢）：</span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br></pre></td></tr></table></figure><p>可以选择国内的一些源地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">阿里云</span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br></pre></td></tr></table></figure><p>这里选择用的是清华大学的源：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">清华大学源</span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br></pre></td></tr></table></figure><h4 id="安装-Docker-Engine-Community"><a href="#安装-Docker-Engine-Community" class="headerlink" title="安装 Docker Engine-Community"></a>安装 Docker Engine-Community</h4><p>安装最新版本的 Docker Engine-Community 和 containerd：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><p>如果提示接受 GPG 密钥，选是。</p><h4 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><h4 id="验证是否正确安装"><a href="#验证是否正确安装" class="headerlink" title="验证是否正确安装"></a>验证是否正确安装</h4><p>通过运行 hello-world 映像来验证是否正确安装了 Docker Engine-Community 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure><h4 id="配置Docker镜像加速器"><a href="#配置Docker镜像加速器" class="headerlink" title="配置Docker镜像加速器"></a>配置Docker镜像加速器</h4><p>创建并编辑文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cd &#x2F;etc&#x2F;docker&#x2F;</span><br><span class="line">[root@localhost docker]#</span><br><span class="line">[root@localhost docker]# ls</span><br><span class="line">key.json</span><br><span class="line">[root@localhost docker]#</span><br><span class="line">[root@localhost docker]# pwd</span><br><span class="line">&#x2F;etc&#x2F;docker</span><br><span class="line">[root@localhost docker]#</span><br><span class="line">[root@localhost docker]# vim daemon.json</span><br></pre></td></tr></table></figure><p>在daemon.json中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#阿里云加速</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;almtd3fa.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/11/08/%E5%BC%80%E6%BA%90%E9%9D%B6%E5%9C%BAVULFOCUS/image-20201108211923269.png" alt="image-20201108211923269"></p><p>重启服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">systemctl restart docker.service</span><br></pre></td></tr></table></figure><p>验证：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br></pre></td></tr></table></figure><p><img src="/2020/11/08/%E5%BC%80%E6%BA%90%E9%9D%B6%E5%9C%BAVULFOCUS/image-20201108212132127.png" alt="image-20201108212132127"></p><h2 id="安装Vulfocus靶场"><a href="#安装Vulfocus靶场" class="headerlink" title="安装Vulfocus靶场"></a>安装Vulfocus靶场</h2><h4 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull vulfocus&#x2F;vulfocus:latest</span><br></pre></td></tr></table></figure><h4 id="创建一个新容器"><a href="#创建一个新容器" class="headerlink" title="创建一个新容器"></a>创建一个新容器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker create -p 80:80 -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock -e VUL_IP&#x3D;xxx.xxx.xxx.xxx vulfocus&#x2F;vulfocus</span><br><span class="line"></span><br><span class="line">创建参数说明：</span><br><span class="line"></span><br><span class="line">1.-v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock 为 docker 交互连接。</span><br><span class="line">2. -e DOCKER_URL 为 Docker 连接方式，默认通过 unix:&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock 进行连接，也可以通过     tcp:&#x2F;&#x2F;xxx.xxx.xxx.xxx:2375 进行连接（必须开放 2375 端口）。</span><br><span class="line">3. -v &#x2F;vulfocus-api&#x2F;db.sqlite3:db.sqlite3 映射数据库为本地文件。</span><br><span class="line">4. -e VUL_IP&#x3D;xxx.xxx.xxx.xxx 为 Docker 服务器 IP ，不能为 127.0.0.1。</span><br></pre></td></tr></table></figure><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker start &lt;container id&gt;</span><br><span class="line">docker start xxef27062623b2b988e45445846e0639bf7cxxxxxxxx116e3xxxxxx47xxx</span><br></pre></td></tr></table></figure><h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><p>1、直接访问部署的服务器ip:80</p><p>2、默认账户密码为 admin/admin,记得修改密码</p><p><img src="/2020/11/08/%E5%BC%80%E6%BA%90%E9%9D%B6%E5%9C%BAVULFOCUS/image-20201108213008717.png" alt="image-20201108213008717"></p><h4 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h4><p><img src="/2020/11/08/%E5%BC%80%E6%BA%90%E9%9D%B6%E5%9C%BAVULFOCUS/image-20201108213419040.png" alt="image-20201108213419040"></p><p>并可对下载漏洞镜像进行更改名称和描述</p><p><img src="/2020/11/08/%E5%BC%80%E6%BA%90%E9%9D%B6%E5%9C%BAVULFOCUS/image-20201108213524301.png" alt="image-20201108213524301"></p><h4 id="启动漏洞环境"><a href="#启动漏洞环境" class="headerlink" title="启动漏洞环境"></a>启动漏洞环境</h4><p><img src="/2020/11/08/%E5%BC%80%E6%BA%90%E9%9D%B6%E5%9C%BAVULFOCUS/image-20201108213646039.png" alt="image-20201108213646039"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="横贯八方" scheme="http://yoursite.com/categories/%E6%A8%AA%E8%B4%AF%E5%85%AB%E6%96%B9/"/>
    
    
      <category term="横贯八方" scheme="http://yoursite.com/tags/%E6%A8%AA%E8%B4%AF%E5%85%AB%E6%96%B9/"/>
    
  </entry>
  
  <entry>
    <title>屠龙-沟通篇</title>
    <link href="http://yoursite.com/2020/11/08/%E5%B1%A0%E9%BE%99-%E6%B2%9F%E9%80%9A%E7%AF%87/"/>
    <id>http://yoursite.com/2020/11/08/屠龙-沟通篇/</id>
    <published>2020-11-08T11:16:53.000Z</published>
    <updated>2020-11-08T13:55:25.320Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">此处输入密码</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="492f2d1cdd4be4cd7758fd895c199d1a210fa88499d69fbd603c111b6088fe14">9bedb90e105b2699093c03b9eca185eee3b37e440336604357aa1911445adadcbfbc1fd26c17f576c181c1e303fb2050b33c1e555a690d9b30c2177989553afbf826a29b8cf5158c2ac1856f1f2a04491607e139802680fe4865d8d12882568eb241978eb54e6ab5c3ceacc6adf502319ba95c2e04f5a3be07431f753ff88765c201c1a53992c95db6da6f59f3a1f8adf115062b22936c27951aff07e885bb0192253912399a2172a7a064fc9af5f041bb5f15e51bbfa60063ee4734c539abad9ae7b9df4cba84b1930c571aabeb5a225cd4a7634fc78842ae3add507e3447e03c276114b019cc2811dc526b27e770fbc3a772f70eb73d6ec2b996480a6cb294b4659eed8a178457649ba9f978dfbc5287b4675283eea388fe02e3d2cfab2d944ce347fcce6d6d1a07c4725b8d3eeb018cf4019902a82d7522f29edede8a40232d8bc29d179d07ad39d6b289def3a71ff7ba8547f26a9a2d4d28517bd2115b974dd7b37bab14cadbf503f6e51b60e1c1ba18f0dff62ff5316da40a51d42079813a52ca374bb13a150027f303f4d65f61d2b952297d6cc50c0a140b87b10a239731e2b81d3605b3a9b1e4fa48dc86c975ee62f58684604545e31121343244c19665ed31db8a65166a6102c3ade18d3a719f643e3316e60f5767e53737c53361137b1b528e6be9b573943ad0393022e60bbd874a7380244b647903481bb820976390abf7291e01dfabbd19b514acd5e1b4c04ecc5aa7f28dac0314f1c27a5f320d5510bf0747e68059ab5896691b93b8d691041c1613117965413663646884975f8c36430e62a9e707db107d7e5a067750d00296fae89672c084d59dd8d31001ee1768947afa97a24d1b424c097f62ee02555097720aa8fb62f50968793b1d982496620f5f8395c8bd721df262ac48078d9fafaa453c7539cb6fb749df0fb7cb86265b9c2ebf9cc580a118579e232811274b5ccd4c77e09cc51ad95c6b7ed5ff53c432f6894d4bba33d625c7e39da3ca01f2446ef4237f0c069a8b136af0077a1d4cb3864bceb88a9e1f5eacccaf16925019e979d0ea7d9fb4ca283e920a999696505fcbbe62edae083a29e86cf0d18cebf60f916040dd888de4b3f822f610d754d9ee107058b2bd8df2274fb1330288fac7955a62dc1158d9a44f5e6ddcb84be0141fdd7c4c7a128429555e3e49897616ff3cdd78440ad8e0a4625c919b699c2e05cad7b2d6d2f909788ca64fb2f6d435a61bc9ce36fc0f9f46121b0638e946bba15aa5c85dfb0a7e17d78703385ce6d63d945970cfe6bc251f35512fdd5ac098a3d1bdf3f4e326730285ea6cd53f0ad891f2adb4536544cac14849cac23ddbfd33d6eb162d7259a7e32408de2e33530232e87177b3de23f9a2054c622f687320b395001b639afe5f25612fe12bf67e2b3ddb9c20fba544e23e3c7552f597351faf58cc105fdb4a0c5c7f297375539c5f02604f5f98e39dded3481e22210bfce4881a0e794e8d769f71368f93f623238145272fa1f1de3e5396ccdd64dea10cf4fb5e37ee05622fb6b16ecf13b9508ddd7d24d4082efb98d89c87096147f48e627134289acebf6ed2a831e1a50076e4df907800dc4f501faab47b2c6531ea3f31794ad79bcef4f31d482f3a35bd4e5ba8b903ad1ecfd96697428b79f13e9e3b5e28997581c17c43d1ac1ebbce68ce854ee2806f5dd77d9cf052f7ef6896d9ad54804af32c2cb8b8ddbb7814a4cd372a058e10a8d9f43420afd756f941aa00c539e1ce9c5e04322bfd58f72d31c118b698c930224ea357fcf0b34ed2b8152e2fa733110d7c1a23520e97978cc09539397230151630164c57a6c59afd945a758d04bf09c3ac92c952fb3eebabe0dff4c55927dff257161a93fbd07c9b7fe355d3d8d9fbc18449f58fe9e3a8319a06bb23c5c8b4e20c64be8183d3bb9fd97544b7afb97e0fd0cdcb1d097535c6a50c8c6793b45f43afb31ec28982e8eec24ba69bc9329c930cd9ec5873abe74a556e5fd9107554eab746ae8ad0d5a4e32c47509021bafe47b963b4c6703d6ec33f12018687ba88e91b627ee9a99381a53c57b590fa50ba9cd5ad12f84ceddb7283325c68e076689c2a686c7c5fedb2f30bd57e526154ef04854f9f0b5f0774ef028a6f9acf5d9714cbde8a4995b517e01e6e53e36728169e261b86b11081b36ab9dfd34cadac7e538bb83016115df3fe463e553450f5b92fd8140ea168d4c30664088aaa838859d4ef36892be3e28b4068ad37485e56ec449f199d763116fa3cb52ac1067ac89fab425ae5acfc3d3ef6d25063f300c855b93e8d8632fc7af7462da012fa992b430ee3d71acd12bbdf8d1e47fa6fbc4742d168cc82fdb5dcd5717b5a46444bd62dfae84eb5acf109f0cca95878a156e952181a6e29fe20908931a09adc6771e0a2e1a1778aaaa7756a27e2857be4fc119f2c6f2b71f8a4a35f75b01f311dd6e6e9ae59c9b85907d02743fd60bc049512161d63dae4ac99a836ba9be75a66749a98662e3cd7ea36bc09c06b39787fdd444a3384643a7056040f38213a38a127388cca735caad2253cf3fa13ecd3a68cd47868a99b2201aeab26e8b0d966e939b867059122a22a9565f81fa984fcca879ca96fe1f04c8db110fcb88657bdc8484a640673157a87d9683a76ddd23153933d8feeaa94d5a085c7115c26d3c899f0febe647245a846b246f222f5d6736444ff79fdf2580fbfd456c4ae0c31078d9acb3c656747b4c216553d783b1bc65372ed3d718e43d107a3052e8f82df88de38930c52a277b67280a9ac906ac18c80f7f913fb0585a74c08d1568c2b5897f78d8b58f3b66a9b869a54afb61024ff94a442a43978851e7c05295e25b9b77adaa2c3ede6d330ac43f0c7cb493e49a2468c1dd76f620e585794c1a1157d44b1192722b5619086ecaa0138d6722190beeda21c9ab73efb708ae5ca169394b8d8695914fd74b04214226efa57e7802b09dec15cabc6e36eb97dea3695986d9ca87f43e78ebacec19ddd90bc11f8413bb22336702743187162be9e89be3cfc398d8e546d87e280c3806332de6dac49ae5937e0d9eff04d173b13e2a1811f0b4e400d334648803730ba465c845c63f75cbf8904df51904c44bb1f95f9a6b9332a34dada762cb15782549cd3c70ac30470ee8a5a846529c8a4056ae2190fbd21d0a90c4d71717676e44b32d439550adf3757cbdbe1b53b93817b029ca142532796ef0c8e7d98c6e2c5a5e475082390086d844fdc262f76575386f3e8650a707dd0790733a5f99d4d86fe424e08162c48638bd1666b01434c1679f2161da4fa51961f998c82760521c13b612009212370ffa79f5f87b2908155324465dcb1ec885bfb17cf8d9b7280df7bccd425fcd302dbdcee047f112a60248d3f43da22d73cae5acc1d1700e92c77cf36e60a209d64615407f0a25b598c64ca8c10bd41a16ad12197b542e92cd533f08ef87011afbb1329db128d6e3896f447e759e9bc5605f3d57d926b7f80e6d31630f47a77c854113e9fd8caa5443664ea15cae6a2d09edcc2bb2e9fe5ec3c7612b689ce52e54c48b6e2169a2c4585e85d4a8fc7b9c91b94ebabfae4f8b4c966b071611197910d30c6218ca1ed9c094b760bb7059ccb0ba51b7b9e78112fd3000c28b986ee24316ede9c6aebadbc0c8afa88ac36f249b2e7a7e6f734ce0d852a5cd7fd4aacd760325176c3938bdf2afbb464be33fd018168bd8faf545578931da3706129af85ef8c6d956a8e63e93fe0c133ba4dd1a4b082c6a9a8381852b9a8884d0f888940420871a750dc428399a441c66c2808f2bbe3273ad10683fcf16a723e7718788882f3e05acc1ddd5995615573281d725c0c1bee28f91b01c3bbfa1012895ef272eb59859c277f19c30388b79ed4ae84326e475cdeec4c3adb229a1ddac70f8eab1ec594aea0</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      本文有密码保护
    
    </summary>
    
      <category term="百步飞剑" scheme="http://yoursite.com/categories/%E7%99%BE%E6%AD%A5%E9%A3%9E%E5%89%91/"/>
    
    
      <category term="百步飞剑" scheme="http://yoursite.com/tags/%E7%99%BE%E6%AD%A5%E9%A3%9E%E5%89%91/"/>
    
  </entry>
  
  <entry>
    <title>屠龙-概念与模式</title>
    <link href="http://yoursite.com/2020/11/08/%E5%B1%A0%E9%BE%99-%E6%A6%82%E5%BF%B5%E4%B8%8E%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2020/11/08/屠龙-概念与模式/</id>
    <published>2020-11-08T10:22:54.000Z</published>
    <updated>2020-11-08T13:54:12.680Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">此处输入密码</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="c131b74568f1967b777059318cec11ecb5b8415e544f9ab0629f0601f2fd1239">9bedb90e105b2699093c03b9eca185eee3b37e440336604357aa1911445adadcbfbc1fd26c17f576c181c1e303fb2050b33c1e555a690d9b30c2177989553afb20fd056f332abc121ff80655c019879427d6e2b9af547b7467424421de7dff5c40e8ccf01a62b8307c31c48bf89613a6348b37c90100686d11d97aa75b7e51b5ce58c60e20a96b73d99209c81cf617226de5617b6fedb818b9bae75cbca53b9be1396df6f87edeae93cc1099bf8506f2450c61df92ba067d17d3066105dd31792e8c5f30d71b1cd49f8e97df3ef30d4d134b90a8875b15273b12c08dd6810f8e96dc32fd1bd9e1163df7da8c87576e7b25ac9485d756f55a8734a0ca699df903e446626807491af8c25352341f6fa7187488285580bdb7e4dbc2c67ed0814999100ec45fe4ae7abb2b23311f897e5f764d026c3e67ad6397dd67cd70e7a89b177e57a25a9345547bc91aeb95121f74880ab2058664c102271dbfb555ba592b258d476c0fffc61b1bb55441852fea8c929ed20cd7eab5a672e815c726cbf24acc7c57bfbf34ba67d50f36fbc229aefcafdaeb7f4db9450e8873aa4271d4092a9d389ffb0bc3f66f1d0112a436c2a2629e21235efbad38d2ba3194dffeeb2b65afc69e11b25492dd9a7c4897cfde0f580824757b3b1cec378aa1f34929c259693f9b700aac427d338d7984d8877bae189df60f3f3259d131ee2f1ec0f1c37dd79d6cbda2dd3169024dd2084800f1753bbb3780a9da86acabac2a3c47ef7fa2a1fcf406745893d72e10411e97b8228cae1372e7840c6896565672287055d79f38931283fb5e0500c36e5912ded23fa410ebccc3aec83f00ba5c2f305b35aaff981e7fd9ebaaa5f41c149335f32160d7f609ec4cf6357d48174fd72be58bf4a1578e5e26bf5af3dde7a201e65623ce0fb8bb46514c330ee5e3657849eaab2cce25772d925376dd2c1322d373158376355149571a535719efc2ff053c9b0258a7cce39083b93bb7a6bc30198751169866cff7974971fc02ea4bcf643f17eee2e9d22dab22aab3dc5f0e17e6b64e3dbee6607cc51c2c87b2147e9050f446b6ecd9cc34f874f1ef0807e5417ba8a4fd8be14ab7c46640df07d8fe216b4d9fbfc21c468e0d84fdc0206219651ecd802f36cb493adf51a22f87e86f6c4c380f643731e384e314e452ab6c98190c07aab569933df6037fd4186e74a6d57fac1a54309e7b80a903dbbc5cc918acec9fa1d536b8cc58a09bfed963b999e02c336fcc89f930b947505acc20822a9bef9bfa21c14deaafa4cac2734565bbff624c17f547c3bd73198a48422037bfb354e9dd3438922128d6611c8f5ee3a79280a4ba5104a847d6299bf29e6afec3f60d1c521b853797d109ea98e907fad22ca4685645b0aba221829e5c091fffb1b24ec432bf815f5dea2666dd71800e4d8694224bae64ee77138b4cafd0a4843fe6310d3633f7214f97a56895fd731f5e34b9321b502ba028f705a9a2f483ec35e5bc0b1bf61071a8c4a68d54cd60ee86f8bb12ea59daf16e1d7e287c96b9f1b1ab881c657eb7fcfb58eb6c4e86d3a203372d398f4116645f0eb70b8c17f8b361678e2698ce266216dba17e1c3ffaa9d23844c53fe1708f80459d6f95cc7ee8775f7284b36efe32f063e44d0e790247c92e6e696ed83b2874f8f87ffb820cd33d13799eed6ca55c8f1ad87c79767a8f752d9c6c6b1632039189df29cf59d3b935b6915368cf67c49fa3b35f9d3aeada11a5d42d785fce9edaefae136fc7c32c1c90ce6b625b526accee1dd521f6fc69005c93974b3b0ba49a566ced9a16f85ebe58a2e9e81d88f41a0adcd1cd1ba41bf986c158f7a5ae4e1ebd25cb98b1b83a133fa5a01595d8a661bca74263163fbc4c6c7bdc418e376b9cfea2f4f6d0f92941f11f24df305e0119a66ad07b4537b6711a9e5dd7c170248d2b906a4d87f74325982d179a8da9977ab2c926de9f42cfc8283a84f9a476436393b1fd31c9df093992929d250647747a7778fdb3e7909f4ea9267bd90f4b840ce283472ca3bcfdf9e0315be2af7578e3c231c8e6526e3aa59eb0c60590a17674cc1080163a96beb1f0f282d945384356096c25afd11a546d845d61fa84f7715e4c357efae6ea7501e815b30db64a335ce45b7867ad2afc3d7de1e347213bf2999f30fbb5b2b8a4b3b06fcb90654b1189321acef33b80cede4c2a63eedbbafacdea5bc040051c336c42f2cf09ebec3b16256b966d2db78d78b9bdcaf5df8735269bd1fa864264457184b055330bd7eccf49f91fb83975fcee255c291de8ff7639a2d0a5deaadeb66d28ac4ff902dc623d157b0c4a5e10d27a3eee4fff673e1bb29abd14fea6cb2999d1f0e3b10309473cdabac6e6d7ac4129f5f3dbe5a869959ed301bc3f6ad4feb8f568363e6b70ca76de9c4499da0d8feae0fcfd898918559221c841364d8aa87b42dbcef931fbe167d6c2e86a7b2ea6a1409373c6ea1301d3f3489cdc865083fbeb0091343c8dd232fd40d8cb18ed9ba752ec6af6b54f861f2df2b88c6f12e76b3cbf171ac7292f8fd9f9e50ae73eedd1d4e7967cde48765c9187e7b5fa172f4b731c939b9467469b18d754c5ebb333f776e261c75ff1108bd902003ea9748ef4ef44e47be40725956b41aeb642651703e2235f2fbec8ffdc5712b0f4839c2ba1279e1c4ce4bde105eed0979fb22455391f4b8aca7786644d693e5851248b89327061b46711d64bd6ee9a3e263354e504f3010e2bb4f1d32198d18bda7c246735acaf4755ceeb740c75ebd92d6b17a081b65993186075fef382abe8f82110546b1138db13900bfaf06da0f54290bb5fd41c8ff87ade80d30ebd8d1aaed2850a69491340cd4bdc68b3b3cffb26c88b28c6697599310e5e2bd9819b2efad2dbc3a25a2bf47614821df7894b5df54441807ff44638e448574af1645b722faf5623313d96016a401c9f8c49c8f59f3a7ecc38d5fb7f95f7ffbf25ea5dbb20e6daebdcccf25e26968a9daea65e5ffed145745c64d4639e41a865d6acef4583f551c8254da43eb1fe7e1018ce23a1c12d277fa17ed98f0f028b51451b151ed903717c7482211ba9507ea2c0e867e5b36c13acd07db94200002e254907db2a54965d1e99363a3e1e6c8afb5d522a5ffe88de5b9aaf5a368d9090b14f64641bc7ff8033faef36ddb796a19ae9a303445b80738e3cbe2093f8861a6ad268c14982fb854bdefd43e6d61fa32846208b1b64651983a874a0da61b2abe4ce26850acfedef0bc0decc4635e2840edf762950791a985a4dcf98c33fdcab9ae35f3442e81aba4ab3a3d3f05a8d19f1c9f6b7babd30c0d670781db00593114d25df3160c32bcdec6315e4fd664de6a18811aa204d1ef1c4e23fc32c96e42e168bf63e7d351309d051b1cc69f83e5acc6c0d3a86b37ce5d3a366ce706f68fc5f5add4f35b839dcd2503b80b3e8fbc3c3810f9542423c946160c7be35236291d60d7a0e58b985dbb87fd4388312f3be230d41ceb7f71a106bb5d15ee67c05dc13d9f9e1ffbdc49694bbf9c4ad8b1e497a968d4b03009063a55506af0a593c29351d87e1e6704f4de533e9d27f83e422c22acb5595855b95e14ecbe81ff593be23167cd690c88ce659bc7ce6728f27093f1788fc5ce861f6c5d3560e8ef1b92e7f249a71de55629a7bc3a0f5549ff7d39e6702773259c76d600b3f9d3d701de78391bc4bcb573c98f7043e067db6483164d6cafba63b52166a9f8a9c3e1d2feb980c604a38c180f658a864e5e3307ccc2398b1126b8f08eeeff87ea0a94bfca1de6a43f25784ea91c4c2ffb6ee3a778fa87e91bf362c2c7a1a0de01979d51d616b30e9e568d107d216486390be6ffb5d5f5a32</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      本文有密码保护
    
    </summary>
    
      <category term="百步飞剑" scheme="http://yoursite.com/categories/%E7%99%BE%E6%AD%A5%E9%A3%9E%E5%89%91/"/>
    
    
      <category term="百步飞剑" scheme="http://yoursite.com/tags/%E7%99%BE%E6%AD%A5%E9%A3%9E%E5%89%91/"/>
    
  </entry>
  
  <entry>
    <title>Kali</title>
    <link href="http://yoursite.com/2020/11/07/Kali/"/>
    <id>http://yoursite.com/2020/11/07/Kali/</id>
    <published>2020-11-07T12:22:14.000Z</published>
    <updated>2020-11-07T15:33:31.956Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p><img src="/2020/11/07/Kali/image-20201107203728503.png" alt="image-20201107203728503"></p><h1 id="KALI"><a href="#KALI" class="headerlink" title="KALI"></a>KALI</h1><h2 id="kali-基础配置"><a href="#kali-基础配置" class="headerlink" title="kali 基础配置"></a>kali 基础配置</h2><h4 id="安装kali2"><a href="#安装kali2" class="headerlink" title="安装kali2"></a>安装kali2</h4><p>1、创建虚拟机，选择Linux，版本Debian 10.x 64位</p><p><img src="/2020/11/07/Kali/image-20201107204858821.png" alt="image-20201107204858821"></p><p>2、填写虚拟机名称和存储位置</p><p><img src="/2020/11/07/Kali/image-20201107205102795.png" alt="image-20201107205102795"></p><p>3、选择磁盘存储大小，大小自定义即可，磁盘拆分选默认</p><p><img src="/2020/11/07/Kali/image-20201107205338416.png" alt="image-20201107205338416"></p><p>4、点击虚拟机配置，CD/DVD选择kali ISO镜像，内存给到2-4G，处理器2核</p><p><img src="/2020/11/07/Kali/image-20201107205725956.png" alt="image-20201107205725956"></p><p>5、选择第一项图形化安装</p><p><img src="/2020/11/07/Kali/image-20201107205903463.png" alt="image-20201107205903463"></p><p>6、语言选择简体中文，地区中国，键盘选择汉语</p><p><img src="/2020/11/07/Kali/image-20201107210131814.png" alt="image-20201107210131814"></p><p><img src="/2020/11/07/Kali/image-20201107210247968.png" alt="image-20201107210247968"></p><p><img src="/2020/11/07/Kali/image-20201107210339175.png" alt="image-20201107210339175"></p><p>点击继续安装</p><p><img src="/2020/11/07/Kali/image-20201107210423204.png" alt="image-20201107210423204"></p><p>7、网络选择现在不进行网络配置，主机名默认即可</p><p><img src="/2020/11/07/Kali/image-20201107210650538.png" alt="image-20201107210650538"></p><p><img src="/2020/11/07/Kali/image-20201107210742392.png" alt="image-20201107210742392"></p><p>8、用户名、密码自定义即可</p><p><img src="/2020/11/07/Kali/image-20201107210831042.png" alt="image-20201107210831042"></p><p>9、磁盘配置选择使用整个磁盘</p><p><img src="/2020/11/07/Kali/image-20201107210946397.png" alt="image-20201107210946397"></p><p>默认即可，一路继续</p><p><img src="/2020/11/07/Kali/image-20201107211033272.png" alt="image-20201107211033272"></p><p><img src="/2020/11/07/Kali/image-20201107211114006.png" alt="image-20201107211114006"></p><p>磁盘分区改动写入选择是，点击继续</p><p><img src="/2020/11/07/Kali/image-20201107211219660.png" alt="image-20201107211219660"></p><p>10、安装软件及桌面选择，按下图即可，点击继续</p><p><img src="/2020/11/07/Kali/image-20201107211409062.png" alt="image-20201107211409062"></p><p>引导启动选择是</p><p><img src="/2020/11/07/Kali/image-20201107211639672.png" alt="image-20201107211639672"></p><p><img src="/2020/11/07/Kali/image-20201107211730406.png" alt="image-20201107211730406"></p><p>安装完成重启即可。</p><h4 id="安装VM-tools"><a href="#安装VM-tools" class="headerlink" title="安装VM tools"></a>安装VM tools</h4><p>普通用户切换至root</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line">输入普通用户密码即可</span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>安装VM tools软件包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install open-vm-tools-desktop fuse</span><br></pre></td></tr></table></figure><p>重启</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">init 6</span><br></pre></td></tr></table></figure><h4 id="安装更新"><a href="#安装更新" class="headerlink" title="安装更新"></a>安装更新</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt-get update   #更新软件源中的所有软件列表</span><br><span class="line"></span><br><span class="line">apt-get upgrade  #更新软件</span><br><span class="line"></span><br><span class="line">apt-get dist-upgrade  #更新系统版本</span><br><span class="line"></span><br><span class="line">apt-get clean</span><br></pre></td></tr></table></figure><h4 id="用户切换"><a href="#用户切换" class="headerlink" title="用户切换"></a>用户切换</h4><p>普通用户切换root</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line"></span><br><span class="line">test@kali:~&#x2F;桌面$ whoami</span><br><span class="line">test</span><br><span class="line">test@kali:~&#x2F;桌面$ sudo su</span><br><span class="line">[sudo] test 的密码：</span><br><span class="line">root@kali:&#x2F;home&#x2F;test&#x2F;桌面# whoami</span><br><span class="line">root</span><br><span class="line">root@kali:&#x2F;home&#x2F;test&#x2F;桌面#</span><br></pre></td></tr></table></figure><p>root用户切回普通用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br><span class="line"></span><br><span class="line">root@kali:&#x2F;home&#x2F;test&#x2F;桌面# exit</span><br><span class="line">exit</span><br><span class="line">test@kali:~&#x2F;桌面$</span><br></pre></td></tr></table></figure><h4 id="不锁屏"><a href="#不锁屏" class="headerlink" title="不锁屏"></a>不锁屏</h4><p>设置Kali Linux永不锁屏：</p><p>点击设置，打开电源管理器，显示选项全部设置为从不即可</p><p><img src="/2020/11/07/Kali/image-20201107213831929.png" alt="image-20201107213831929"></p><p><img src="/2020/11/07/Kali/image-20201107214030910.png" alt="image-20201107214030910"></p><h4 id="修复乱码"><a href="#修复乱码" class="headerlink" title="修复乱码"></a>修复乱码</h4><p>有时会遇到kali乱码的情况，如图所示：</p><p><img src="/2020/11/07/Kali/image-20201107214343498.png" alt="image-20201107214343498"></p><p>修复方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get install fonts-wqy-microhei fonts-wqy-zenhei</span><br><span class="line"></span><br><span class="line">reboot  #重启</span><br></pre></td></tr></table></figure><h4 id="安装第三方工具"><a href="#安装第三方工具" class="headerlink" title="安装第三方工具"></a>安装第三方工具</h4><p>以安装Nessus为例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i [软件包名称]</span><br></pre></td></tr></table></figure><p><img src="/2020/11/07/Kali/image-20201107214922672.png" alt="image-20201107214922672"></p><h4 id="更换背景图片"><a href="#更换背景图片" class="headerlink" title="更换背景图片"></a>更换背景图片</h4><p>kali默认Xface背景存放位置为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;share&#x2F;backgrounds&#x2F;xfce&#x2F;</span><br></pre></td></tr></table></figure><p><img src="/2020/11/07/Kali/image-20201107215155823.png" alt="image-20201107215155823"></p><p>undercover桌面存放背景位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;share&#x2F;kali-undercover&#x2F;backgrounds&#x2F;</span><br></pre></td></tr></table></figure><p><img src="/2020/11/07/Kali/image-20201107215510328.png" alt="image-20201107215510328"></p><p>点击设置，打开桌面设置项，点击背景，选择喜欢的背景图片即可。</p><p><img src="/2020/11/07/Kali/image-20201107215750704.png" alt="image-20201107215750704"></p><p><img src="/2020/11/07/Kali/image-20201107215827366.png" alt="image-20201107215827366"></p><h4 id="更改终端透明度"><a href="#更改终端透明度" class="headerlink" title="更改终端透明度"></a>更改终端透明度</h4><p>打开终端，单击文件</p><p><img src="/2020/11/07/Kali/image-20201107231629578.png" alt="image-20201107231629578"></p><p>在下拉菜单中点【参数配置】</p><p><img src="/2020/11/07/Kali/image-20201107231511680.png" alt="image-20201107231511680"></p><p>找到【终端透明度】，单击后面的箭头按钮可以增大或减少终端透明度。</p><p><img src="/2020/11/07/Kali/image-20201107231722520.png" alt="image-20201107231722520"></p><p>之后就可以看到终端透明效果了。</p><p><img src="/2020/11/07/Kali/image-20201107231819576.png" alt="image-20201107231819576"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="kali" scheme="http://yoursite.com/categories/kali/"/>
    
    
      <category term="kali" scheme="http://yoursite.com/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>Python-发送短信</title>
    <link href="http://yoursite.com/2020/11/04/Python-%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/"/>
    <id>http://yoursite.com/2020/11/04/Python-发送短信/</id>
    <published>2020-11-04T14:36:24.000Z</published>
    <updated>2020-11-04T15:32:27.876Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="使用python发送短信twilio"><a href="#使用python发送短信twilio" class="headerlink" title="使用python发送短信twilio"></a>使用python发送短信twilio</h1><p>主要内容是叙述如何使用Python传送手机短信，主要是以美国Twilio公司所提供的服务为例说明。全球这类通信公司很多，可以用关键词free sms gateway查询，sms全名是shortmessage service短信服务，这是目前电信公司很普遍的一个服务。</p><h2 id="安装twilio模块"><a href="#安装twilio模块" class="headerlink" title="安装twilio模块"></a>安装twilio模块</h2><p>为了要用Python设计与Twilio公司有关的网络服务，首先要安装twilio模块。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install twilio</span><br></pre></td></tr></table></figure><h2 id="到Twilio公司注册账号"><a href="#到Twilio公司注册账号" class="headerlink" title="到Twilio公司注册账号"></a>到Twilio公司注册账号</h2><p>为了要使用Twilio公司所提供的短信服务，需要到Twilio公司注册账号，以取得下列信息：</p><p>1、Account SID：Twilio API key账号。</p><p>2、Auth TOKEN：Twilio账号的图腾(TOKEN)。</p><p>3、Twilio Number：Twilio电话号码。</p><p>4、Verified numbers：电话号码使用地区。</p><p>上述信息我们可以称之为API key(密钥)，有了上述密钥，您就可以使用Python程序发送短信了。</p><h4 id="申请账号"><a href="#申请账号" class="headerlink" title="申请账号"></a>申请账号</h4><p>首先进入hxxp://<a href="http://www.twilio.com网站。" target="_blank" rel="noopener">www.twilio.com网站。</a></p><p><img src="/2020/11/04/Python-%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/image-20201104231058183.png" alt="image-20201104231058183"></p><p>点选Get a free API key，然后将看到空白窗体。填写完成后，按Get Started按钮。</p><p>为了不被网络恶意软件注册攻击，所以会要求输入电话号码，Twilio网站会从你登录IP判断你的位置，然后自动勾选你的国家或地区，请在上述字段输入你的手机号码，然后按Verify via SMS按钮，Twilio公司会发送验证码到你的手机，下列是笔者手机收到验证码的图例。</p><p><img src="/2020/11/04/Python-%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/image-20201104231445340.png" alt="image-20201104231445340"></p><p>输入完成后，请按Submit按钮，整个注册就算完成了。</p><h4 id="获得Account-SID"><a href="#获得Account-SID" class="headerlink" title="获得Account SID"></a>获得Account SID</h4><p>注册成功后，在画面上可以看到Dashboard，请点选可以在此看到的所申请的Account SID信息。</p><p><img src="/2020/11/04/Python-%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/image-20201104231543343.png" alt="image-20201104231543343"></p><p>未来可以点选上述SID码，然后复制到Python程序。</p><h4 id="获得Auth-TOKEN"><a href="#获得Auth-TOKEN" class="headerlink" title="获得Auth TOKEN"></a>获得Auth TOKEN</h4><p>与SID一样，使用时最好用复制方式粘贴到Python程序，比较方便，同时也不会有错误。</p><p><img src="/2020/11/04/Python-%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/image-20201104231735522.png" alt="image-20201104231735522"></p><h4 id="获得Twilio-Number"><a href="#获得Twilio-Number" class="headerlink" title="获得Twilio Number"></a>获得Twilio Number</h4><p><img src="/2020/11/04/Python-%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/image-20201104231812663.png" alt="image-20201104231812663"></p><p>在屏幕上有Phone Numbers，点选Phone Numbers。</p><p>将会看到：</p><p><img src="/2020/11/04/Python-%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/image-20201104231859663.png" alt="image-20201104231859663"></p><p>点选Get Started按钮：</p><p><img src="/2020/11/04/Python-%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/image-20201104232005975.png" alt="image-20201104232005975"></p><p>点选Get yourfirst Twilio phone number按钮：</p><p><img src="/2020/11/04/Python-%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/image-20201104232040297.png" alt="image-20201104232040297"></p><p>将列出你的Twilio号码，按Choose this Number按钮：</p><p><img src="/2020/11/04/Python-%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/image-20201104232122259.png" alt="image-20201104232122259"></p><p>未来python程序需要上述格式的号码。</p><h4 id="设定Twilio使用地区"><a href="#设定Twilio使用地区" class="headerlink" title="设定Twilio使用地区"></a>设定Twilio使用地区</h4><p>由于这是试用账号，同时我们不是在美国本土，所以还需在系统设定短信适用地区。</p><p><img src="/2020/11/04/Python-%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/image-20201104232224000.png" alt="image-20201104232224000"></p><p>点选所有服务功能，然后选Programmable SMS服务，将看到下列画面。</p><p><img src="/2020/11/04/Python-%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/image-20201104232307073.png" alt="image-20201104232307073"></p><p>点选these countries字符串，将看到Message Grographic Permissions标题，选China(+86)，未来用Python所发的短信就可以在中国大陆使用了。</p><h2 id="使用Python程序设计发送短信"><a href="#使用Python程序设计发送短信" class="headerlink" title="使用Python程序设计发送短信"></a>使用Python程序设计发送短信</h2><p>导入模块：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from twilio.rest import client</span><br></pre></td></tr></table></figure><p>发送短信的方法:</p><p><img src="/2020/11/04/Python-%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/image-20201104232616420.png" alt="image-20201104232616420"></p><p>执行结果：</p><p><img src="/2020/11/04/Python-%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/image-20201104232657932.png" alt="image-20201104232657932"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>站内搜索功能</title>
    <link href="http://yoursite.com/2020/11/04/%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2020/11/04/站内搜索功能/</id>
    <published>2020-11-04T14:14:17.000Z</published>
    <updated>2020-11-04T14:22:59.040Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>在博客根目录安装插件hexo-generator-searchdb</p><p><img src="/2020/11/04/%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/image-20201104221808009.png" alt="image-20201104221808009"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><h2 id="配置根目录文件"><a href="#配置根目录文件" class="headerlink" title="配置根目录文件"></a>配置根目录文件</h2><p>修改根目录文件_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p>注意每行后面留出一个空格。</p><h2 id="配置主题文件"><a href="#配置主题文件" class="headerlink" title="配置主题文件"></a>配置主题文件</h2><p>修改主题配置文件_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure><p>在主题配置文件中将false改为true即可。</p><h2 id="配置效果"><a href="#配置效果" class="headerlink" title="配置效果"></a>配置效果</h2><p><img src="/2020/11/04/%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/image-20201104222245498.png" alt="image-20201104222245498"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="博客" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>同个网段和不同网段的ping</title>
    <link href="http://yoursite.com/2020/11/02/%E5%90%8C%E4%B8%AA%E7%BD%91%E6%AE%B5%E5%92%8C%E4%B8%8D%E5%90%8C%E7%BD%91%E6%AE%B5%E7%9A%84ping/"/>
    <id>http://yoursite.com/2020/11/02/同个网段和不同网段的ping/</id>
    <published>2020-11-02T14:54:23.000Z</published>
    <updated>2020-11-08T13:58:17.039Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p><img src="/2020/11/02/%E5%90%8C%E4%B8%AA%E7%BD%91%E6%AE%B5%E5%92%8C%E4%B8%8D%E5%90%8C%E7%BD%91%E6%AE%B5%E7%9A%84ping/image-20201108215754542.png" alt="image-20201108215754542"></p><h1 id="同一网段和不同网段的ping"><a href="#同一网段和不同网段的ping" class="headerlink" title="同一网段和不同网段的ping"></a>同一网段和不同网段的ping</h1><p>这里讲ping的两情况：一种是同一网段内，一种是跨网段的ping。</p><h2 id="同一网段内"><a href="#同一网段内" class="headerlink" title="同一网段内"></a>同一网段内</h2><p>如图：</p><p><img src="/2020/11/02/%E5%90%8C%E4%B8%AA%E7%BD%91%E6%AE%B5%E5%92%8C%E4%B8%8D%E5%90%8C%E7%BD%91%E6%AE%B5%E7%9A%84ping/image-20201102225812176.png" alt="image-20201102225812176"></p><p>首先，如果主机A，要去ping主机B，那么主机A，就要封装二层报文，它会先查自己的ARP缓存表（IP-MAC的映射），如果没有B的MAC地址，A就会向外发送一个ARP广播包。</p><p>其中ARP报文格式如下:</p><p><img src="/2020/11/02/%E5%90%8C%E4%B8%AA%E7%BD%91%E6%AE%B5%E5%92%8C%E4%B8%8D%E5%90%8C%E7%BD%91%E6%AE%B5%E7%9A%84ping/image-20201102230033695.png" alt="image-20201102230033695"></p><p>其中OP：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1：代表ARP请求</span><br><span class="line"></span><br><span class="line">2：ARP应答</span><br><span class="line"></span><br><span class="line">3：表示RARP请求 </span><br><span class="line"></span><br><span class="line">4：表示RARP应答</span><br></pre></td></tr></table></figure><p>首先，交换机收到这个报文后，它会学习到A的MAC和入端口号并保存在MAC地址表中（MAC-port映射）（或者更新A的MAC-port生存期），接着，它会向所有端口发送这个ARP广播包，其它主机收到后，发现不是在找自己，就纷纷丢弃了该报文，不去理会（路由器可以隔绝广播域，一般情况下会丢弃广播包，除非开了代理ARP功能）。主机B收到报文后，就立即响应，我的MAC地址是多少，并回复一个ARP响应报文格式给主机A。如图：</p><p><img src="/2020/11/02/%E5%90%8C%E4%B8%AA%E7%BD%91%E6%AE%B5%E5%92%8C%E4%B8%8D%E5%90%8C%E7%BD%91%E6%AE%B5%E7%9A%84ping/image-20201102230314390.png" alt="image-20201102230314390"></p><p>RARP的报文格式如下：</p><p><img src="/2020/11/02/%E5%90%8C%E4%B8%AA%E7%BD%91%E6%AE%B5%E5%92%8C%E4%B8%8D%E5%90%8C%E7%BD%91%E6%AE%B5%E7%9A%84ping/image-20201102230356473.png" alt="image-20201102230356473"></p><p>交换机收到ARP响应包之后，先学习B的MAC-port并记录在MAC地址表中（或者更新B的MAC-port的生存期），接着它根据目的MAC查找MAC地址表，发现这个目的MAC跟port有映射，所以直接把这个ARP响应包从该端口发出去给A了。</p><p>而主机A根据ARP响应包，学到了主机B的MAC地址，就把这个MAC地址封装到ICMP协议的二层报文中向主机B发送，报文格式如下： </p><p><img src="/2020/11/02/%E5%90%8C%E4%B8%AA%E7%BD%91%E6%AE%B5%E5%92%8C%E4%B8%8D%E5%90%8C%E7%BD%91%E6%AE%B5%E7%9A%84ping/image-20201102230509174.png" alt="image-20201102230509174"></p><p>交换机这个时候已经知道目的MAC为B的数据包要从哪个端口发出去了，所以它会把ICMP包直接从该端口单播出去。</p><p>当主机B收到了这个报文后，发现是主机A 的ICPM回显请求，就按同样的格式，返回一个值给主机A，这样就完成了同一网段内的ping过程。</p><p><img src="/2020/11/02/%E5%90%8C%E4%B8%AA%E7%BD%91%E6%AE%B5%E5%92%8C%E4%B8%8D%E5%90%8C%E7%BD%91%E6%AE%B5%E7%9A%84ping/image-20201102230615799.png" alt="image-20201102230615799"></p><p>实际局域网内的ping，实际过程的发生不到1毫秒。</p><h2 id="不同网段内"><a href="#不同网段内" class="headerlink" title="不同网段内"></a>不同网段内</h2><p>如果主机A要ping主机C，那么主机A发现主机C的IP和自己不是同一网段，他就去找网关转发，但是他也不知道网关的MAC地址情况下呢？他就会向之前那个步骤一样先发送一个ARP广播，学到网关的MAC地址，再发封装ICMP报文给网关路由器.。ICMP报文格式如下（目的MAC是路由器的网卡地址，目的IP还是主机C的ip。这也进一步反应了<strong>链路层只管一跳，而网络层管host-to-host</strong>）：</p><p><img src="/2020/11/02/%E5%90%8C%E4%B8%AA%E7%BD%91%E6%AE%B5%E5%92%8C%E4%B8%8D%E5%90%8C%E7%BD%91%E6%AE%B5%E7%9A%84ping/image-20201102230755283.png" alt="image-20201102230755283"></p><p>当路由器收到主机A发过来的ICMP报文，发现其目的地址是本身MAC地址，根据目的的IP2.1.1.1，查路由表，发现2.1.1.1/24的路由表项，得到一个出端口，去掉原来的MAC头部，加上自己的MAC地址向主机C转发。(如果网关也没有主机C的MAC地址，还是要向前面一个步骤一样，ARP广播一下即可相互学到。路由器2端口能学到主机D的MAC地址，主机D也能学到路由器2端口的MAC地址。)报文格式如下（源MAC是路由器网卡地址，目的MAC是主机C的地址）：</p><p><img src="/2020/11/02/%E5%90%8C%E4%B8%AA%E7%BD%91%E6%AE%B5%E5%92%8C%E4%B8%8D%E5%90%8C%E7%BD%91%E6%AE%B5%E7%9A%84ping/image-20201102230936828.png" alt="image-20201102230936828"></p><p>最后，在主机C已学到路由器2端口MAC地址，路由器2端口转发给路由器1端口，路由1端口学到主机A的MAC地址的情况下，他们就不需要再做ARP解析，就将ICMP的回显请求回复过来。报文格式大致如下: </p><p><img src="/2020/11/02/%E5%90%8C%E4%B8%AA%E7%BD%91%E6%AE%B5%E5%92%8C%E4%B8%8D%E5%90%8C%E7%BD%91%E6%AE%B5%E7%9A%84ping/image-20201102231055128.png" alt="image-20201102231055128"></p><p>路由器收到ICMP响应后，修改ICMP包的目的MAC为00-50-56-C0-00-01,源MAC为00-50-56-C0-00-02，源IP和目的IP保持不变。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>hxxps://blog.csdn.net/li1914309758/article/details/78725516</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="横贯八方" scheme="http://yoursite.com/categories/%E6%A8%AA%E8%B4%AF%E5%85%AB%E6%96%B9/"/>
    
    
      <category term="横贯八方" scheme="http://yoursite.com/tags/%E6%A8%AA%E8%B4%AF%E5%85%AB%E6%96%B9/"/>
    
  </entry>
  
  <entry>
    <title>python对加载器免杀</title>
    <link href="http://yoursite.com/2020/11/01/python%E5%AF%B9%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%85%8D%E6%9D%80/"/>
    <id>http://yoursite.com/2020/11/01/python对加载器免杀/</id>
    <published>2020-11-01T08:49:39.000Z</published>
    <updated>2020-11-01T11:35:54.729Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">此处输入密码</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="e24798022bd54736fac6e29d65a31ce5c360937172e490fe42bfba8cc1827048"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      本文有密码保护
    
    </summary>
    
      <category term="横贯八方" scheme="http://yoursite.com/categories/%E6%A8%AA%E8%B4%AF%E5%85%AB%E6%96%B9/"/>
    
    
      <category term="横贯八方" scheme="http://yoursite.com/tags/%E6%A8%AA%E8%B4%AF%E5%85%AB%E6%96%B9/"/>
    
  </entry>
  
  <entry>
    <title>路由交换原理</title>
    <link href="http://yoursite.com/2020/10/28/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%8E%9F%E7%90%86/"/>
    <id>http://yoursite.com/2020/10/28/路由交换原理/</id>
    <published>2020-10-28T14:43:11.000Z</published>
    <updated>2020-11-02T14:53:53.443Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="交换机工作原理"><a href="#交换机工作原理" class="headerlink" title="交换机工作原理"></a>交换机工作原理</h2><h4 id="工作方式"><a href="#工作方式" class="headerlink" title="工作方式"></a>工作方式</h4><p>当交换机收到数据时，它会检查它的目的MAC地址，然后把数据从目的主机所在的接口转发出去。</p><p>交换机之所以能实现这一功能，是因为交换机内部有一个MAC地址表，MAC地址表记录了网络中所有MAC地址与该交换机各端口的对应信息。某一数据帧需要转发时，交换机根据该数据帧的目的MAC地址来查找MAC地址表，从而得到该地址对应的端口，即知道具有该MAC地址的设备是连接在交换机的哪个端口上，然后交换机把数据帧从该端口转发出去。</p><h4 id="原理核心"><a href="#原理核心" class="headerlink" title="原理核心"></a>原理核心</h4><p>1、交换机根据收到数据帧中的源MAC地址建立该地址同交换机端口的映射，并将其写入MAC地址表中。</p><p>2、交换机将数据帧中的目的MAC地址同已建立的MAC地址表进行比较，以决定由哪个端口进行转发。</p><p>3、如数据帧中的目的MAC地址不在MAC地址表中，则向所有端口转发。这一过程称为泛洪（flood）。</p><p>4、广播帧和组播帧向所有的端口转发。</p><p>某网络拓扑图如下：</p><p><img src="/2020/10/28/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%8E%9F%E7%90%86/image-20201028230117143.png" alt="image-20201028230117143"></p><h4 id="MAC地址表构建"><a href="#MAC地址表构建" class="headerlink" title="MAC地址表构建"></a>MAC地址表构建</h4><p>为快速转发报文，以太网交换机需要建立和维护MAC地址表。交换机采用源MAC地址学习的方法建立MAC地址表。</p><p>交换机的初始状态MAC地址表为空。</p><p>当计算机PC1要发送数据帧给计算机PC6时，因此时地址表是空的，交换机将向除PC1连接端口E0/1以外的其他所有端口转发数据帧。在转发之前，首先检查该数据帧的源MAC地址（00-10-B5-4B-30-85），并在交换机的MAC地址表中添加一条记录（00-10-B5-4B-30-85，E0/1）使之和端口E0/1相对应。</p><p>计算机PC6收到发送的数据帧后，用该数据帧的目的MAC地址和本机的MAC地址比较，发现PC1找的正是它，则接收该数据帧，其他计算机丢弃数据帧。</p><p>计算机PC6回复PC1时，交换机直接从端口E0/1转发，并学习到（00-10-B5-4B-30-65）为PC6连接的端口，将其添加到地址表中。</p><p> 交换机的其他端口利用源MAC地址学习的方法在MAC地址表中不断添加新的MAC地址与端口号的对应信息。直到MAC地址表添加完整为止。</p><h4 id="工作特性"><a href="#工作特性" class="headerlink" title="工作特性"></a>工作特性</h4><p>1、交换机的每一个端口所连接的网段都是一个独立的冲突域。 </p><p>2、交换机所连接的设备仍然在同一个广播域内，也就是说，交换机不隔绝广播（惟一的例外是在配有VLAN的环境中）。 </p><p>3、交换机依据帧头的信息进行转发，因此说交换机是工作在数据链路层的网络设备（此处所述交换机仅指传统的二层交换设备）。</p><h2 id="路由器工作原理"><a href="#路由器工作原理" class="headerlink" title="路由器工作原理"></a>路由器工作原理</h2><h4 id="工作方式-1"><a href="#工作方式-1" class="headerlink" title="工作方式"></a>工作方式</h4><p>路由器是构建整个网络最核心的设备。比较著名的品牌为cisco、锐捷、华为、TP-LINK、H3C等等。路由器接口是用来接收数据包的。</p><p>那么数据包到达路由器接口会发生什么呢？首先路由器会检查数据帧目标地址字段中的数据链路标识。（其实就是MAC地址，二层，数据链路层，只在单跳中有用，在网络上每进行一跳数据包头中的目的MAC都要进行改写才能继续进行下一跳。这和IP地址不一样，数据包中的目的IP地址在整个网络传输过程中是一直不会变化的。IP地址类似我们的地址，MAC地址类似于我们每个人的身份证号），如果它包含了路由器接口标识符或者广播标识符，那么说明这个数据包是给路由器我自己的，则路由器需要将从帧中剥离出数据包并传递给网络层。</p><h4 id="原理核心-1"><a href="#原理核心-1" class="headerlink" title="原理核心"></a>原理核心</h4><p>路由器依据目的IP地址的网络地址部分，通过路由选择算法确定一条从源结点到达目的结点的最佳路由。</p><p>路由器通过路由协议，网络连接的情况及网络的性能来建立网络的拓扑结构。路由算法为网络上的路由产生一个权值，路由器通过权值来选择最佳路径，权值越小，路由最佳。 </p><p>对于一台路由器，其分组转发的任务即是在收到数据包后，根据路由表所提供的最佳路径的信息，将其转发给下一条的路由器，目的端口或是缺省路由器。缺省路由器也称缺省开关，它是与主机在同一个子网中的路由端口的IP地址。</p><p>路由器也有它的缺省开关。如果目标网络中没有直接显示在路由表里的时候，那么就将数据分组传送给缺省网关。它一般指向与该路由器的一个端口的直接相连接的，并且通往Interest的出口路由。 </p><p>分组转发的思想：</p><p>目的IP地址，全程不变。 </p><p>目的MAC地址，逐跳修改。 </p><h4 id="路由表"><a href="#路由表" class="headerlink" title="路由表"></a>路由表</h4><p>路由表通过对路由表的查询来选择最佳路径的策略，路由表中保存着各种传输路径的相关数据，供路由选择时使用。 </p><p>路由表的内容主要包括：</p><p>1、目的网络地址及其所对应的目的端口 </p><p>2、下一跳路由器的名字</p><p>3、缺省路由的信息</p><h2 id="单网卡双网关"><a href="#单网卡双网关" class="headerlink" title="单网卡双网关"></a>单网卡双网关</h2><p>Windows系统单网卡配置双IP双网关。</p><p>Windows系统单网卡配置双IP双网关，一般情况下单网卡配置双IP是没有问题，当问题常常出在配置双网关上，默认windows系统只能有一个网关。这样对于需要配置双IP双网关的环境就有些问题。</p><h4 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h4><p>在公司内网中有研发和测试两个网段，两个网段的环境都需要进行联通，才能进行访问，这时就可以在PC上设置双IP双网卡来访问两个不同的网段。</p><h4 id="设置方法"><a href="#设置方法" class="headerlink" title="设置方法"></a>设置方法</h4><p>1、打开网络连接</p><p><img src="/2020/10/28/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%8E%9F%E7%90%86/image-20201028232747512.png" alt="image-20201028232747512"></p><p>2、右键属性</p><p><img src="/2020/10/28/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%8E%9F%E7%90%86/image-20201028233334342.png" alt="image-20201028233334342"></p><p><img src="/2020/10/28/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%8E%9F%E7%90%86/image-20201028233528865.png" alt="image-20201028233528865"></p><p><img src="/2020/10/28/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%8E%9F%E7%90%86/image-20201028233657752.png" alt="image-20201028233657752"></p><p><img src="/2020/10/28/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%8E%9F%E7%90%86/image-20201028233742259.png" alt="image-20201028233742259"></p><p>这样设置，主要是解决双网络的情况。</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="横贯八方" scheme="http://yoursite.com/categories/%E6%A8%AA%E8%B4%AF%E5%85%AB%E6%96%B9/"/>
    
    
      <category term="横贯八方" scheme="http://yoursite.com/tags/%E6%A8%AA%E8%B4%AF%E5%85%AB%E6%96%B9/"/>
    
  </entry>
  
  <entry>
    <title>TortoiseSVN小白使用指南</title>
    <link href="http://yoursite.com/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://yoursite.com/2020/10/27/TortoiseSVN小白使用指南/</id>
    <published>2020-10-27T15:28:25.000Z</published>
    <updated>2020-10-27T16:21:08.796Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h2><p>首先安装SVN客户端，windows一般选择乌龟客户端<a href="https://tortoisesvn.net/downloads.html。" target="_blank" rel="noopener">https://tortoisesvn.net/downloads.html。</a><br>根据系统位数选择相应客户端进行安装。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027233522760.png" alt="image-20201027233522760"></p><p>如果喜欢用命令行操作，务必记得勾选command line client tool为will be install on local hard driver,不用命令行的跳过这一步。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027233622157.png" alt="image-20201027233622157"></p><p>然后一路next即可安装。安装完毕后，在任意地方右键查看快捷菜单。发现TortoiseSVN即表示安装成功。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027234000933.png" alt="image-20201027234000933"></p><p>如果勾选了安装命令行工具，那么输入命令SVN，有如下提示也表示安装成功</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027234054612.png" alt="image-20201027234054612"></p><p>此时菜单全是英文的，如果不习惯英文，可以去下载语言包，记得下对系统位数。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027234136373.png" alt="image-20201027234136373"></p><p>安装完语言包之后，可以右键进入setting设置。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027234212094.png" alt="image-20201027234212094"></p><p>然后确定。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027234334219.png" alt="image-20201027234334219"></p><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h4 id="检出项目"><a href="#检出项目" class="headerlink" title="检出项目"></a>检出项目</h4><p>假如项目已经在服务器的仓库里，那么现在你要做的就是把它检出到本地。<br>首先创建一个空文件夹。在空文件夹内右键，选择SVN检出。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027234438932.png" alt="image-20201027234438932"></p><p>填入版本库地址，选择确定。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027234532978.png" alt="image-20201027234532978"></p><p>此时会弹出一个对话框让输入账号密码，输入账号密码即可。记得勾选保存认证，不然每次操作都会让输入。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027234641844.png" alt="image-20201027234641844"></p><p>等几分钟就可以检出完毕。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027234716694.png" alt="image-20201027234716694"></p><p>此时在你的目录下就能看到你的项目，现在可以开始愉快的工作了。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027234756144.png" alt="image-20201027234756144"></p><h4 id="导入项目"><a href="#导入项目" class="headerlink" title="导入项目"></a>导入项目</h4><p>但是有时候已经在本地建立好了项目，需要把项目推到SVN上，此时应怎么做呢？<br>右键选择版本库浏览器。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027235237050.png" alt="image-20201027235237050"></p><p>在相应目录下，右键，加入文件/加入文件夹，选择相应目录即可。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027235323569.png" alt="image-20201027235323569"></p><p>比如现在有个项目叫SVNProject，想把它传到SVN上，需选择加入文件夹即可。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027235441357.png" alt="image-20201027235441357"></p><p>务必要输入提交信息。这样别人才能知道你干了什么。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027235525597.png" alt="image-20201027235525597"></p><p>导入成功就能看到目录。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027235649939.png" alt="image-20201027235649939"></p><p>但是，不要以为导入成功就可以了。你还得重新检出，重新检出的项目才是受SVN控制的，务必记得检出。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027235756038.png" alt="image-20201027235756038"></p><p>在SVNProject上右键检出到本地，然后在里面进行修改。现在就可以愉快的工作了。<br>检出过后的右键菜单变成了这样。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027235909460.png" alt="image-20201027235909460"></p><h4 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h4><p>绿色表示当前文件没有被修改过（看不见颜色的重启下电脑就好了）。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201027235953440.png" alt="image-20201027235953440"></p><p>假如在新项目.txt中加了一行字，然后保存。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028000045437.png" alt="image-20201028000045437"></p><p>发现现在变成了红色，红色表示已修改。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028000118270.png" alt="image-20201028000118270"></p><p>怎么提交修改？<br>在根目录下，右键选择提交。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028000200811.png" alt="image-20201028000200811"></p><p>务必记得输入提交信息（虽然不输入也能提交），提交信息可以方便日后查看。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028000238854.png" alt="image-20201028000238854"></p><p>提交完毕后，可以发现又恢复到了绿色。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028000318480.png" alt="image-20201028000318480"></p><h4 id="未知文件提交"><a href="#未知文件提交" class="headerlink" title="未知文件提交"></a>未知文件提交</h4><p>假如现在加入了一个新文件。可以看出是蓝色的。蓝色表示不属于版本库的未知文件，未知文件是不能提交的。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028000504690.png" alt="image-20201028000504690"></p><p>记住选择增加把它加入到版本库里面去。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028000550414.png" alt="image-20201028000550414"></p><p>增加完毕后，变成了蓝色加号，表示新增加的版本库文件。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028000627874.png" alt="image-20201028000627874"></p><p>接下来，只需写代码，然后提交即可。<br>删除文件也应该右键提交，如下。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028000719609.png" alt="image-20201028000719609"></p><p>记得随时检查你的文件状态，如果没有添加到版本控制里要及时添加进去，不然你的文件提交不上去。</p><h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><p>假如你和B同学在协作。B同学写完代码提交到了SVN上，如果你想获取最新修改，就需要选择更新（如果服务器上已经有别人提交过的新的，你是提交不上去的，必须先更新再提交）。<br>怎么知道服务器有没有更新？你可以直接选择更新，有没有更新一下就知道。或者右键检查修改，然后检查版本库，就能看到服务器上改了哪些文件。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028000829629.png" alt="image-20201028000829629"></p><p>右键选择HEAD和BASE比较。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028000902665.png" alt="image-20201028000902665"></p><p>左边的表示你的代码，右边的表示服务器上的代码。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028000946986.png" alt="image-20201028000946986"></p><p>如果有修改记得及时更新到本地然后再继续工作。</p><p>但是有时候更新会冲突，比如你和服务器上的改了同一个地方。<br>这时候你需要更新下来解决冲突。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028001109984.png" alt="image-20201028001109984"></p><p>&lt;&lt;&lt;&lt;&lt;&lt;.mine到====表示你的代码，其他表示服务器的代码。你只需改成你想要的。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028001211204.png" alt="image-20201028001211204"></p><p>然后选择解决，告诉SVN我已经解决冲突了就行了。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028001242358.png" alt="image-20201028001242358"></p><p>剩下的就是团队协作间的更新提交操作。</p><h4 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h4><p>选择显示日志，可以看出团队里面的人干了什么。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028001355329.png" alt="image-20201028001355329"></p><p>可以看出谁谁谁，什么时间，干了什么事。最后那一列信息是自己提交的时候写的。建议大家提交时务必要填写提交信息，这样别人一看就知道你干了什么。提交信息对于自己也是有好处的，时间长了也能看到当初做了什么。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028001434269.png" alt="image-20201028001434269"></p><h4 id="版本回滚"><a href="#版本回滚" class="headerlink" title="版本回滚"></a>版本回滚</h4><p>如果你改了东西，但是还没有提交，可以使用还原功能。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028001521341.png" alt="image-20201028001521341"></p><p>但是如果我们写错了东西并且提交了上去怎么办？通过版本回滚可以将文件恢复到<br>以前的版本。右键更新至版本，通过查看日志来选择版本，然后回滚即可。 </p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028001602810.png" alt="image-20201028001602810"></p><p>有时候我们需要查看以前版本的代码。此时我们可以新建个文件夹检出到指定版本。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028001639714.png" alt="image-20201028001639714"></p><h4 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h4><p>版本控制有好几种方法，如下：</p><p>1、在提交发布版本时添加版本信息，这是最简单的一种方法。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028001739419.png" alt="image-20201028001739419"></p><p>2、打标签。</p><p>每次发布版本时应该打标签。右键选择分支/标记。在至路径以版本号打上标签即可 。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028001826674.png" alt="image-20201028001826674"></p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028001852756.png" alt="image-20201028001852756"></p><p>这样你就有了一个v1.0版本的标签。<br>以后如果你想查看某个版本的代码，只需切换过去就行。</p><p><img src="/2020/10/27/TortoiseSVN%E5%B0%8F%E7%99%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/image-20201028001932431.png" alt="image-20201028001932431"></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>我们在日常使用中，最常用的是更新和提交操作。这两个步骤务必要非常熟练。其他的可以在遇到问题是查看文档。此外，<strong>需要注意的是，所有版本控制工具只能跟踪文本文件（能用记事本打开查看的文件）</strong>，不要妄想SVN能记录你word改了哪一行。一旦遇到word冲突，记住仔细对比两个版本，然后解决冲突。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>hxxps://blog.csdn.net/maplejaw_/article/details/52874348</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="横贯八方" scheme="http://yoursite.com/categories/%E6%A8%AA%E8%B4%AF%E5%85%AB%E6%96%B9/"/>
    
    
      <category term="横贯八方" scheme="http://yoursite.com/tags/%E6%A8%AA%E8%B4%AF%E5%85%AB%E6%96%B9/"/>
    
  </entry>
  
  <entry>
    <title>开源后台控制面板</title>
    <link href="http://yoursite.com/2020/10/15/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF/"/>
    <id>http://yoursite.com/2020/10/15/开源后台控制面板/</id>
    <published>2020-10-15T13:47:38.000Z</published>
    <updated>2020-10-15T14:19:24.706Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="开源后台控制面板"><a href="#开源后台控制面板" class="headerlink" title="开源后台控制面板"></a>开源后台控制面板</h1><p>Web 开发中几乎的平台都需要一个后台管理，这里简单介绍十个开源免费的后台控制面板。</p><h2 id="1、AdminLTEithub"><a href="#1、AdminLTEithub" class="headerlink" title="1、AdminLTEithub"></a>1、AdminLTEithub</h2><p>Github Star 数 24969</p><p>Github 地址：<a href="https://github.com/almasaeed2010/AdminLTE。" target="_blank" rel="noopener">https://github.com/almasaeed2010/AdminLTE。</a></p><p>基于非常流行的 Bootstrap 3.x 的免费的后台 UI 框架。</p><p><img src="/2020/10/15/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF/image-20201015215320745.png" alt="image-20201015215320745"></p><h2 id="2、vue-Element-Admin"><a href="#2、vue-Element-Admin" class="headerlink" title="2、vue-Element-Admin"></a>2、vue-Element-Admin</h2><p>Github Star 数 19546</p><p>Github 地址：<a href="https://github.com/PanJiaChen/vue-element-admin。" target="_blank" rel="noopener">https://github.com/PanJiaChen/vue-element-admin。</a></p><p>一个基于 vue2.0  和 Eelement 的控制面板 UI 框架。</p><p><img src="/2020/10/15/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF/image-20201015215537624.png" alt="image-20201015215537624"></p><h2 id="3、tabler"><a href="#3、tabler" class="headerlink" title="3、tabler"></a>3、tabler</h2><p>Github Star 数 15870</p><p>Github 地址：<a href="https://github.com/tabler/tabler。" target="_blank" rel="noopener">https://github.com/tabler/tabler。</a></p><p>构建在 BootStrap 4 之上的免费的 HTML 控制面板框架。</p><p><img src="/2020/10/15/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF/image-20201015215832562.png" alt="image-20201015215832562"></p><h2 id="4、Gentelella"><a href="#4、Gentelella" class="headerlink" title="4、Gentelella"></a>4、Gentelella</h2><p>Github Star 数 15654</p><p>一个基于 Bootstarp 的免费的后台控制面板。</p><p><img src="/2020/10/15/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF/image-20201015220011715.png" alt="image-20201015220011715"></p><h2 id="5、ng2-admin"><a href="#5、ng2-admin" class="headerlink" title="5、ng2-admin"></a>5、ng2-admin</h2><p>Github Star 数 13181</p><p>Github 地址：<a href="https://github.com/akveo/ngx-admin。" target="_blank" rel="noopener">https://github.com/akveo/ngx-admin。</a></p><p>基于 Angular 2, Bootstrap 4 和 Webpack 的后台管理面板框架。</p><p><img src="/2020/10/15/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF/image-20201015220530947.png" alt="image-20201015220530947"></p><h2 id="6、ant-design-pro"><a href="#6、ant-design-pro" class="headerlink" title="6、ant-design-pro"></a>6、ant-design-pro</h2><p>Github Star 数 12707</p><p>Github 地址：<a href="https://github.com/ant-design/ant-design-pro。" target="_blank" rel="noopener">https://github.com/ant-design/ant-design-pro。</a></p><p>开箱即用的中台前端/设计解决方案。</p><p><img src="/2020/10/15/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF/image-20201015220906981.png" alt="image-20201015220906981"></p><h2 id="7、blur-admin"><a href="#7、blur-admin" class="headerlink" title="7、blur-admin"></a>7、blur-admin</h2><p>Github Star 数 9241</p><p>Github 地址：<a href="https://github.com/akveo/blur-admin。" target="_blank" rel="noopener">https://github.com/akveo/blur-admin。</a></p><p>基于 Angular 和 Bootstrap 的后台管理面板框架。</p><p><img src="/2020/10/15/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF/image-20201015221304824.png" alt="image-20201015221304824"></p><h2 id="8、vue-admin"><a href="#8、vue-admin" class="headerlink" title="8、vue-admin"></a>8、vue-admin</h2><p>Github Star 数 8676</p><p>Github 地址：<a href="https://github.com/vue-bulma/vue-admin。" target="_blank" rel="noopener">https://github.com/vue-bulma/vue-admin。</a></p><p>基于 Vue 和 Bulma 的控制面板。</p><h2 id="9、iview-admin"><a href="#9、iview-admin" class="headerlink" title="9、iview-admin"></a>9、iview-admin</h2><p>Github Star 数 8668</p><p>Github 地址：<a href="https://github.com/iview/iview-admin。" target="_blank" rel="noopener">https://github.com/iview/iview-admin。</a></p><p>基于 iView 的 Vue 2.0 控制面板。</p><p><img src="/2020/10/15/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF/image-20201015221629837.png" alt="image-20201015221629837"></p><h2 id="10、material-dashboard"><a href="#10、material-dashboard" class="headerlink" title="10、material-dashboard"></a>10、material-dashboard</h2><p>Github Star 数 7111</p><p>Github 地址：<a href="https://github.com/creativetimofficial/material-dashboard。" target="_blank" rel="noopener">https://github.com/creativetimofficial/material-dashboard。</a></p><p>基于 Bootstrap 4 和 Material 风格的控制面板。</p><p><img src="/2020/10/15/%E5%BC%80%E6%BA%90%E5%90%8E%E5%8F%B0%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF/image-20201015221910500.png" alt="image-20201015221910500"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="运维" scheme="http://yoursite.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="运维" scheme="http://yoursite.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>ELK日志分析平台</title>
    <link href="http://yoursite.com/2020/10/15/ELK%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90%E5%B9%B3%E5%8F%B0/"/>
    <id>http://yoursite.com/2020/10/15/ELK日志分析平台/</id>
    <published>2020-10-15T10:02:58.000Z</published>
    <updated>2020-10-15T10:02:58.068Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>博客文章加密</title>
    <link href="http://yoursite.com/2020/10/14/%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/"/>
    <id>http://yoursite.com/2020/10/14/博客文章加密/</id>
    <published>2020-10-14T09:36:38.000Z</published>
    <updated>2020-10-14T09:53:39.223Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">此处输入密码</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="c7834b167d6a0e44919c3decac9539d05a28066001a8732ad9b7e6e626d01162">753ca762744ce41a3b758f64d2c9e2cac54ebb0e04572651dd1a728a4c13c995014a638bc7ff4202e16b046432dc55c89089ca00d92d69b4b9b4e52cc776f9df47e1fc8ea00b6556017a75b0a77ba4e9ba0e45c034176100ba05cbd153c7b1391dfab6a698d8dbe553242c0758b0011d4c5d66f29f72ab93d7f2ab0b38a241ff830122b4dfac407896a45e0ce8a585140e0949a36f2b23fe062e032fe4cd25a5566b8b64cf28cc5baefc7cf50af124ef776f2ed1504f4849697a066e74905aac431e74a62ac033b0e6e4d6fef74bf89c181702f36b868d56798903330e6f05004505ff2223585b8e5ee5f802ea1be588d4c9577bfa7a9e8c141aad46d45d3875db0d2c310df006096a297e7d2550c62e60d5b335dcfec475c2c68d4017571bcd79a79e6f9973bdebdcb9e8b568d604ef71dc1730c957f19d4b2933e1a16c3cdea1e197f42aff4bd999c57b5b0f43ffe93e0ab9d8cded174cdb443435d7c173221abbbb332a63aa4f768b1894448531d0a55592f35810c0d33e33d64ef6ecd64d7909cd975908eaaf8007d64d6adbadd381656789bf04422f531cdc7b01936fa554c8b420fab18ddd3546bccfa98ed618c8d649eac9f5740d813eb05b1790308e14abc370f19630ecc8a01680af528120327afe26e053fe1d0da51a711019ce2c9cb997e9f7e568e95992ce9a974f49f028a802067383db0e90325d0c433d7785f93d66b0814bf7f971b369193052617267c6ba208a44dfa05ad1f20fd5d212dcd2d8ecfcdb28f689b1d0d9184d5994f2db888bf0c3b54e8de01b15bbd5b752e619eae26cedb8db95edc17449fa4fa8897612addfab05a03d35d578630c0976696c8787d1482cb9347d1619b7e64b712b5796fa4aee9ec068994f12267ff9bec48338c1fcc82b0907de506f2a5b62de91a59d112bb7e263037c9bf1397faff35b552e4c371bee805ba2c0559b4210cc3ca76b66ef54d1553b6b33b9a34e0c6504c97ecb43f5b7124cc7cc16ea992f5312a03f5e8cb3e04b64218df5006c4c4cdcf8e444ee05b3a05fa8efb3321148e30c7dcfc3d9e21129f8222b50b5bd6a18419850896619f9b77a8f14fe6a043913be6c5d6d625a13636fb31d459da969533d401da725fa5c1bdec4d8caf5ec4b20f3fb38482eec4d52d6158721ac0c401d5662ff88fd466ee42b8b45ac8e1d42784e311dca048d6aa6e86603efd3bce3af55dcfa1de747558c15040100479faa84cfaffc56e28f2f6e084c6d7c65cd2a5def446e2dafbfa442a40a24afaf9d35c8b559a0c972d9ab622a0dbb8264b63845e50e320862c0fd3e98fe300eb2977b713c34de068c72dba87f27c6027fca4b299877b272c134238ad4d29aaf95eed899520e09662625d43f6b93c24d706700f160fb14f5bed3ade311987b6430471bafd59958c3f88e09d662cc56d5a2ef14636250332fcf8ba8595635dd687b2230159d5b1eb0e140ccdde6ba5b45735ad468c3d594b93ee4b22aa52e9a50ae0809d2d49bdcab990379e23b4860cfe79d70411de9ebf00989ff1b5f4c1445684c8dbc481537676f3aec5e163433ec2bdeff00fbc34eb747eb8281fda4f620b914d3aa487a6646d72ac4cda9f6c7134bd3bdd7813661e7369ea74c642f63bbc07f8a9824e95c6ed2ebb88db83b405f8801cc6f9a8c817a020206893ec8f8480e51a4b0b356df7770b4087a4dafbb88586798bb6355ceeab2372b07246598a1efcd9059517d0fe692857cafffb1b6e4003854130a49ccc9a2b4801e64b8c052d5a1bcf3ff4480887d7f70a2134ae13fb2a2d1c98ea6b55552ca2ecb76da13206fdb80e53c9024b8d48c73587bdc15b918f6a94160c1bbabd5ce04a1dee20d1bd7e2d146ff4d72ceb656c8bd12fac3e074dd1bb627c4c4ff2fca8d51f1e670a12451efb2abe598137c95ca19208d081209aa70fa0797f6e3fbfbf0fa2203057d531e61414f1535ca9c42fba9d490956c866bf6c7d4cad98e4b203968e7448eb9d7c67a7dcabbcd441e7cff37e6bcecdfb82d6acc1ee56aef0a8e431c976bc19c403a73874bfe8e9d8d56a4f401ae503e0f70c36f1a1c8872d2525e8439b39445b7b6ce1b170674ad5f83340ffca7593e8f173a6d364a159569d03b7b66ac5c161e2c345b3401b3ce0a8b2bd0e4b04706ace6439f544c807dbaa36fe1711241231ffd6f1d34cf2541e142e4ddabfae0fa3b3c8f129104bc80c9d8c86fb7f156392e90afaf145c72fe21309f64356acb6c30061676378c0fdceb84b7d87f284fe0bdd3337d4c46a4792142526a5e4878c0733c4055cdb83f2907cf8f9c3c7247aa290ed42139c1c64eb393428ce2d06686922ca3f6c7a350cc4161fe80d1f5ab31966610474039cdac646e2034ccec41b385a06cb849f3d994f487fc8f8a2321e84e96a990b8c43970179144a61277d65194244222b3a1644158297ada73275970c77601035ed27ea15b5dfacc3eaed464c163b0ccc489655db153e9a5cd4d93667d438de0e4bbb57a7fcf6fe3d6573540ad9bf8db5236bfacdc09b81ad1b0fb7c2811c531aff80a6360fc8feb38db8fed93c2ecf4f63a6a770e5e29fc7628c1f956ce38b0c25e1e70814882e3640f49f9667788105e74a74fb54c3d482484a5afdaf2717ddbcd90b27e7a89307f1d492dbe901277cf03a7711a9ccdeec8f253ed026cbc9021d4c01d9795976dc4c67ccf5aabf72901dc685fab01ba7838d8837506f5f9173a059336d2810381114c4c5fa22ccc6f48bbe6bb725d23ad9bf8028512271e753bbd3c872152c990f881c73073d2bcb00f7c6c0a97d71c82f9aa3598babba5d158fcbf829ddb5c8ea1401be967ef5d640e526df860c258b92cc0937a1a0cce411bdd51f34cdea6a4dc6fe79823fca6720bb8ebd804af3d00ed35be1f3f705c82bab616788e80ba7c5404cbd65dbe4880a2ab6b4514fcfb47120fe9f6be2c2992bb3080f78f97a9ce79c00ce4d5425fd7d042a34f4355dc068244806ee77e51915afcba367cfd104716aea282e548d62970dcd238037399aadee4529d386e126082d3a7bf827ff6708b106c87a0f787d965d52084870e1f6f6fd7f25af68797c184b1c187e352919670723d04805229b712d0782575381cdedde299ff1836d6779f6946a818757ae52962d29135bdb0d46100899d33ed67dee18f9b43d114a621f223904076952d531e425316cd869ec9915f63bdb1227c4a8215d48a9c8f071636a6b123e0e8f1593b165821ee6c3774a6364304caf9e6eb40502cc5a29204c8d804aceecbcbddf815b6c920d6597a423f3bb028d4987340c681b4d7db7689b7b2b177da21d64a95a46041fca12c7202284b6916a836da4606964ef52f467f3fdd9160abf8c0079978b928d31ef132b0e9</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      本文有密码保护
    
    </summary>
    
      <category term="博客" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础</title>
    <link href="http://yoursite.com/2020/10/14/Linux%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2020/10/14/Linux基础/</id>
    <published>2020-10-14T08:58:41.000Z</published>
    <updated>2020-10-15T13:33:55.325Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201015111629482.png" alt="image-20201015111629482" style="zoom:25%;"></p><h2 id="密码重置"><a href="#密码重置" class="headerlink" title="密码重置"></a>密码重置</h2><p>重置root管理员的密码：</p><p>先确定是否为RHEL 7系统。如果是，然后再进行下面的操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;redhat-release</span><br></pre></td></tr></table></figure><p>重启Linux系统主机并出现引导界面时，按下键盘上的e键进入内核编辑界面，如图:</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014180103083.png" alt="image-20201014180103083"></p><p>在linux16参数这行的最后面追加“rd.break”参数，然后按下Ctrl+X组合键来运行修改过的内核程序</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014180224557.png" alt="image-20201014180224557"></p><p>大约30秒过后，进入到系统的紧急求援模式</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014180437309.png" alt="image-20201014180437309"></p><p>依次输入以下命令，等待系统重启操作完毕，然后就可以使用新密码来登录Linux系统了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mount -o remount,rw  &#x2F;sysroot</span><br><span class="line">chroot  &#x2F;sysroot</span><br><span class="line">passwd</span><br><span class="line">touch  &#x2F;.autorelabel</span><br><span class="line">exit</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014180700619.png" alt="image-20201014180700619"></p><h2 id="RPM"><a href="#RPM" class="headerlink" title="RPM"></a>RPM</h2><p>RPM有点像Windows系统中的控制面板，会建立统一的数据库文件，详细记录软件信息并能够自动分析依赖关系。</p><p>常用的RPM软件包命令：</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014180805106.png" alt="image-20201014180805106"></p><p>常见yum命令：</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014180855181.png" alt="image-20201014180855181"></p><h2 id="系统工作命令"><a href="#系统工作命令" class="headerlink" title="系统工作命令"></a>系统工作命令</h2><h4 id="echo命令"><a href="#echo命令" class="headerlink" title="echo命令"></a>echo命令</h4><p>echo命令用于在终端输出字符串或变量提取后的值，格式为“echo [字符串 | $变量]”。</p><p>使用$变量的方式提取变量SHELL的值，并将其输出到屏幕上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo $SHELL</span><br><span class="line">&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><h4 id="date命令"><a href="#date命令" class="headerlink" title="date命令"></a>date命令</h4><p>date命令用于显示及设置系统的时间或日期，格式为“date [选项] [+指定的格式]”。</p><p>date命令中的参数以及作用：</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014181414166.png" alt="image-20201014181414166"></p><h4 id="reboot命令"><a href="#reboot命令" class="headerlink" title="reboot命令"></a>reboot命令</h4><p>reboot命令用于重启系统，其格式为reboot。</p><p>重启计算机这种操作会涉及硬件资源的管理权限，因此默认只能使用root管理员来重启，其命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h4 id="poweroff命令"><a href="#poweroff命令" class="headerlink" title="poweroff命令"></a>poweroff命令</h4><p>poweroff命令用于关闭系统，其格式为poweroff。</p><h4 id="wget命令"><a href="#wget命令" class="headerlink" title="wget命令"></a>wget命令</h4><p>wget命令用于在终端中下载网络文件，格式为“wget [参数]下载地址”。</p><p>wget命令的参数以及作用：</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014181700177.png" alt="image-20201014181700177"></p><h4 id="ps命令"><a href="#ps命令" class="headerlink" title="ps命令"></a>ps命令</h4><p>ps命令用于查看系统中的进程状态，格式为“ps [参数]”。</p><p>常用方式：<code>ps aux</code></p><p>当执行ps aux命令后通常会看到如图所示的进程状态</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014181936134.png" alt="image-20201014181936134"></p><h4 id="top命令"><a href="#top命令" class="headerlink" title="top命令"></a>top命令</h4><p>top命令用于动态地监视进程活动与系统负载等信息，其格式为top。</p><p>top命令相当强大，能够动态地查看系统运维状态，完全将它看作Linux中的“强化版的Windows任务管理器”。</p><h4 id="pidof命令"><a href="#pidof命令" class="headerlink" title="pidof命令"></a>pidof命令</h4><p>pidof命令用于查询某个指定服务进程的PID值，格式为“pidof [参数] [服务名称]”。</p><p>每个进程的进程号码值（PID）是唯一的，因此可以通过PID来区分不同的进程。例如，可以使用如下命令来查询本机上sshd服务程序的PID：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pidof ssh</span><br></pre></td></tr></table></figure><h4 id="kill命令"><a href="#kill命令" class="headerlink" title="kill命令"></a>kill命令</h4><p>kill命令用于终止某个指定PID的服务进程，格式为“kill [参数] [进程PID]”。</p><p>这种操作的效果等同于强制停止服务。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill 2516</span><br></pre></td></tr></table></figure><h4 id="killall命令"><a href="#killall命令" class="headerlink" title="killall命令"></a>killall命令</h4><p>killall命令用于终止某个指定名称的服务所对应的全部进程，格式为：“killall [参数] [进程名称]”。</p><p>复杂软件的服务程序会有多个进程协同为用户提供服务，如果逐个去结束这些进程会比较麻烦，此时可以使用killall命令来批量结束某个服务程序带有的全部进程。</p><h2 id="系统状态检测命令"><a href="#系统状态检测命令" class="headerlink" title="系统状态检测命令"></a>系统状态检测命令</h2><h4 id="ifconfig命令"><a href="#ifconfig命令" class="headerlink" title="ifconfig命令"></a>ifconfig命令</h4><p>ifconfig命令用于获取网卡配置与网络状态等信息，格式为“ifconfig [网络设备]参数。</p><h4 id="uname命令"><a href="#uname命令" class="headerlink" title="uname命令"></a>uname命令</h4><p>uname命令用于查看系统内核与系统版本等信息，格式为“uname [-a]”。</p><p>在使用uname命令时，一般会固定搭配上-a参数来完整地查看当前系统的内核名称、主机名、内核发行版本、节点名、系统时间、硬件名称、硬件平台、处理器类型以及操作系统名称等信息。</p><p>如果要查看当前系统版本的详细信息，则需要查看redhat-release文件，其命令为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;redhat-release</span><br></pre></td></tr></table></figure><h4 id="uptime命令"><a href="#uptime命令" class="headerlink" title="uptime命令"></a>uptime命令</h4><p>uptime用于查看系统的负载信息，格式为uptime。</p><p>uptime命令可以显示当前系统时间、系统已运行时间、启用终端数量以及平均负载值等信息。平均负载值指的是系统在最近1分钟、5分钟、15分钟内的压力情况；负载值越低越好，尽量不要长期超过1，在生产环境中不要超过5。</p><h4 id="free命令"><a href="#free命令" class="headerlink" title="free命令"></a>free命令</h4><p>free用于显示当前系统中内存的使用量信息，格式为“free  -h”。</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014183203302.png" alt="image-20201014183203302"></p><h4 id="who命令"><a href="#who命令" class="headerlink" title="who命令"></a>who命令</h4><p>who用于查看当前登入主机的用户终端信息，格式为whoami。</p><h4 id="last命令"><a href="#last命令" class="headerlink" title="last命令"></a>last命令</h4><p>last命令用于查看所有系统的登录记录，格式为“last [参数]”。</p><h4 id="history命令"><a href="#history命令" class="headerlink" title="history命令"></a>history命令</h4><p>history命令用于显示历史执行过的命令，在使用history命令时，如果使用-c参数则会清空所有的命令历史记录。还可以使用“！编码数字”的方式来重复执行某一次的命令。</p><h4 id="sosreport命令"><a href="#sosreport命令" class="headerlink" title="sosreport命令"></a>sosreport命令</h4><p>sosreport命令用于收集系统配置及架构信息并输出诊断文档，格式为sosreport。</p><h2 id="目录切换命令"><a href="#目录切换命令" class="headerlink" title="目录切换命令"></a>目录切换命令</h2><h4 id="pwd命令"><a href="#pwd命令" class="headerlink" title="pwd命令"></a>pwd命令</h4><p>pwd命令用于显示用户当前所处的工作目录，格式为“pwd [选项]”。</p><h4 id="cd命令"><a href="#cd命令" class="headerlink" title="cd命令"></a>cd命令</h4><p>cd命令用于切换工作路径，格式为“cd [目录名称]”。可以通过cd命令迅速、灵活地切换到不同的工作目录。除了常见的切换目录方式，还可以使用“cd -”命令返回到上一次所处的目录，使用“cd..”命令进入上级目录，以及使用“cd ~”命令切换到当前用户的家目录，亦或使用“cd ~username”切换到其他用户的家目录。</p><h4 id="ls命令"><a href="#ls命令" class="headerlink" title="ls命令"></a>ls命令</h4><p>ls命令用于显示目录中的文件信息，格式为“ls [选项] [文件] ”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -la    #查看当前目录中的所有文件并输出这些文件的属性信息</span><br></pre></td></tr></table></figure><h2 id="文本编辑命令"><a href="#文本编辑命令" class="headerlink" title="文本编辑命令"></a>文本编辑命令</h2><h4 id="cat命令"><a href="#cat命令" class="headerlink" title="cat命令"></a>cat命令</h4><p>cat命令用于查看纯文本文件（内容较少的），格式为“cat [选项] [文件]”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat -n  #显示行号</span><br></pre></td></tr></table></figure><h4 id="more命令"><a href="#more命令" class="headerlink" title="more命令"></a>more命令</h4><p>more命令用于查看纯文本文件（内容较多的），格式为“more [选项]文件”。</p><p>more命令会在最下面使用百分比的形式来提示已经阅读了多少内容。可以使用空格键或回车键向下翻页。 </p><h4 id="head命令"><a href="#head命令" class="headerlink" title="head命令"></a>head命令</h4><p>head命令用于查看纯文本文档的前N行，格式为“head [选项] [文件]”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head -n 20 文档  #查看文档的前20行</span><br></pre></td></tr></table></figure><h4 id="tail命令"><a href="#tail命令" class="headerlink" title="tail命令"></a>tail命令</h4><p>tail命令用于查看纯文本文档的后N行或持续刷新内容，格式为“tail [选项] [文件]”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f 文件名  #实时查看最新日志文件时</span><br></pre></td></tr></table></figure><h4 id="tr命令"><a href="#tr命令" class="headerlink" title="tr命令"></a>tr命令</h4><p>tr命令用于替换文本文件中的字符，格式为“tr [原始字符] [目标字符]”。</p><h4 id="wc命令"><a href="#wc命令" class="headerlink" title="wc命令"></a>wc命令</h4><p>wc命令用于统计指定文本的行数、字数、字节数，格式为“wc [参数]文本”。</p><p>wc的参数以及作用:</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014195631027.png" alt="image-20201014195631027"></p><p>如要统计当前系统中有多少个用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wc -l  &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><h4 id="stat命令"><a href="#stat命令" class="headerlink" title="stat命令"></a>stat命令</h4><p>stat命令用于查看文件的具体存储信息和时间等信息，格式为“stat文件名称”。</p><h4 id="cut命令"><a href="#cut命令" class="headerlink" title="cut命令"></a>cut命令</h4><p>cut命令用于按“列”提取文本字符，格式为“cut [参数]文本”。</p><h4 id="diff命令"><a href="#diff命令" class="headerlink" title="diff命令"></a>diff命令</h4><p>diff命令用于比较多个文本文件的差异，格式为“diff [参数]文件”。</p><p>可以使用–brief参数来确认两个文件是否不同，还可以使用-c参数来详细比较出多个文件的差异之处</p><h2 id="目录管理命令"><a href="#目录管理命令" class="headerlink" title="目录管理命令"></a>目录管理命令</h2><h4 id="touch命令"><a href="#touch命令" class="headerlink" title="touch命令"></a>touch命令</h4><p>touch命令用于创建空白文件或设置文件的时间，格式为“touch [选项] [文件]”。</p><h4 id="mkdir命令"><a href="#mkdir命令" class="headerlink" title="mkdir命令"></a>mkdir命令</h4><p>mkdir命令用于创建空白的目录，格式为“mkdir [选项]目录”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p  递归创建目录</span><br></pre></td></tr></table></figure><h4 id="cp命令"><a href="#cp命令" class="headerlink" title="cp命令"></a>cp命令</h4><p>cp命令用于复制文件或目录，格式为“cp [选项]源文件 目标文件”。</p><p>cp命令参数以及作用：</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014200319909.png" alt="image-20201014200319909"></p><h4 id="mv命令"><a href="#mv命令" class="headerlink" title="mv命令"></a>mv命令</h4><p>mv命令用于剪切文件或将文件重命名，格式为“mv [选项]源文件 [目标路径|目标文件名]”。</p><h4 id="rm命令"><a href="#rm命令" class="headerlink" title="rm命令"></a>rm命令</h4><p>rm命令用于删除文件或目录，格式为“rm [选项]文件”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf 彻底删除</span><br></pre></td></tr></table></figure><h4 id="file命令"><a href="#file命令" class="headerlink" title="file命令"></a>file命令</h4><p>file命令用于查看文件的类型，格式为“file文件名”。</p><h2 id="打包压缩命令"><a href="#打包压缩命令" class="headerlink" title="打包压缩命令"></a>打包压缩命令</h2><h4 id="tar命令"><a href="#tar命令" class="headerlink" title="tar命令"></a>tar命令</h4><p>tar命令用于对文件进行打包压缩或解压，格式为“tar [选项] [文件]”。</p><p>tar命令参数及作用：</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014200921988.png" alt="image-20201014200921988"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-c 用于创建压缩文件</span><br><span class="line"></span><br><span class="line">-x 用于解压文件</span><br><span class="line"></span><br><span class="line">-C 用于指定要解压到哪个指定的目录</span><br><span class="line"></span><br><span class="line">-f 必须放到参数的最后一位，代表要压缩或解压的软件包名称</span><br><span class="line"></span><br><span class="line">-v 不断显示压缩或解压的过程</span><br><span class="line"></span><br><span class="line">tar zxvf  x.tar.gz 解压缩</span><br><span class="line">tar zcvf  etc.tar.gz  压缩</span><br></pre></td></tr></table></figure><h4 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h4><p>grep命令用于在文本中执行关键词搜索，并显示匹配的结果，格式为“grep [选项] [文件]”。grep命令的参数及其作用如下所示。</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014201401666.png" alt="image-20201014201401666"></p><h4 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h4><p>find命令用于按照指定条件来查找文件，格式为“find [查找路径]寻找条件 操作”。</p><p>find命令中的参数及作用：</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014201458583.png" alt="image-20201014201458583"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-exec    用于把find命令搜索到的结果交由紧随其后的命令作进一步处理</span><br></pre></td></tr></table></figure><h2 id="树形结构"><a href="#树形结构" class="headerlink" title="树形结构"></a>树形结构</h2><p>在Linux系统中，目录、字符设备、块设备、套接字、打印机等都被抽象成了文件。</p><p>Linux系统中的一切文件都是从“根（/）”目录开始的，并按照文件系统层次化标准（FHS）采用树形结构来存放文件，以及定义了常见目录的用途。另外，Linux系统中的文件和目录名称是严格区分大小写的。例如，root、rOOt、Root、rooT均代表不同的目录，并且文件名称中不得包含斜杠（/）。Linux系统中的文件存储结构如图：</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014201745499.png" alt="image-20201014201745499"></p><p>Linux系统中常见的目录名称以及相应内容：</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014201822553.png" alt="image-20201014201822553"></p><h2 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h2><p>Linux最常见的文件系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Ext3：是一款日志文件系统，能够在系统异常宕机时避免文件系统资料丢失，并能自动修复数据的不一致与错误。</span><br><span class="line"></span><br><span class="line">Ext4:Ext3的改进版本,支持的存储容量高达1EB。</span><br><span class="line"></span><br><span class="line">XFS：是一种高性能的日志文件系统，而且是RHEL 7中默认的文件管理系统，它的优势在可以快速地恢复可能被破坏的文件，最大可支持的存储容量为18EB。</span><br></pre></td></tr></table></figure><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><h4 id="mount命令"><a href="#mount命令" class="headerlink" title="mount命令"></a>mount命令</h4><p>mount命令用于挂载文件系统，格式为“mount文件系统 挂载目录”。mount命令中可用的参数及作用如下：</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014202423980.png" alt="image-20201014202423980"></p><p>如果想让硬件设备和目录永久地进行自动关联，就必须把挂载信息按照指定的填写格式“设备文件   挂载目录  格式类型  权限选项   自检   优先级”写入到/etc/fstab文件中。</p><p>各字段代表含义：</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014202609337.png" alt="image-20201014202609337"></p><p>想将文件系统为ext4的硬件设备/dev/sdb2在开机后自动挂载到/backup目录上，并保持默认权限且无需开机自检，就需要在/etc/fstab文件中写入下面的信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;fstab</span><br><span class="line"></span><br><span class="line">&#x2F;dev&#x2F;sdb2   &#x2F;backup   ext4   defaults  0 0</span><br></pre></td></tr></table></figure><h4 id="umount命令"><a href="#umount命令" class="headerlink" title="umount命令"></a>umount命令</h4><p>umount命令用于撤销已经挂载的设备文件，格式为“umount [挂载点/设备文件]”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount  &#x2F;dev&#x2F;sdb2</span><br></pre></td></tr></table></figure><h2 id="新硬盘初始化"><a href="#新硬盘初始化" class="headerlink" title="新硬盘初始化"></a>新硬盘初始化</h2><h4 id="fdisk命令"><a href="#fdisk命令" class="headerlink" title="fdisk命令"></a>fdisk命令</h4><p>fdisk命令用于管理磁盘分区，格式为“fdisk [磁盘名称]”，它提供了集添加、删除、转换分区等功能于一身。</p><p>fdisk命令中的参数及作用：</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014203146079.png" alt="image-20201014203146079"></p><h4 id="管理新硬盘"><a href="#管理新硬盘" class="headerlink" title="管理新硬盘"></a>管理新硬盘</h4><p>如管理/dev/sdb硬盘设备</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014203324621.png" alt="image-20201014203324621"></p><p>输入参数n添加新的分区。系统会要求选择继续输入参数p来创建主分区，还是输入参数e来创建扩展分区。这里输入参数p来创建一个主分区：</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014203412483.png" alt="image-20201014203412483"></p><p>在确认创建一个主分区后，系统要求先输入主分区的编号。主分区的编号范围是1～4，输入默认的1即可。接下来系统会提示定义起始的扇区位置，这不需要改动，敲击回车键保留默认设置即可。</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014203540816.png" alt="image-20201014203540816"></p><p>再次使用参数p来查看硬盘设备中的分区信息。果然就能看到一个名称为/dev/sdb1、起始扇区位置为2048、结束扇区位置为4196351的主分区了。这时候千万不要直接关闭窗口，而应该敲击参数w后回车，这样分区信息才是真正的写入成功啦。</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014203639568.png" alt="image-20201014203639568"></p><p>如果硬件存储设备没有进行格式化，则Linux系统无法写入数据。因此，在对存储设备进行分区后还需要进行格式化操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.xfs &#x2F;dev&#x2F;sdb1</span><br></pre></td></tr></table></figure><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014203809697.png" alt="image-20201014203809697"></p><p>挂载并使用存储设备了。与之相关的步骤也非常简单：首先是创建一个用于挂载设备的挂载点目录；然后使用mount命令将存储设备与挂载点进行关联；最后使用df -h命令来查看挂载状态和硬盘使用量信息。</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014203904081.png" alt="image-20201014203904081"></p><p>最后将挂载目录写到fstab中:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;fstab</span><br><span class="line"></span><br><span class="line">&#x2F;dev&#x2F;sdb2   &#x2F;backup   xfs   defaults  0 0</span><br></pre></td></tr></table></figure><h2 id="RAID-独立冗余磁盘阵列"><a href="#RAID-独立冗余磁盘阵列" class="headerlink" title="RAID(独立冗余磁盘阵列)"></a>RAID(独立冗余磁盘阵列)</h2><p>由于硬盘设备需要进行持续、频繁、大量的IO操作，相较于其他设备，其损坏几率也大幅增加，导致重要数据丢失的几率也随之增加。</p><p>RAID技术通过把多个硬盘设备组合成一个容量更大、安全性更好的磁盘阵列，并把数据切割成多个区段后分别存放在各个不同的物理硬盘设备上，然后利用分散读写技术来提升磁盘阵列整体的性能，同时把多个重要数据的副本同步到不同的物理硬盘设备上，从而起到了非常好的数据冗余备份效果。</p><h4 id="RAID0"><a href="#RAID0" class="headerlink" title="RAID0"></a>RAID0</h4><p>RAID 0技术把多块物理硬盘设备（至少两块）通过硬件或软件的方式串联在一起，组成一个大的卷组，并将数据依次写入到各个物理硬盘中。这样一来，在最理想的状态下，硬盘设备的读写性能会提升数倍，但是若任意一块硬盘发生故障将导致整个系统的数据都受到破坏。通俗来说，RAID 0技术能够有效地提升硬盘数据的吞吐速度，但是不具备数据备份和错误修复能力。</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014204634126.png" alt="image-20201014204634126"></p><h4 id="RAID1"><a href="#RAID1" class="headerlink" title="RAID1"></a>RAID1</h4><p>RAID 1是把两块以上的硬盘设备进行绑定，在写入数据时，是将数据同时写入到多块硬盘设备上（可以将其视为数据的镜像或备份）。当其中某一块硬盘发生故障后，一般会立即自动以热交换的方式来恢复数据的正常使用。</p><p>RAID 1技术虽然十分注重数据的安全性，但是因为是在多块硬盘设备中写入了相同的数据，因此硬盘设备的利用率得以下降，从理论上来说，两块硬盘空间的真实可用率只有50%，由三块硬盘设备组成的RAID 1磁盘阵列的可用率只有33%左右，以此类推。</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014204829583.png" alt="image-20201014204829583"></p><h4 id="RAID5"><a href="#RAID5" class="headerlink" title="RAID5"></a>RAID5</h4><p>RAID5技术是把硬盘设备的数据奇偶校验信息保存到其他硬盘设备中。RAID 5磁盘阵列组中数据的奇偶校验信息并不是单独保存到某一块硬盘设备中，而是存储到除自身以外的其他每一块硬盘设备上，这样的好处是其中任何一设备损坏后不至于出现致命缺陷；存放的为数据的奇偶校验信息，换句话说，就是RAID 5技术实际上没有备份硬盘中的真实数据信息，而是当硬盘设备出现问题后通过奇偶校验信息来尝试重建损坏的数据。RAID这样的技术特性“妥协”地兼顾了硬盘设备的读写速度、数据安全性与存储成本问题。</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014205012323.png" alt="image-20201014205012323"></p><h4 id="RAID10"><a href="#RAID10" class="headerlink" title="RAID10"></a>RAID10</h4><p> RAID 10技术是RAID 1+RAID 0技术的一个“组合体”。RAID 10技术需要至少4块硬盘来组建，其中先分别两两制作成RAID 1磁盘阵列，以保证数据的安全性；然后再对两个RAID 1磁盘阵列实施RAID 0技术，进一步提高硬盘设备的读写速度。这样从理论上来讲，只要坏的不是同一组中的所有硬盘，那么最多可以损坏50%的硬盘设备而不丢失数据。由于RAID 10技术继承了RAID 0的高读写速度和RAID 1的数据安全性，在不考虑成本的情况下RAID 10的性能都超过了RAID 5，因此当前成为广泛使用的一种存储技术。</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014205315935.png" alt="image-20201014205315935"></p><h2 id="LVM逻辑卷"><a href="#LVM逻辑卷" class="headerlink" title="LVM逻辑卷"></a>LVM逻辑卷</h2><h4 id="LVM技术"><a href="#LVM技术" class="headerlink" title="LVM技术"></a>LVM技术</h4><p>逻辑卷管理器是Linux系统用于对硬盘分区进行管理的一种机制，理论性较强，其创建初衷是为了解决硬盘设备在创建分区后不易修改分区大小的缺陷。尽管对传统的硬盘分区进行强制扩容或缩容从理论上来讲是可行的，但是却可能造成数据的丢失。而LVM技术是在硬盘分区和文件系统之间添加了一个逻辑层，它提供了一个抽象的卷组，可以把多块硬盘进行卷组合并。这样一来，用户不必关心物理硬盘设备的低层架构和布局，就可以实现对硬盘分区的动态调整。</p><p>LVM技术架构如图：</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014205517502.png" alt="image-20201014205517502"></p><p>物理卷处于LVM中的最底层，可以将其理解为物理硬盘、硬盘分区或者RAID磁盘阵列，这都可以。卷组建立在物理卷之上，一个卷组可以包含多个物理卷，而且在卷组创建之后也可以继续向其中添加新的物理卷。逻辑卷是用卷组中空闲的资源建立的，并且逻辑卷在建立后可以动态地扩展或缩小空间。这就是LVM的核心理念。</p><h4 id="部署逻辑卷"><a href="#部署逻辑卷" class="headerlink" title="部署逻辑卷"></a>部署逻辑卷</h4><p>常用的LVM部署命令：</p><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201014205812792.png" alt="image-20201014205812792"></p><p>先对这两块新硬盘进行创建物理卷的操作，可以将该操作简单理解成让硬盘设备支持LVM技术，或者理解成是把硬盘设备加入到LVM技术可用的硬件资源池中，然后对这两块硬盘进行卷组合并，卷组的名称可以由用户来自定义。接下来，根据需求把合并后的卷组切割出一个约为150MB的逻辑卷设备，最后把这个逻辑卷设备格式化成EXT4文件系统后挂载使用。</p><p>第1步：让新添加的两块硬盘设备支持LVM技术。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvcreate  &#x2F;dev&#x2F;sdb &#x2F;dev&#x2F;sdc</span><br></pre></td></tr></table></figure><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201015095211198.png" alt="image-20201015095211198"></p><p>第2步：把两块硬盘设备加入到storage卷组中，然后查看卷组的状态。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vgcreate storge  &#x2F;dev&#x2F;sdb  &#x2F;dev&#x2F;sdc</span><br><span class="line">vgdisplay  #查看vg卷组状态</span><br></pre></td></tr></table></figure><p>第3步：切割出一个约为150MB的逻辑卷设备。</p><p>这里需要注意切割单位的问题。在对逻辑卷进行切割时有两种计量单位。第一种是以容量为单位，所使用的参数为-L。例如，使用-L 150M生成一个大小为150MB的逻辑卷。另外一种是以基本单元的个数为单位，所使用的参数为-l。每个基本单元的大小默认为4MB。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lvcreate -n  vo -l 37 storge  #创建了大小为37x4大小名为vo的逻辑卷</span><br><span class="line">lvdisplay   #查看lv逻辑卷状态</span><br></pre></td></tr></table></figure><p>第4步：把生成好的逻辑卷进行格式化，然后挂载使用。</p><p>Linux系统会把LVM中的逻辑卷设备存放在/dev设备目录中（实际上是做了一个符号链接），同时会以卷组的名称来建立一个目录，其中保存了逻辑卷的设备映射文件（即/dev/卷组名称/逻辑卷名称）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4  &#x2F;dev&#x2F;storge&#x2F;vo   #&#x2F;dev&#x2F;卷组名称&#x2F;逻辑卷名称</span><br><span class="line">mkdir &#x2F;data</span><br><span class="line">mount &#x2F;dev&#x2F;storge&#x2F;vo  &#x2F;data</span><br></pre></td></tr></table></figure><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201015102706619.png" alt="image-20201015102706619"></p><p>第5步：查看挂载状态，并写入到配置文件，使其永久生效。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br><span class="line">echo &quot;dev&#x2F;storge&#x2F;vo  &#x2F;data  ext4  defaults 0 0&quot; &gt;&gt; &#x2F;etc&#x2F;fstab</span><br></pre></td></tr></table></figure><h4 id="扩容逻辑卷"><a href="#扩容逻辑卷" class="headerlink" title="扩容逻辑卷"></a>扩容逻辑卷</h4><p>只要卷组中有足够的资源，就可以一直为逻辑卷扩容。扩展前一定要记得卸载设备和挂载点的关联。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount &#x2F;data</span><br></pre></td></tr></table></figure><p>第1步：把逻辑卷vo扩展至290MB。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvextend -L 290M &#x2F;dev&#x2F;storge&#x2F;vo</span><br></pre></td></tr></table></figure><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201015103350087.png" alt="image-20201015103350087"></p><p>第2步：检查硬盘完整性，并重置硬盘容量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">e2fsck -f  &#x2F;dev&#x2F;storge&#x2F;vo  #检查硬盘完整性</span><br><span class="line"></span><br><span class="line">resize2fs  &#x2F;dev&#x2F;storge&#x2F;vo  #重置硬盘容量</span><br></pre></td></tr></table></figure><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201015103723401.png" alt="image-20201015103723401"></p><p>第3步：重新挂载硬盘设备并查看挂载状态。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount -a</span><br><span class="line">df -h</span><br></pre></td></tr></table></figure><h4 id="逻辑卷快照"><a href="#逻辑卷快照" class="headerlink" title="逻辑卷快照"></a>逻辑卷快照</h4><p>LVM还具备有“快照卷”功能，该功能类似于虚拟机软件的还原时间点功能。例如，可以对某一个逻辑卷设备做一次快照，如果日后发现数据被改错了，就可以利用之前做好的快照卷进行覆盖还原。LVM的快照卷功能有两个特点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">快照卷的容量必须等同于逻辑卷的容量</span><br><span class="line"></span><br><span class="line">快照卷仅一次有效，一旦执行还原操作后则会立即删除</span><br></pre></td></tr></table></figure><p>首先查看卷组的信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgdisplay</span><br></pre></td></tr></table></figure><p>第1步：使用-s参数生成一个快照卷，使用-L参数指定切割的大小。另外，还需要在命令后面写上是针对哪个逻辑卷执行的快照操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lvcreate -L 120M -s -n SNAP &#x2F;dev&#x2F;storge&#x2F;vo</span><br><span class="line">lvdisplay</span><br></pre></td></tr></table></figure><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201015105039050.png" alt="image-20201015105039050"></p><p>第2步：在逻辑卷所挂载的目录中创建一个100MB的垃圾文件，然后再查看快照卷的状态。可以发现存储空间占的用量上升了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dd if&#x3D;&#x2F;dev&#x2F;zero  of&#x3D;linux&#x2F;files  count&#x3D;1  bs&#x3D;100M</span><br><span class="line">lvdisplay</span><br></pre></td></tr></table></figure><p>第3步：为了校验SNAP快照卷的效果，需要对逻辑卷进行快照还原操作。在此之前记得先卸载掉逻辑卷设备与目录的挂载。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">umount &#x2F;data</span><br><span class="line"></span><br><span class="line">lvconvert  --merge &#x2F;dev&#x2F;storge&#x2F;SNAP</span><br></pre></td></tr></table></figure><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201015105435927.png" alt="image-20201015105435927"></p><p>第4步：快照卷会被自动删除掉。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -a</span><br></pre></td></tr></table></figure><h4 id="删除逻辑卷"><a href="#删除逻辑卷" class="headerlink" title="删除逻辑卷"></a>删除逻辑卷</h4><p>当生产环境中想要重新部署LVM或者不再需要使用LVM时，则需要执行LVM的删除操作。为此，需要提前备份好重要的数据信息，然后依次删除逻辑卷、卷组、物理卷设备，这个顺序不可颠倒。</p><p>第1步：取消逻辑卷与目录的挂载关联，删除配置文件中永久生效的设备参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">umount  &#x2F;data</span><br><span class="line">vim  &#x2F;etc&#x2F;fstab</span><br></pre></td></tr></table></figure><p>第2步：删除逻辑卷设备，需要输入y来确认操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvremove  &#x2F;dev&#x2F;storge&#x2F;vo</span><br></pre></td></tr></table></figure><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201015110242342.png" alt="image-20201015110242342"></p><p>第3步：删除卷组，此处只写卷组名称即可，不需要设备的绝对路径。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgremove storge</span><br></pre></td></tr></table></figure><p>第4步：删除物理卷设备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvremove  &#x2F;dev&#x2F;sdb  &#x2F;dev&#x2F;sdc</span><br></pre></td></tr></table></figure><p><img src="/2020/10/14/Linux%E5%9F%BA%E7%A1%80/image-20201015110441450.png" alt="image-20201015110441450"></p><p>在上述操作执行完毕之后，再执行lvdisplay、vgdisplay、pvdisplay命令来查看LVM的信息时就不会再看到信息了。</p><h2 id="禁用IPV6"><a href="#禁用IPV6" class="headerlink" title="禁用IPV6"></a>禁用IPV6</h2><p>IPv6早在上个世纪90年代，它就已经诞生了。IPv6全称Internet Protocol version 6，是网际协议的最新版本，用作互联网的协议。用它来取代IPv4主要是为了解决IPv4地址枯竭问题，同时它也在其他方面对于IPv4有许多改进。</p><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><p>RHEL7.3</p><h4 id="更改配置"><a href="#更改配置" class="headerlink" title="更改配置"></a>更改配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;sysctl.conf </span><br><span class="line"></span><br><span class="line"># sysctl settings are defined through files in</span><br><span class="line"># &#x2F;usr&#x2F;lib&#x2F;sysctl.d&#x2F;, &#x2F;run&#x2F;sysctl.d&#x2F;, and &#x2F;etc&#x2F;sysctl.d&#x2F;.</span><br><span class="line">#</span><br><span class="line"># Vendors settings live in &#x2F;usr&#x2F;lib&#x2F;sysctl.d&#x2F;.</span><br><span class="line"># To override a whole file, create a new file with the same in</span><br><span class="line"># &#x2F;etc&#x2F;sysctl.d&#x2F; and put new settings there. To override</span><br><span class="line"># only specific settings, add a file with a lexically later</span><br><span class="line"># name in &#x2F;etc&#x2F;sysctl.d&#x2F; and put new settings there.</span><br><span class="line">#</span><br><span class="line"># For more information, see sysctl.conf(5) and sysctl.d(5).</span><br><span class="line"></span><br><span class="line">net.ipv6.conf.all.disable_ipv6 &#x3D; 1</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 &#x3D; 1</span><br><span class="line"></span><br><span class="line">sysctl -p  #让配置文件立即生效</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="Linux系统安全" scheme="http://yoursite.com/categories/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Linux加固" scheme="http://yoursite.com/tags/Linux%E5%8A%A0%E5%9B%BA/"/>
    
  </entry>
  
  <entry>
    <title>Centos7.1基础命令集</title>
    <link href="http://yoursite.com/2020/10/14/Centos7-1%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4%E9%9B%86/"/>
    <id>http://yoursite.com/2020/10/14/Centos7-1基础命令集/</id>
    <published>2020-10-14T03:09:31.000Z</published>
    <updated>2020-10-14T08:57:42.008Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><p>查看系统版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -q centos-release或cat &#x2F;etc&#x2F;redhat-release或more &#x2F;etc&#x2F;*release</span><br></pre></td></tr></table></figure><p>查看内核版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;version或uname -a</span><br></pre></td></tr></table></figure><p>查看硬件CPU核数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;cpuinfo | grep name | cut -f2 -d: | uniq -c</span><br><span class="line">或 cat &#x2F;proc&#x2F;cpuinfo</span><br></pre></td></tr></table></figure><p>查看运行模式-CPU运行在多少位模式下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getconf LONG_BIT</span><br></pre></td></tr></table></figure><p>查看系统运行时长/负载数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uptime</span><br></pre></td></tr></table></figure><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><p>查看内存：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;meminfo  内存的详细信息</span><br></pre></td></tr></table></figure><p>查看各分区使用情况：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><p>查看指定目录大小：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -sh 目录名</span><br></pre></td></tr></table></figure><p>查看所有分区：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><p>查看所有交换分区：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon -s</span><br></pre></td></tr></table></figure><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><p>查看所有网络接口信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>网络服务[重启|停止|开始]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl  restart&#x2F;stop&#x2F;start  network.service</span><br></pre></td></tr></table></figure><p>查看网卡带宽：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ethtool 网卡名</span><br></pre></td></tr></table></figure><p>确定网卡：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ethtool -p eno1  一直闪烁的口为网口eno1</span><br></pre></td></tr></table></figure><p>查看路由表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route -n</span><br></pre></td></tr></table></figure><p>查看所有监听端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntp</span><br></pre></td></tr></table></figure><p>查看所有已经建立的连接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat  -antp</span><br></pre></td></tr></table></figure><p>某端口的使用情况：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:端口号</span><br></pre></td></tr></table></figure><p>配置网卡信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-XXX</span><br><span class="line">TYPE&#x3D;Ethernet</span><br><span class="line">BOOTPROTO&#x3D;static</span><br><span class="line">NAME&#x3D;&quot;eno1&quot;</span><br><span class="line">IPADDR&#x3D;192.168.5.x</span><br><span class="line">NETMASK&#x3D;255.255.255.0</span><br><span class="line">GATEWAY&#x3D;192.168.5.1</span><br><span class="line">DEVICE&#x3D;&quot;eno1&quot;</span><br><span class="line">ONBOOT&#x3D;yes</span><br><span class="line">NETBOOT&#x3D;yes</span><br><span class="line">UUID&#x3D;&quot;a904ac18-b95a-49ae-94e6-be8266fe6a6b&quot;</span><br></pre></td></tr></table></figure><h2 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h2><p>时区调整：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-local-rtc 1   #将硬件时钟调整与本地时钟一致</span><br><span class="line">timedatectl set-timezone Asia&#x2F;Shanghai  #设置系统时区为上海</span><br></pre></td></tr></table></figure><p>时间调整：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date -s 2012-11-10 10:20:20</span><br></pre></td></tr></table></figure><p>设置RTC(硬件时钟)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hwclock --systohc  设置硬件时间，使硬件时钟与系统时间同步</span><br></pre></td></tr></table></figure><p>查看时间：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl</span><br></pre></td></tr></table></figure><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><p>查看所有进程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef |grep tomcat[进程关键字]</span><br></pre></td></tr></table></figure><p>实时显示进程状态：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure><h2 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h2><p>查看活动用户：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">w</span><br></pre></td></tr></table></figure><p>查看指定用户信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id &lt;用户名&gt;</span><br></pre></td></tr></table></figure><p>查看用户登录日志：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">last</span><br></pre></td></tr></table></figure><p>查看系统所有用户：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut -d: -f1 &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><p>开启服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start 名称.service</span><br></pre></td></tr></table></figure><p>重启服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart 名称.service</span><br></pre></td></tr></table></figure><p>停止服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop 名称.service</span><br></pre></td></tr></table></figure><p>开机启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable 名称.service</span><br></pre></td></tr></table></figure><p>当前状态：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status 名称.service</span><br></pre></td></tr></table></figure><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><p>centos7的防火墙用的是firewalld,它是动态的，可通过命令添加开启端口。</p><p>启动服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure><p>停止服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p>查看状态：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><p>禁用服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable  firewalld</span><br></pre></td></tr></table></figure><p>开启端口命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">永久开启80端口：firewall-cmd -zone&#x3D;public --add-port&#x3D;80&#x2F;tcp -permanent</span><br><span class="line">--add-port&#x3D;80&#x2F;tcp #添加端口，格式为：端口&#x2F;通讯协议</span><br><span class="line">-permanent #永久生效，没有此参数重启后失效</span><br></pre></td></tr></table></figure><p>更新防火墙规则：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h2><p>关闭firwalld：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service #停止firewall</span><br><span class="line">systemctl disable firewalld.service #禁止firewall开机启动</span><br><span class="line">firewall-cmd --state #查看默认防火墙状态（关闭后显示not running，开启后显示running）</span><br></pre></td></tr></table></figure><p>编辑iptables：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">vi&#x2F;etc&#x2F;sysconfig&#x2F;iptables #编辑防火墙配置文件</span><br><span class="line">*filter</span><br><span class="line">:INPUT ACCEPT [0:0]</span><br><span class="line">:FORWARD ACCEPT[0:0]</span><br><span class="line">:OUTPUT ACCEPT[0:0]</span><br><span class="line">-A INPUT -m state--state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">-A INPUT -p icmp -jACCEPT</span><br><span class="line">-A INPUT -i lo -jACCEPT</span><br><span class="line">-A INPUT -p tcp -mstate --state NEW -m tcp --dport 22 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -jACCEPT</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 8080-j ACCEPT</span><br><span class="line">-A INPUT -j REJECT--reject-with icmp-host-prohibited</span><br><span class="line">-A FORWARD -j REJECT --reject-with icmp-host-prohibited</span><br><span class="line">COMMIT</span><br><span class="line">:wq! #保存退出</span><br><span class="line"></span><br><span class="line">systemctl restart iptables.service #最后重启防火墙使配置生效</span><br><span class="line">systemctl enable iptables.service #设置防火墙开机启动</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="问题解决" scheme="http://yoursite.com/categories/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="日常踩坑" scheme="http://yoursite.com/tags/%E6%97%A5%E5%B8%B8%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>产品文档输出</title>
    <link href="http://yoursite.com/2020/10/11/%E4%BA%A7%E5%93%81%E6%96%87%E6%A1%A3%E8%BE%93%E5%87%BA/"/>
    <id>http://yoursite.com/2020/10/11/产品文档输出/</id>
    <published>2020-10-11T03:54:22.000Z</published>
    <updated>2020-10-11T07:57:30.903Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="产品产生的过程"><a href="#产品产生的过程" class="headerlink" title="产品产生的过程"></a>产品产生的过程</h2><p>一款产品从本质上来讲，一定是满足了用户的某种需求。</p><h4 id="想法酝酿与构建"><a href="#想法酝酿与构建" class="headerlink" title="想法酝酿与构建"></a>想法酝酿与构建</h4><p>此阶段主要是从用户所面临的问题出发，抓住问题的核心所在，开始萌生一个产品的想法，逐渐经过酝酿及逻辑构建，形成产品化解决该问题的思路，即建立通过一个产品解决所遇到问题的意图。</p><h4 id="分析与论证"><a href="#分析与论证" class="headerlink" title="分析与论证"></a>分析与论证</h4><p>此阶段主要是从用户所面临的问题出发，抓住问题的核心所在，开始萌生一个产品的想法，逐渐经过酝酿及逻辑构建，形成产品化解决该问题的思路，即建立通过一个产品解决所遇到问题的意图。</p><h4 id="需求管理"><a href="#需求管理" class="headerlink" title="需求管理"></a>需求管理</h4><p>此阶段是在上一阶段分析论证认为产品的初步想法可行的前提下，开始全面采集和筛选产品需求，并对需求进行分析，界定需求范围。</p><h4 id="总体规划"><a href="#总体规划" class="headerlink" title="总体规划"></a>总体规划</h4><p>此阶段主要是完成界定清楚前进的方向和目标，筹划给出实现目标的策略。</p><h4 id="具体设计"><a href="#具体设计" class="headerlink" title="具体设计"></a>具体设计</h4><p>在产品大方向和目标确定后，此阶段就是要具体设计产品的基本骨架和血肉，是产品由概念一步一步走向实体，形成一个可观察可体验的原型呈现在用户眼前。具体来讲，包括产品用例结构、功能架构、信息架构以及交互体验、界面效果等几个方面的设计。</p><h4 id="开发实现"><a href="#开发实现" class="headerlink" title="开发实现"></a>开发实现</h4><p>此阶段是按照已经形成的产品需求，利用程序代码将产品真正实现，即将产品由一个仿真的实体变成一个真正的实体。</p><h4 id="上线发布"><a href="#上线发布" class="headerlink" title="上线发布"></a>上线发布</h4><p>当产品开发完成后，经过测试验证与之前设计的原型一致，并且能够稳定运行不出错误后，产品就可以正式被部署到服务器上，在网上上线发布，供广大目标用户使用。</p><h4 id="基本流程框架"><a href="#基本流程框架" class="headerlink" title="基本流程框架"></a>基本流程框架</h4><p>可以总结出产品设计的基本过程框架：</p><p><img src="/2020/10/11/%E4%BA%A7%E5%93%81%E6%96%87%E6%A1%A3%E8%BE%93%E5%87%BA/image-20201011121528240.png" alt="image-20201011121528240"></p><h2 id="产品设计工具"><a href="#产品设计工具" class="headerlink" title="产品设计工具"></a>产品设计工具</h2><h4 id="思维构建工具"><a href="#思维构建工具" class="headerlink" title="思维构建工具"></a>思维构建工具</h4><p>随着思维导图思想及信息技术的发展，人们设计出了专门的思维导图软件工具，用于制作思维导图，这样的软件工具有很多，如XMind、 MindManger、iMindMap、百度脑图、亿图图示等，在这些工具中，前两个被使用得比较多。</p><h4 id="流程图工具"><a href="#流程图工具" class="headerlink" title="流程图工具"></a>流程图工具</h4><p>流程图是以特定图形符号来描述流程的，流程图的基本符号如下：</p><p><img src="/2020/10/11/%E4%BA%A7%E5%93%81%E6%96%87%E6%A1%A3%E8%BE%93%E5%87%BA/image-20201011154625143.png" alt="image-20201011154625143"></p><p>有很多软件工具可以用来绘制流程图，其绘制方式大同小异，只要按照思路从绘图工具栏中拖动出需要的符号进行组合即可。常见的绘制流程图工具有以下几种：</p><p>1、纸和笔</p><p>2、亿图图示</p><p>3、Visio</p><p>4、ProcessOn</p><p>ProcessOn是一个基于Web的免费画流程图的网站。它的特点是：免费、不用安装、可以多人同时登录画一张流程图。</p><h4 id="原型设计工具"><a href="#原型设计工具" class="headerlink" title="原型设计工具"></a>原型设计工具</h4><p>原型就是用线条、图形描绘出来的产品框架。通常用于产品经理与研发人员之间的沟通，有的情况下，在产品未研发出来的时候，也会用原型面向用户测试产品的可用性等。</p><p>在实际工作中，产品经理可以利用各种各样的工具便捷地绘制原型。下面介绍一些基本的绘制原型的工具及其使用方法：</p><p>1、纸和笔</p><p>2、Axure RP</p><p>Axure RP是一个专业的快速原型设计工具。Axure代表美国Axure公司；RP则是Rapid Prototyping（快速原型）的缩写。Axure RP也是目前产品设计人员使用的主流原型设计工具，它的操作简单、上手快，可以轻松快捷地以鼠标的方式快速创建网站或者移动端产品的原型图，不用进行编程就可以在图上定义简单链接和高级交互。除此之外，还可自动生成用于演示的网页文档和Word文档，以供演示或者供开发人员沟通理解需求。目前，Axure RP具有Windows和Mac两个版本。</p><p>3、Balsamiq Mockups</p><p>Balsamiq Mockups是一款轻量的、手绘风格的原型设计工具，通过它你可以创建朴素的原型图，非常适合用来绘制低保真原型图。Balsamiq Mockups的运行环境多样，它能够在不同浏览器上运行；也可以安装在Windows 7、Mac等不同操作系统平台下；可以在线使用，亦可以离线使用。</p><p>4、POP</p><p>POP（Prototyping on Paper）是由台湾Woomoo团队开发的一款移动App原型设计软件。只要用手机拍下手绘草稿，在POP里设计好链接区域，就能变成可互动的原型。这款软件可以快速将你的想法从纸上转移到屏幕上并进行再加工。</p><h4 id="项目管理工具"><a href="#项目管理工具" class="headerlink" title="项目管理工具"></a>项目管理工具</h4><p>1、甘特图</p><p>所有的项目管理工具中，甘特图是容易理解、容易使用并内容较全面的一种。甘特图基本上是一条线条图，横轴表示时间，纵轴表示活动（项目），线条表示在整个期间计划和实际的活动完成情况，它以图示的方式形象地表示出项目的实施顺序、开始时间和持续时间等。使用者可以直观地看到项目的进展情况，了解活动在什么时候进行、还剩下哪些工作要做，以及实际进展与计划要求的对比情况。</p><p><img src="/2020/10/11/%E4%BA%A7%E5%93%81%E6%96%87%E6%A1%A3%E8%BE%93%E5%87%BA/image-20201011155325800.png" alt="image-20201011155325800"></p><p>2、Teambition</p><p>Teambition提供了一个像便利贴墙的任务板，使用者可以在上面发布并阅读任务。针对每一个任务，还可以分解子任务、搭载附件、设定截止日期。</p><p><img src="/2020/10/11/%E4%BA%A7%E5%93%81%E6%96%87%E6%A1%A3%E8%BE%93%E5%87%BA/image-20201011155426192.png" alt="image-20201011155426192"></p><p>3、禅道</p><p>禅道是我国开发的一款开源项目管理软件，分为开源版本和专业版本。它的主要管理思想基于国际流行的敏捷项目管理方法——Scrum。Scrum方法注重实效，操作性强，非常适合软件研发项目的快速迭代开发。</p><p><img src="/2020/10/11/%E4%BA%A7%E5%93%81%E6%96%87%E6%A1%A3%E8%BE%93%E5%87%BA/image-20201011155527213.png" alt="image-20201011155527213"></p><p>禅道明确地将产品、项目、测试三者概念区分开，产品人员、开发团队、测试人员，三者分立，互相配合，又互相制约，通过需求、任务、bug来进行交相互动，最终通过项目拿到合格的产品。</p><p>总体来讲，禅道集产品管理、项目管理、质量管理、文档管理、组织管理和事务管理于一体，是一款专业的研发项目管理软件，完整覆盖了研发项目管理的核心流程。也就是说，它是专门针对软件研发项目管理的专业工具。</p><p><img src="/2020/10/11/%E4%BA%A7%E5%93%81%E6%96%87%E6%A1%A3%E8%BE%93%E5%87%BA/image-20201011155703831.png" alt="image-20201011155703831"></p><h2 id="产品PRD文档"><a href="#产品PRD文档" class="headerlink" title="产品PRD文档"></a>产品PRD文档</h2><p>在完成分析功能角色、分析业务流程、梳理产品结构、绘制原型这些工作之后，一个定义清晰、功能逻辑结构明确、信息结构和体验效果具象的产品已经鲜活地浮现在眼前。接下来的工作就是集合前期所有的设计成果，按一定的方式把这些成果进行归集和说明，形成文档输出，以便于其他相关人员理解和把握产品，按规划设计开展进一步的产品开发与实现的工作。一般为了让产品其他关联人员明确理解产品需求，需要产品经理输出的文档有BRD（商业需求文档）、MRD（市场需求文档）和PRD（产品需求文档）。在实际工作中，BRD和MRD通常由更高级别的角色负责决断，比如直接由公司老板或者负责产品的高管具体判断和决策。对于一般产品经理而言，最主要的是负责输出PRD。</p><h2 id="什么是PRD文档"><a href="#什么是PRD文档" class="headerlink" title="什么是PRD文档"></a>什么是PRD文档</h2><p>PRD（product requirement document）是指产品需求文档，它以文档的形式定义、说明产品需求，让团队内成员明确产品需求，达成共识，从而面向一致的目标和方向推进后续的工作。几乎团队的所有成员都会使用到PRD：研发人员、测试人员、交互设计师、运营人员等。例如研发人员根据PRD获知整个产品的逻辑，进而搭建产品架构进行开发；测试人员可以根据PRD建立测试用例；交互设计则可以根据PRD来设计交互细节。总之，在产品项目正式进入开发阶段之前，PRD是必须通过评审确定的重要文档。</p><p>PRD文档的形式主要有：Word和原型两种类型。有的产品设计人员习惯撰写Word来写PRD，有的产品设计人员则直接用原型来制作。目前来说，使用Word形式的PRD还是主流。</p><h2 id="PRD文档组成"><a href="#PRD文档组成" class="headerlink" title="PRD文档组成"></a>PRD文档组成</h2><p>PRD文档通常包括以下几个部分：</p><h4 id="文档信息"><a href="#文档信息" class="headerlink" title="文档信息"></a>文档信息</h4><p>文档信息包括文档版本号、文档编号、产品名、归属部门/项目、编写人和编写日期等信息，如表5-9所示。一般来说，版本的命名格式是：××产品××××需求PRD_V2。</p><p><img src="/2020/10/11/%E4%BA%A7%E5%93%81%E6%96%87%E6%A1%A3%E8%BE%93%E5%87%BA/image-20201011115912741.png" alt="image-20201011115912741"></p><h4 id="版本记录"><a href="#版本记录" class="headerlink" title="版本记录"></a>版本记录</h4><p>版本记录信息包括：版本号、修订人、修订日期、修订内容和修订原因，如下表。文档“版本号”显示的当前修改的内容属于文档的第几个版本，“修订说明”这一部分需说明具体修改了哪些内容，以及修改的原因，以便阅读人理解。</p><p><img src="/2020/10/11/%E4%BA%A7%E5%93%81%E6%96%87%E6%A1%A3%E8%BE%93%E5%87%BA/image-20201011120024165.png" alt="image-20201011120024165"></p><h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><p>主要是展示文档的范围和结构。</p><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>这一部分是对整个PRD的概述，介绍文档的目的、文档的使用对象、名词说明和参考资料。有的文档中会出现一些新的名词，在这里应该解释一下这些名词，方便适用对象的阅读。</p><h4 id="产品概述"><a href="#产品概述" class="headerlink" title="产品概述"></a>产品概述</h4><p>这部分是要对产品进行一个总体的概要说明。具体包括：产品概述、用户说明、运行环境等。</p><p>1、产品目标：介绍产品的研发背景和目标；</p><p>2、用户说明：介绍产品的最终使用者，以及使用者的角色和操作行为；</p><p>3、产品功能：包括总体的业务流程图、产品的功能结构图以及对应的优先级；</p><p>4、运行环境：说明产品上线后的使用环境，例如操作系统要求、使用的浏览器类型及其版本要求等；</p><p>5、项目周期：这部分介绍产品需求、设计、开发、测试、上线等的相关周期；</p><p>6、产品风险：描述产品可能存在的风险内容、可能的原因、造成的危害，以及相应的应对策略。</p><h4 id="功能性需求"><a href="#功能性需求" class="headerlink" title="功能性需求"></a>功能性需求</h4><p><strong>产品的功能性需求是PRD的核心内容。</strong>功能性需求是指有具体的完成内容的需求，例如：客户登录、邮箱网站的收发邮件、论坛网站的发帖留言等。相对应的还有非功能性需求，这是指软件产品为满足用户业务需求而必须具有且除功能性需求以外的特性，例如：产品性能方面的需求（比如能承担20万人同时使用），或者运营等其他部门的需求。</p><p>撰写产品的系统功能性需求时可从以下几个方面考虑：</p><p>1、需求信息</p><p>需求信息包括需求名称以及需求的优先级，优先级可以直接按序号来表示。</p><p>2、需求说明</p><p>需求说明是对某一项需求功能进行描述，描述清楚功能的使用者、使用场景、使用动作与步骤、使用结果。</p><p>3、功能用例图</p><p>这里要用用例图来说明此功能的具体情况。</p><p>4、功能流程图</p><p>这里即是用流程图展示此功能的运行情况。</p><p>5、产品界面流程</p><p>这部分要呈现上述用例图和流程图所描述的功能的产品原型界面。除了静态的原型界面，在原型界面上还要附上各个部件的文字说明，以及页面的动作和跳转逻辑。</p><p>6、相关数据字段</p><p>数据字段是数据库中的概念。我们把数据表中的每一行叫作一个“记录”，而表中每一列的数据都是属于同一类的，这个数据类型就是数据字段。比如设计一款产品的注册登录功能，需要收集用户的账号、密码、手机号这些信息，那么用户的“账号”“密码”“手机号”就是你要确定的数据字段。这其实与前面梳理产品的信息结构是对应的，产品的信息结构中规定了什么信息，产品开发时就要设计相应的字段进行记录。</p><h4 id="非功能性需求"><a href="#非功能性需求" class="headerlink" title="非功能性需求"></a>非功能性需求</h4><p>一般情况下非功能性需求包括以下两类：</p><p>1、产品性能方面需求</p><p>包括产品性能需求、测试环境需求、产品数据统计需求、安全性需求、产品兼容性需求等。</p><p>产品性能需求是指用户承载量、产品响应速度等类似的需求。</p><p>测试环境的需求包括产品测试环境与正式上线环境的需求。</p><p>产品数据统计需求主要包括相关事件埋点的统计需求、接入第三方数据统计接口的需求。</p><p>安全性需求则是包括恶意注册防范需求、恶意刷数据防范需求等。</p><p>产品兼容性需求很好理解，主要表现为产品在客户端和Web端的各种需求，例如主流设备的尺寸。</p><p>2、其他业务/部门的要求</p><p>这包括产品营销需求、运营需求、财务需求、法务需求、使用帮助、问题反馈等。确定这些需求时需要与产品相关部门进行沟通。只有充分地沟通，才能让更多的人协助产品的正常使用与上线。一般撰写PRD不一定包含以上所有的非功能性需求，根据实际情况选择即可。</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>在实际工作中，有的PRD在描述完非功能性需求以后就结束了，有的还需要增添一些其他内容。例如运营计划，需要在这里介绍产品上线后如何运营，目标受众是什么，建议的推广策略，问题反馈途径，亮点宣传，以及与运营人员的协作方式，等等。</p><p>PRD文档没有统一的模板，这取决于产品团队的习惯，每个团队、每个产品设计人员都可能撰写出不同风格的文档。只要能够表述清楚产品的需求，文档的阅读者能够达成对产品的一致理解，并获取所需的信息即可。也就是说，PRD的核心意义在于沟通产品需求，以便达成切实一致的理解，所以只要内容清楚，有利于达成这个核心目标即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="问题解决" scheme="http://yoursite.com/categories/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="日常踩坑" scheme="http://yoursite.com/tags/%E6%97%A5%E5%B8%B8%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>Python-数据图表设计</title>
    <link href="http://yoursite.com/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/"/>
    <id>http://yoursite.com/2020/10/10/Python-数据图表设计/</id>
    <published>2020-10-10T07:02:15.000Z</published>
    <updated>2020-10-11T08:11:15.607Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p>数据图形的绘制所使用的工具是matplotlib绘图库模块，使用前需先安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install matplotlib</span><br></pre></td></tr></table></figure><p>matplotlib是一个庞大的绘图库模块，只导入其中的pyplot子模块就可以完成许多图表绘制,调用方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br></pre></td></tr></table></figure><h2 id="简单的折线图"><a href="#简单的折线图" class="headerlink" title="简单的折线图"></a>简单的折线图</h2><h4 id="show"><a href="#show" class="headerlink" title="show()"></a>show()</h4><p>show( )方法主要是显示所绘制的图形，当绘制图形完成后，可以调用此方法。</p><h4 id="画线plot"><a href="#画线plot" class="headerlink" title="画线plot()"></a>画线plot()</h4><p>应用方式是将含数据的列表当参数传给plot( )，列表内的数据会被视为y轴的值，x轴的值会依列表值的索引位置自动产生。</p><p>如绘制数据基本上是1-8的平方值的折线：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010151348979.png" alt="image-20201010151348979"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010151435846.png" alt="image-20201010151435846"></p><p>可以看到左下角的轴刻度不是(0,0)，可以使用axis( )设定x,y轴的最小和最大刻度。</p><p>将轴刻度x轴设为0,8，y轴刻度设为0,70。</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010151553847.png" alt="image-20201010151553847"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010151617747.png" alt="image-20201010151617747"></p><h4 id="线条宽度linewidth"><a href="#线条宽度linewidth" class="headerlink" title="线条宽度linewidth"></a>线条宽度linewidth</h4><p>使用plot( )时，可以多加一个linewidth(缩写是lw)参数设定线条的粗细。</p><p>如设定线条宽度为3：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010151721189.png" alt="image-20201010151721189"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010151748089.png" alt="image-20201010151748089"></p><h4 id="标题的显示"><a href="#标题的显示" class="headerlink" title="标题的显示"></a>标题的显示</h4><p>目前matplotlib模块不支持中文显示，下列是几个图表重要的方法。</p><p>title( )：图表标题。</p><p>xlabel( )：x轴标题。</p><p>ylabel( )：y轴标题。</p><p>上述方法可以显示默认大小是12的字体，它的语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title(标题名称，fontsize&#x3D;数值大小)  #同时可用在xlabel()和ylabel()</span><br></pre></td></tr></table></figure><p>使用默认字号为图表与x/y轴建立标题:</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010152051237.png" alt="image-20201010152051237"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010152116192.png" alt="image-20201010152116192"></p><h4 id="坐标轴刻度"><a href="#坐标轴刻度" class="headerlink" title="坐标轴刻度"></a>坐标轴刻度</h4><p>在设计图表时可以使用tick_params( )设计设定坐标轴的刻度大小、颜色以及应用范围。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tick_params(axis&#x3D;&#39;xx&#39;,labelsize&#x3D;xx,color&#x3D;&#39;xx&#39; )  #labelsize&#x3D;xx代表刻度大小</span><br></pre></td></tr></table></figure><p>如果axis的xx是both代表应用到x和y轴，如果xx是x代表应用到x轴，如果xx是y代表应用到y轴。color则是设定刻度的线条颜色，例如，red代表红色。</p><p>使用不同刻度与颜色：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010152728802.png" alt="image-20201010152728802"></p><h4 id="多组数据的应用"><a href="#多组数据的应用" class="headerlink" title="多组数据的应用"></a>多组数据的应用</h4><p>扩充多组数据，只要在plot( )内增加数据列表参数即可。此时plot( )的参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(第一组数据，第二组数据.....)</span><br></pre></td></tr></table></figure><p>如设计多组数据图的应用：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010153402762.png" alt="image-20201010153402762"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010153452276.png" alt="image-20201010153452276"></p><h4 id="线条色彩与样式"><a href="#线条色彩与样式" class="headerlink" title="线条色彩与样式"></a>线条色彩与样式</h4><p>如果想设定线条色彩，可以在plot( )内增加下列参数设定，下列是常见的色彩表。</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010153652539.png" alt="image-20201010153652539"></p><p>下列是常见的样式表。可以混合使用，例如，‘r-.’代表红色虚点线。</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010153733132.png" alt="image-20201010153733132"></p><p>如采用不同色彩与线条样式绘制图表：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010153820459.png" alt="image-20201010153820459"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010153841916.png" alt="image-20201010153841916"></p><h4 id="刻度设计"><a href="#刻度设计" class="headerlink" title="刻度设计"></a>刻度设计</h4><p>目前所有绘制图表x轴和y轴的刻度皆是plot( )方法针对所输入的参数采用默认值设定。</p><p>可以使用pyplot模块的xticks( )/yticks( )分别设定x/y轴刻度。</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010154005309.png" alt="image-20201010154005309"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010154038326.png" alt="image-20201010154038326"></p><h4 id="保存图片"><a href="#保存图片" class="headerlink" title="保存图片"></a>保存图片</h4><p>图表设计完成，可以使用savefig( )保存图片文件，这个方法需放在show( )的前方，表示先存储再显示图表。</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010154530375.png" alt="image-20201010154530375"></p><h2 id="绘制散点图scatter"><a href="#绘制散点图scatter" class="headerlink" title="绘制散点图scatter( )"></a>绘制散点图scatter( )</h2><h4 id="散点图的绘制"><a href="#散点图的绘制" class="headerlink" title="散点图的绘制"></a>散点图的绘制</h4><p>绘制散点图可以使用scatter( )，最基本语法应用如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scatter(x,y,s,c)</span><br></pre></td></tr></table></figure><p>(x,y)位置绘图，其中(0,0)位置在左下角，x轴刻度往右增加，y轴刻度往上增加。s是绘图点的大小，默认是20。c是颜色，默认是蓝色。</p><p>如在坐标轴(5,5)绘制一个点：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010155028889.png" alt="image-20201010155028889"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010155054982.png" alt="image-20201010155054982"></p><h4 id="绘制系列点"><a href="#绘制系列点" class="headerlink" title="绘制系列点"></a>绘制系列点</h4><p>绘制系列点，可以将系列点的x轴值放在一个列表，y轴值放在另一个列表，然后将这2个列表当参数放在scatter( )即可。</p><p>如绘制系列点的应用：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010155206923.png" alt="image-20201010155206923"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010155231822.png" alt="image-20201010155231822"></p><h4 id="设定绘图区间"><a href="#设定绘图区间" class="headerlink" title="设定绘图区间"></a>设定绘图区间</h4><p>可以使用axis( )设定绘图区间，语法格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axis([xmin,xmax,ymin,ymax])  #分别代表x和y轴的最大最小区间</span><br></pre></td></tr></table></figure><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010155540194.png" alt="image-20201010155540194"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010155603393.png" alt="image-20201010155603393"></p><h2 id="Numpy模块"><a href="#Numpy模块" class="headerlink" title="Numpy模块"></a>Numpy模块</h2><p>Numpy是Python的一个扩充模块，主要是可以支持多维度空间的数组与矩阵运算。导入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import Numpy as np</span><br></pre></td></tr></table></figure><h4 id="简单的数组linspace-和arange"><a href="#简单的数组linspace-和arange" class="headerlink" title="简单的数组linspace( )和arange( )"></a>简单的数组linspace( )和arange( )</h4><p>在Numpy模块中最基本的就是linspace( )方法，使用它可以很方便产生相同等距的数组，它的语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">linspace(start,end,num)</span><br></pre></td></tr></table></figure><p>start是起始值，end是结束值，num是设定产生多少个等距的数组值，num的默认值是50。</p><p>另一个常看到产生数组的方法是arange( )，语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arange(start,stop,step)</span><br></pre></td></tr></table></figure><p>start是起始值如果省略默认值是0，stop是结束值但是所产生的数组通常不包含此值，step是数组相邻元素的间距如果省略默认值是1。</p><p>如建立0, 1, …, 9, 10的数组：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010160154049.png" alt="image-20201010160154049"></p><h4 id="绘制波形"><a href="#绘制波形" class="headerlink" title="绘制波形"></a>绘制波形</h4><p>有了数组数据，可以很方便绘制sin和cos的波形变化。</p><p>绘制sin( )和cos( )的波形：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010160338653.png" alt="image-20201010160338653"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010160405398.png" alt="image-20201010160405398"></p><h4 id="建立不等宽度的散点图"><a href="#建立不等宽度的散点图" class="headerlink" title="建立不等宽度的散点图"></a>建立不等宽度的散点图</h4><p>在scatter( )方法中，(x,y)的数据可以是列表也可以是矩阵，预设所绘制点大小s的值是20，这个s可以是一个值也可以是一个数组数据，当它是一个数组数据时，利用更改数组值的大小，就可以建立不同大小的散点图。</p><p>使用Python绘制散点图时，如果将2个点之间绘了上百或上千个点，则可以产生绘制线条的视觉，如果再加上每个点的大小不同，且依一定规律变化，则可以有特别效果。</p><p>如建立一个不等宽度的图形：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010160727201.png" alt="image-20201010160727201"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010160751723.png" alt="image-20201010160751723"></p><h4 id="色彩映射color-mapping"><a href="#色彩映射color-mapping" class="headerlink" title="色彩映射color mapping"></a>色彩映射color mapping</h4><p>在色彩的使用中是允许色彩也是数组（或列表）随着数据而变化，此时色彩的变化是根据所设定的色彩映射值(color mapping)而定，例如有一个色彩映射值是rainbow，内容如下：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010160857840.png" alt="image-20201010160857840"></p><p>在数组（或列表）中，数值低的值颜色在左边，会随着数值变高颜色往右边移动。需在scatter( )中增加color(也可用c)设定，这时color的值就变成一个数组（或列表）。然后需增加参数cmap（英文是color map），这个参数主要是指定使用哪一种色彩映射值。</p><p>如色彩映射的应用：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010161040674.png" alt="image-20201010161040674"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010161130550.png" alt="image-20201010161130550"></p><h4 id="色彩映射表"><a href="#色彩映射表" class="headerlink" title="色彩映射表"></a>色彩映射表</h4><p>目前matplotlib协会所提供的色彩映射内容如下：</p><p>序列色彩映射表</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010161358480.png" alt="image-20201010161358480"></p><p>序列2色彩映射表</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201010161435589.png" alt="image-20201010161435589"></p><p>直觉一致的色彩映射表</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201011160104828.png" alt="image-20201011160104828"></p><p>发散式的色彩映射表</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201011160145604.png" alt="image-20201011160145604"></p><p>定性色彩映射表</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201011160213279.png" alt="image-20201011160213279"></p><p>杂项色彩映射表</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201011160241512.png" alt="image-20201011160241512"></p><h2 id="随机数的应用"><a href="#随机数的应用" class="headerlink" title="随机数的应用"></a>随机数的应用</h2><p>随机数在统计的应用中是非常重要的知识，用到的随机数方法为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.random(N)   #传回N个0.0至1.0之间的数字</span><br></pre></td></tr></table></figure><p>如产生100个0.0至1.0之间的随机数，使用brg色彩映射表绘出这个图表。</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201011160536580.png" alt="image-20201011160536580"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201011160601595.png" alt="image-20201011160601595"></p><h4 id="随机数的移动"><a href="#随机数的移动" class="headerlink" title="随机数的移动"></a>随机数的移动</h4><p>可以针对随机数的特性，让每个点随着随机数的变化产生有序列的随机移动，经过大量值的运算后，每次均可产生不同但有趣的图形。</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201011160855186.png" alt="image-20201011160855186"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201011160919789.png" alt="image-20201011160919789"></p><h4 id="隐藏坐标"><a href="#隐藏坐标" class="headerlink" title="隐藏坐标"></a>隐藏坐标</h4><p>可以使用axes( ).get_xaxis( )、axes( ).get_yaxis( )、set_visible( )方法隐藏坐标。</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201011161028473.png" alt="image-20201011161028473"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E6%95%B0%E6%8D%AE%E5%9B%BE%E8%A1%A8%E8%AE%BE%E8%AE%A1/image-20201011161053578.png" alt="image-20201011161053578"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python-网络爬虫</title>
    <link href="http://yoursite.com/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/"/>
    <id>http://yoursite.com/2020/10/10/Python-网络爬虫/</id>
    <published>2020-10-10T05:07:42.000Z</published>
    <updated>2020-10-10T06:55:02.138Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="浏览网页"><a href="#浏览网页" class="headerlink" title="浏览网页"></a>浏览网页</h2><p>Python有提供webbrowser模块，可以调用这个模块的open( )方法，就可以打开指定的网页了。在使用前需导入此模块：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import webbrowser</span><br></pre></td></tr></table></figure><p>如打开百度：</p><p><img src="/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/image-20201010131307765.png" alt="image-20201010131307765"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/image-20201010131401320.png" alt="image-20201010131401320"></p><h2 id="requests模块"><a href="#requests模块" class="headerlink" title="requests模块"></a>requests模块</h2><p>requests是第三方模块，安装模块指令为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure><h4 id="下载网页"><a href="#下载网页" class="headerlink" title="下载网页"></a>下载网页</h4><p>requests.get( )方法内需放置欲下载网页信息的网址当参数，这个方法可以传回网页的HTML源文件。</p><p>使用requests.get( )之后传回的数据类型是Response对象。</p><h4 id="Response对象"><a href="#Response对象" class="headerlink" title="Response对象"></a>Response对象</h4><p>Response对象内有下列几个重要属性：</p><p>status_code：如果值是requests.codes.ok，表示获得的网页内容成功。</p><p>text：网页内容。</p><p>如打印网页原始内容：</p><p><img src="/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/image-20201010131817536.png" alt="image-20201010131817536"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/image-20201010131839717.png" alt="image-20201010131839717"></p><h4 id="搜索网页特定内容"><a href="#搜索网页特定内容" class="headerlink" title="搜索网页特定内容"></a>搜索网页特定内容</h4><p>网页内容下载后，如果我们想要搜寻特定字符串，可以使用许多方法。</p><p><img src="/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/image-20201010131958962.png" alt="image-20201010131958962"></p><h4 id="网页服务器阻挡造成读取错误"><a href="#网页服务器阻挡造成读取错误" class="headerlink" title="网页服务器阻挡造成读取错误"></a>网页服务器阻挡造成读取错误</h4><p>有些网页也许基于安全原因，或是不想让太多网络爬虫造访造成网络流量增加，因此会设计程序阻挡网络爬虫提取信息，碰上这类问题就会产生406的错误，如下所示：</p><p><img src="/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/image-20201010132122203.png" alt="image-20201010132122203"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/image-20201010132144213.png" alt="image-20201010132144213"></p><p>406错误就是网页服务器阻挡。</p><h4 id="爬虫伪装成浏览器"><a href="#爬虫伪装成浏览器" class="headerlink" title="爬虫伪装成浏览器"></a>爬虫伪装成浏览器</h4><p>为了解决爬虫程序被服务器阻挡的困扰，我们可以将所设计的爬虫程序伪装成浏览器，方法是在程序前端加上headers内容。</p><p><img src="/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/image-20201010132308670.png" alt="image-20201010132308670"></p><h4 id="存储下载的网页"><a href="#存储下载的网页" class="headerlink" title="存储下载的网页"></a>存储下载的网页</h4><p>使用requests.get( )获得网页内容时，是存储在Response对象类型内，如果要将这类型的对象存入硬盘内，需使用Response对象的iter_content( )方法，这个方法是采用重复迭代方式将Response对象内容写入指定的文件内，每次写入指定扇区大小是以Bytes为单位，一般可以设定1024×5或1024×10或更多。</p><p><img src="/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/image-20201010132437922.png" alt="image-20201010132437922"></p><h2 id="查看网页原始文件"><a href="#查看网页原始文件" class="headerlink" title="查看网页原始文件"></a>查看网页原始文件</h2><p>检视网页的原始文件目的，主要是掌握几个关键重点，然后提取我们想要的数据。</p><p>如果使用的是Chrome浏览器，将鼠标光标放在网页上单击鼠标右键，打开快捷菜单，再执行View page source指令，也可以打开新窗口显示此网页的HTML原始文件。</p><h2 id="BeautifulSoup模块"><a href="#BeautifulSoup模块" class="headerlink" title="BeautifulSoup模块"></a>BeautifulSoup模块</h2><p>使用BeautifulSoup模块解析HTML文件，目前这个模块是第4版，模块名称是beautifulsoup4。安装模块指令为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install beautifulsoup4</span><br></pre></td></tr></table></figure><p>导入模块时，可以使用指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import bs4</span><br></pre></td></tr></table></figure><h4 id="建立beautifulsoup对象"><a href="#建立beautifulsoup对象" class="headerlink" title="建立beautifulsoup对象"></a>建立beautifulsoup对象</h4><p>建立BeautifulSoup对象的语法为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">htmlfile &#x3D; request.get(&#39;www.baidu.com&#39;)  #下载网页内容</span><br><span class="line"></span><br><span class="line">obj &#x3D; bs4.BeautifulSoup(htmlfile.text,&#39;lxml&#39;) #lxml是解析HTML文件的方式</span><br></pre></td></tr></table></figure><p>当网页下载后，将网页内容的Response对象传给bs4.BeautifulSoup( )方法，就可以建立BeautifulSoup对象。至于另一个参数“lxml”目的是注明解析HTML文件的方法，常用的有下列方法：</p><p>‘html.parser’：这是老旧的方法(3.2.3版本前)，兼容性比较不好。</p><p>‘lxml’：速度快，兼容性佳。</p><p>html5lib’：速度比较慢，但是解析能力强，需另外安装html5lib（pip install html5lib）。</p><h4 id="页标题title属性"><a href="#页标题title属性" class="headerlink" title="页标题title属性"></a>页标题title属性</h4><p>BeautifulSoup对象的title属性可以传回页标题的title标签内容。</p><p>如使用title属性解析myhtml.html文件的页标题：</p><p><img src="/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/image-20201010133703575.png" alt="image-20201010133703575"></p><h4 id="传回文字text属性"><a href="#传回文字text属性" class="headerlink" title="传回文字text属性"></a>传回文字text属性</h4><p>可以使用text属性获得卷标的内容。</p><p><img src="/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/image-20201010133921608.png" alt="image-20201010133921608"></p><h4 id="传回第一个符合的标签find"><a href="#传回第一个符合的标签find" class="headerlink" title="传回第一个符合的标签find()"></a>传回第一个符合的标签find()</h4><p>这个函数可以找寻HTML文件内第一个符合的标签内容，例如，find(‘h1’)是要找第一个h1的标签。如果找到了就传回该卷标字符串，可以使用text属性获得内容，如果没找到就传回None。</p><p><img src="/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/image-20201010134345317.png" alt="image-20201010134345317"></p><h4 id="传回所有符合的标签find-all"><a href="#传回所有符合的标签find-all" class="headerlink" title="传回所有符合的标签find all()"></a>传回所有符合的标签find all()</h4><p>这个函数可以找寻HTML文件内所有符合的标签内容，例如，find_all(‘h1’)是要找所有h1的标签。如果找到了就传回该标签列表，如果没找到就传回空列表。</p><p><img src="/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/image-20201010134500430.png" alt="image-20201010134500430"></p><h4 id="HTML元素上下文属性与getText"><a href="#HTML元素上下文属性与getText" class="headerlink" title="HTML元素上下文属性与getText( )"></a>HTML元素上下文属性与getText( )</h4><p>HTML元素内容的属性有下列3种：</p><p>textContent：内容，不含任何标签码。</p><p>innerHTML：元素内容，含子卷标码，但是不含本身标签码。</p><p>outerHTML：元素内容，含子卷标码，也含本身标签码。</p><p>如果有一个元素内容如下：</p><p><img src="/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/image-20201010134812644.png" alt="image-20201010134812644"></p><p>则3个属性的内容分别如下：</p><p><img src="/2020/10/10/Python-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/image-20201010135004153.png" alt="image-20201010135004153"></p><p>使用BeautifulSoup模块解析HTML文件时，如果传回的是列表，也可以配合索引应用getText( )取得列表元素内容，所取得的内容是textContent。</p><h4 id="select"><a href="#select" class="headerlink" title="select( )"></a>select( )</h4><p>select( )主要是以CSS选择器(selector)的观念寻找元素，如果找到，回传的是列表(list)，如果找不到则传回空列表。</p><p>使用示例如下：</p><p>objSoup.select(‘p’)：找寻所有&lt;</p><p>&gt;卷标的元素。</p><p>objSoup.select (‘img’)：找寻所有&lt;<img>&gt;卷标的元素。</p><p>objSoup.select (‘.happy’)：找寻所有CSS class属性为happy的元素。</p><p>objSoup.select (‘#author’)：找寻所有CSS id属性为author的元素。</p><p>objSoup.select (‘p #author’)：找寻所有</p><p>且id属性为author的元素。</p><p>objSoup.select (‘p .happy’)：找寻所有</p><p>且class属性为happy的元素。</p><p>objSoup.select (‘div strong’)：找寻所有在<section>元素内的<strong>元素。</strong></section></p><p>objSoup.select (‘input[name]’)：找寻所有<input>卷标且有name属性的元素。</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python-处理excel文件</title>
    <link href="http://yoursite.com/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2020/10/10/Python-处理excel文件/</id>
    <published>2020-10-10T03:03:04.000Z</published>
    <updated>2020-10-10T04:53:50.409Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p>Excel是电子表格软件，主要是做数据的统计与分析。有时候我们可能会需要从数百或更多电子表格中依条件复制一些数据到其他表格，或是从数百或更多数据表中搜寻符合特定条件的数据等，这些皆是符合使用Python处理的条件。</p><p>需要使用外部模块openpyxl,安装指令为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install openpyxl</span><br></pre></td></tr></table></figure><p>导入模块指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br></pre></td></tr></table></figure><h2 id="EXCEL窗口"><a href="#EXCEL窗口" class="headerlink" title="EXCEL窗口"></a>EXCEL窗口</h2><p>Microsoft Excel窗口如下：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010110629013.png" alt="image-20201010110629013"></p><p>Microsoft Excel文件的扩展名是xlsx，下列是一些基本名词。</p><p>1、工作簿(workbook)：Excel的文件又称工作簿。</p><p>2、工作表(worksheet)：一个工作簿由不同数量的工作表组成。</p><p>3、栏(column)：工作表的栏名称是A、B、……</p><p>4、行(row)：工作表的行名称是1、2、……</p><p>5、单元格(cell)：工作表内的每一个格子称单元格，用(栏名, 行名)代表。</p><h2 id="读取EXCEL文件"><a href="#读取EXCEL文件" class="headerlink" title="读取EXCEL文件"></a>读取EXCEL文件</h2><h4 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h4><p>导入openpyxl模块后，可以使用openpyxl.load_workbook( )方法打开Excel文件，然后可以回传Excel文件对象。</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010111007456.png" alt="image-20201010111007456"></p><h4 id="取得工作表worksheet名称"><a href="#取得工作表worksheet名称" class="headerlink" title="取得工作表worksheet名称"></a>取得工作表worksheet名称</h4><p>可以使用get_sheet_names( )取得所打开工作簿文件的所有工作表，工作表将以列表数据类型回传。get_active_sheet( )可以取得当前工作表的名称，这里所指的当前工作表是打开文件后自动显示的工作表名称。</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010111132003.png" alt="image-20201010111132003"></p><h4 id="设定当前工作的工作表"><a href="#设定当前工作的工作表" class="headerlink" title="设定当前工作的工作表"></a>设定当前工作的工作表</h4><p>使用Python操作Excel文件时，可能需随时更改当前工作表，可以使用get_sheet_by_name( )，然后将要设为当前工作表的名称当做这个方法的参数。</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010111430749.png" alt="image-20201010111430749"></p><h4 id="取得工作表的内容"><a href="#取得工作表的内容" class="headerlink" title="取得工作表的内容"></a>取得工作表的内容</h4><p>有了当前工作表对象ws，可以用下列方式取得单元格内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ws[&#39;栏行&#39;].value   #栏是A、B，行是1、2</span><br></pre></td></tr></table></figure><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010111645958.png" alt="image-20201010111645958"></p><p>除了可以使用value属性取得单元格内容外，也可以使用row、column或coordinate取得单元格相对位置信息。</p><h4 id="取得工作表内容的栏数和行数"><a href="#取得工作表内容的栏数和行数" class="headerlink" title="取得工作表内容的栏数和行数"></a>取得工作表内容的栏数和行数</h4><p>对于当前工作表对象而言，max_column和max_row可以分别传回工作表内容的栏数和行数。</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010111822823.png" alt="image-20201010111822823"></p><h4 id="取得单元格的内容"><a href="#取得单元格的内容" class="headerlink" title="取得单元格的内容"></a>取得单元格的内容</h4><p>使用“ws[‘栏列’].value”取得单元格内容，也可以使用cell( )方法取得单元格内容，此时其语法格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ws.cell(column&#x3D;N,row&#x3D;M)  #N是栏编号，M是行编号</span><br></pre></td></tr></table></figure><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010112107454.png" alt="image-20201010112107454"></p><h4 id="工作表对象的rows和columns"><a href="#工作表对象的rows和columns" class="headerlink" title="工作表对象的rows和columns"></a>工作表对象的rows和columns</h4><p>当建立工作表对象ws成功后，会自动产生下列数据产生器(generators)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ws.rows:数据产生器以行的方式包裹</span><br><span class="line">ws.columns:数据产生器以栏的方式包裹</span><br></pre></td></tr></table></figure><p>由于ws.rows和ws.columns是数据产生器，若是想取得它的内容须先将它们转成列表(list)，然后就可以用索引方式取得。列出特定行与栏的信息。</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010113605914.png" alt="image-20201010113605914"></p><p>对于数据产生器而言，我们可以使用逐行方式获得全部的工作表内容。</p><p>如使用逐行方式获取工作表全部内容：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010113728116.png" alt="image-20201010113728116"></p><p>使用逐栏方式获得全部的工作表内容：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010113905254.png" alt="image-20201010113905254"></p><h4 id="用整数取代域名"><a href="#用整数取代域名" class="headerlink" title="用整数取代域名"></a>用整数取代域名</h4><p>在Excel中栏名称是A、B、…、Z、AA、AB、AC、……例如，1代表A、2代表B、26代表Z、27代表AA、28代表AB。如果工作表的栏数很多，无法清楚了解到底索引是多少，转化方法为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get_column_letter(数值)   #将数值转化为字母</span><br><span class="line">column_index_from_string(字母)  #将字母转化为数值</span><br></pre></td></tr></table></figure><p>方法存在于openpyxl.utils模块内，程序前面要加上下列指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from openpyxl.utils import get_column_letter,column_index_from_string</span><br></pre></td></tr></table></figure><p>如将字段的字母转成数值与将数值转成字母：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010114530962.png" alt="image-20201010114530962"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010114607986.png" alt="image-20201010114607986"></p><h4 id="切片读取"><a href="#切片读取" class="headerlink" title="切片读取"></a>切片读取</h4><p>使用切片的观念读取某区间数据，例如，读取A3:E6数据可用下列方法：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010114705059.png" alt="image-20201010114705059"></p><h2 id="写入EXCEL文件"><a href="#写入EXCEL文件" class="headerlink" title="写入EXCEL文件"></a>写入EXCEL文件</h2><h4 id="建立EXCEL文件"><a href="#建立EXCEL文件" class="headerlink" title="建立EXCEL文件"></a>建立EXCEL文件</h4><p>openpyxl.Workbook( )可以建立空白的工作簿，默认所建立的文件是可擦写，如果想要设为只写模式，可以加上write_only=True参数。</p><h4 id="存储EXCEL文件"><a href="#存储EXCEL文件" class="headerlink" title="存储EXCEL文件"></a>存储EXCEL文件</h4><p>save( )方法可以存储Excel文件，这个方法需由Excel文件对象启动，先前我们是使用wb(workbook)当作文件对象的变量，使用语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wb.save(文件名)</span><br></pre></td></tr></table></figure><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010120423938.png" alt="image-20201010120423938"></p><h4 id="复制excel文件"><a href="#复制excel文件" class="headerlink" title="复制excel文件"></a>复制excel文件</h4><p>可以打开文件，然后新名称存储文件方式达到复制Excel文件的效果。</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010120853984.png" alt="image-20201010120853984"></p><h4 id="建立工作表"><a href="#建立工作表" class="headerlink" title="建立工作表"></a>建立工作表</h4><p>create_sheet( )可以在工作簿内建立新的工作表。</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010121838590.png" alt="image-20201010121838590"></p><h4 id="删除工作表"><a href="#删除工作表" class="headerlink" title="删除工作表"></a>删除工作表</h4><p>删除工作表可以使用remove_sheet( )方法，在使用时并不是直接将工作表名称当参数，必须使用工作簿对象wb调用get_sheet_by_name( )当作参数。</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010122006529.png" alt="image-20201010122006529"></p><h4 id="写入单元格"><a href="#写入单元格" class="headerlink" title="写入单元格"></a>写入单元格</h4><p>如果想要写入资料，只要设定该单元格的值即可。</p><p>如将资料写入单元格：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010122307377.png" alt="image-20201010122307377"></p><h4 id="将列表数据写入单元格"><a href="#将列表数据写入单元格" class="headerlink" title="将列表数据写入单元格"></a>将列表数据写入单元格</h4><p>可以使用append( )方法将列表资料写入单元格，append这个名词有附加的意义，如果当前工作表没有资料，append( )可将数据从第一行(row)开始写入，如果当前工作表已经有数据，可将数据从已有数据的下一行开始写入。</p><p>如在空白工作表使用append( )输入列表数据：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010122542596.png" alt="image-20201010122542596"></p><h2 id="设定单元格的字体"><a href="#设定单元格的字体" class="headerlink" title="设定单元格的字体"></a>设定单元格的字体</h2><h4 id="font"><a href="#font" class="headerlink" title="font()"></a>font()</h4><p>Font对象主要功能是执行字体相关的设定，可以使用Font( )方法设定此对象，有了Font对象后就可以将它应用在单元格。这个方法常见的参数如下：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010122701729.png" alt="image-20201010122701729"></p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010122755848.png" alt="image-20201010122755848"></p><h4 id="字体色彩的设定"><a href="#字体色彩的设定" class="headerlink" title="字体色彩的设定"></a>字体色彩的设定</h4><p>所有颜色可以使用3个原色red(红色)、green(绿色)和blue(蓝色)，每个颜色数值在0—255间组成。Font( )方法内的参数color的值“FFFFFF”，分别代表Red、Green和Blue，下列是常见的256种颜色组合。</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010123010251.png" alt="image-20201010123010251"></p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010123052984.png" alt="image-20201010123052984"></p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010123119468.png" alt="image-20201010123119468"></p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010123144636.png" alt="image-20201010123144636"></p><h2 id="数学公式的使用"><a href="#数学公式的使用" class="headerlink" title="数学公式的使用"></a>数学公式的使用</h2><p>常见的数学公式如下：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010123337671.png" alt="image-20201010123337671"></p><p>如计算B1:B3单元格区间的加总、平均、最高分、最低分。</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010123518713.png" alt="image-20201010123518713"></p><h2 id="设定单元格高度宽度"><a href="#设定单元格高度宽度" class="headerlink" title="设定单元格高度宽度"></a>设定单元格高度宽度</h2><p>单元格预设的高度是12.75pt，72pt等于1英寸。可以使用column_dimensions属性设定行高。单元格默认的宽度是8.43个英文字符宽度，可以使用row_dimensions设定单元格的宽度。如果将高度或宽度设为0，则具有隐藏单元格效果。</p><p>如设定第一行(row)高度和第B栏(column)宽度：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010123642323.png" alt="image-20201010123642323"></p><h2 id="单元格对齐方式"><a href="#单元格对齐方式" class="headerlink" title="单元格对齐方式"></a>单元格对齐方式</h2><p>可以使用Alignment( )方法，须在程序前方导入下列模块。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from openpyxl.styles import Alignment</span><br></pre></td></tr></table></figure><p>Alignment( )方法内可以有下列2个参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">horizontal：可以设定left(靠左)、center(居中)、right(靠右)对齐。</span><br><span class="line"></span><br><span class="line">vertical：可以设定top(靠上)、center(居中)、bottom(靠下)对齐。</span><br></pre></td></tr></table></figure><p>整个单元格设定的完整公式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ws[&#39;A1&#39;].alignment &#x3D; Alignment()</span><br></pre></td></tr></table></figure><h2 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h2><h4 id="合并单元格-1"><a href="#合并单元格-1" class="headerlink" title="合并单元格"></a>合并单元格</h4><p>可以使用merge_cells( )合并单元格，可以合并同一行(row)、同一栏(column)或一个区间的单元格。</p><h4 id="取消合并单元格"><a href="#取消合并单元格" class="headerlink" title="取消合并单元格"></a>取消合并单元格</h4><p>可以使用unmerge_cells( )取消合并单元格。</p><h2 id="建立图表"><a href="#建立图表" class="headerlink" title="建立图表"></a>建立图表</h2><p>Python可以建立的图表有许多，所有Excel可以建立的图表皆可使用Python建立，为了建立图表可以更方便地导入图表模块，程序需导入下列图表方法。BarChart(柱形图)、BarChart3D(3D柱形图)、PieChart(饼图)、PieChart3D(3D饼图)、BubbleChart(泡泡图)、AreaChart(分区图)、AreaChart3D(3D分区图)、LineChart(线段图)、LineChart3D(3D线段图)、RadarChart(雷达图)、StockChart(股票图)。上述英文名称就是建立图表的方法，导入方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from openpyxl.chart import BarChart,Reference #以导入BarChart为例</span><br></pre></td></tr></table></figure><p>另外需导入Reference方法，这个方法主要是供我们将建立图表所需的工作表数据或是卷标名称(有时也可称轴的卷标)数据导入所建的图表对象内。</p><h4 id="柱形图"><a href="#柱形图" class="headerlink" title="柱形图"></a>柱形图</h4><p>最常见的图表应用，主要是显示多组数据于一段时间的变化，从此类型也可以了解各组资料间比较的情形，应用时通常数值数据是在纵轴(y轴)，而标记是在横轴(x轴)。</p><p>如建立深石软件2020—2021年销售报表。</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010124641750.png" alt="image-20201010124641750"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010124706829.png" alt="image-20201010124706829"></p><h4 id="3D柱形图"><a href="#3D柱形图" class="headerlink" title="3D柱形图"></a>3D柱形图</h4><p>要建立3D柱形图表，只要导入BarChart3D。</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010124945532.png" alt="image-20201010124945532"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010125008131.png" alt="image-20201010125008131"></p><h4 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h4><p>饼图(PieChart)只适合一个数据系列，主要是供了解单笔数据相对于整体数据的关系比。</p><p>如将员工旅游意向调查表处理成饼图：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010125118771.png" alt="image-20201010125118771"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010125146949.png" alt="image-20201010125146949"></p><h4 id="3D饼图"><a href="#3D饼图" class="headerlink" title="3D饼图"></a>3D饼图</h4><p>要建立3D饼图表就很简单，只要导入PieChart3D。</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010125237535.png" alt="image-20201010125237535"></p><p>执行结果：</p><p><img src="/2020/10/10/Python-%E5%A4%84%E7%90%86excel%E6%96%87%E4%BB%B6/image-20201010125300188.png" alt="image-20201010125300188"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python-处理PDF文件</title>
    <link href="http://yoursite.com/2020/10/09/Python-%E5%A4%84%E7%90%86PDF%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2020/10/09/Python-处理PDF文件/</id>
    <published>2020-10-09T08:58:37.000Z</published>
    <updated>2020-10-10T02:58:33.403Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p>需要使用外部模块PyPDF2，安装此模块时指令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install PyPDF2</span><br></pre></td></tr></table></figure><p>导入模块指令为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import PyPDF2</span><br></pre></td></tr></table></figure><h2 id="打开PDF文件"><a href="#打开PDF文件" class="headerlink" title="打开PDF文件"></a>打开PDF文件</h2><p>使用open( )打开PDF文件，语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mypdf &#x3D; open(&#39;pdf_file&#39;,&#39;rb&#39;)  #rb代表以二进制打开</span><br></pre></td></tr></table></figure><p>pdf_file是要打开的文件，打开成功后会传回所打开PDF文件的文件对象。</p><h2 id="获得PDF文件的页数"><a href="#获得PDF文件的页数" class="headerlink" title="获得PDF文件的页数"></a>获得PDF文件的页数</h2><p>打开PDF文件成功后，可以使用PdfFileReader( )方法读取这个PDF文件，语法为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pdfrd &#x3D; PyPDF2.PdfFileReader(mypdf)  读取PDF内容</span><br></pre></td></tr></table></figure><p>将所读取的内容放在pdfRd对象变量内，这个对象变量内含numPages属性记录此PDF文件的页数。</p><p>如计算travel.pdf的页数：</p><p><img src="/2020/10/09/Python-%E5%A4%84%E7%90%86PDF%E6%96%87%E4%BB%B6/image-20201009170922330.png" alt="image-20201009170922330"></p><h2 id="读取PDF页面内容"><a href="#读取PDF页面内容" class="headerlink" title="读取PDF页面内容"></a>读取PDF页面内容</h2><p>使用PdfFileReader( )方法读取这个PDF文件后，可以使用getPage(n)取得第n页的PDF内容，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pdfcontent &#x3D; pdfrd.getPage(n)  #读取第n页内容</span><br></pre></td></tr></table></figure><p>PDF页面也是从第0页开始计算，页面内容被读入pdfContentObj对象后，可以使用extractText( )取得该页的字符串内容。需留意，PyPDF2模块对于读取英文文件，比较没有障碍，对于中文内容会出现乱码。另外，PyPDF2无法读取图表或表格数据。</p><p>如读取travel.pdf的第0页内容：</p><p><img src="/2020/10/09/Python-%E5%A4%84%E7%90%86PDF%E6%96%87%E4%BB%B6/image-20201009173327722.png" alt="image-20201009173327722"></p><h2 id="检查PDF是否加密"><a href="#检查PDF是否加密" class="headerlink" title="检查PDF是否加密"></a>检查PDF是否加密</h2><p>初次执行“pdfRd = PyPDF2.PdfFileReader(pdfObj)”之后，pdfRd对象会有isEncryted属性，如果此属性是True，表示文件有加密。如果此属性是False，表示文件没有加密。</p><p>检查文件是否加密：</p><p><img src="/2020/10/09/Python-%E5%A4%84%E7%90%86PDF%E6%96%87%E4%BB%B6/image-20201009174520989.png" alt="image-20201009174520989"></p><h2 id="解密PDF文件"><a href="#解密PDF文件" class="headerlink" title="解密PDF文件"></a>解密PDF文件</h2><p>对于加密的PDF文件，我们可以使用decrypt( )执行解密，如果解密成功decrypt( )会传回1，如果失败则传回0。使用decrypt( )解密时，是解pdfRd对象的密码不是整份PDF，未来如果其他程序要使用这个PDF，仍须执行解密才可阅读使用。</p><p><img src="/2020/10/09/Python-%E5%A4%84%E7%90%86PDF%E6%96%87%E4%BB%B6/image-20201010105023956.png" alt="image-20201010105023956"></p><h2 id="PDF页面的旋转"><a href="#PDF页面的旋转" class="headerlink" title="PDF页面的旋转"></a>PDF页面的旋转</h2><p>在浏览PDF文件时，可以旋转PDF页面。rotateClockwise( )可以执行页面顺时针旋转，rotateCounterClockwise( )可以执行逆时针旋转。在这2个方法内可以传入90、180、270度执行旋转工作。</p><p>如将travel.pdf的第0页旋转90度，然后存入out18_7.pdf：</p><p><img src="/2020/10/09/Python-%E5%A4%84%E7%90%86PDF%E6%96%87%E4%BB%B6/image-20201010105210795.png" alt="image-20201010105210795"></p><h2 id="加密PDF文件"><a href="#加密PDF文件" class="headerlink" title="加密PDF文件"></a>加密PDF文件</h2><p>要将PDF文件加密，可以在将pdfWr对象正式使用write( )方法写入前调用encrypt( )执行，加密的密码当作参数放在encrypt( )方法内。</p><p>如将travel.pdf文件加密储存在output.pdf内，密码是deepstone。</p><p><img src="/2020/10/09/Python-%E5%A4%84%E7%90%86PDF%E6%96%87%E4%BB%B6/image-20201010105319452.png" alt="image-20201010105319452"></p><h2 id="python破解密码"><a href="#python破解密码" class="headerlink" title="python破解密码"></a>python破解密码</h2><p>如果密码是由3个阿拉伯数字组成，表示有3个位数，每个位数是由0-1所组成。</p><p>破解3位数字的密码，破解程序执行过程会将所测试失败的密码不断打印出来直到找到密码。</p><p><img src="/2020/10/09/Python-%E5%A4%84%E7%90%86PDF%E6%96%87%E4%BB%B6/image-20201010105623720.png" alt="image-20201010105623720"></p><p>如果密码位数比较多，只要增加循环数即可。密码一般是由英文字母组成，其实用英文字母也可以，只不过是增加一些转换上的问题。</p><p>如设定密码位数有3位，是由纯英文字母大写所组成。由于有26个英文字母，所以所有循环均是执行26圈，range(1, 26)，由于字母A的Unicode是65，所以i1(i2或i3也是)值加上64就会是相对应的英文字母。</p><p><img src="/2020/10/09/Python-%E5%A4%84%E7%90%86PDF%E6%96%87%E4%BB%B6/image-20201010105757455.png" alt="image-20201010105757455"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
</feed>
